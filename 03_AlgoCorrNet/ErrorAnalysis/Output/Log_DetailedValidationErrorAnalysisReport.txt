Problem Difficulty: D
Problem Statement:
 There are left boots and right boots Each boot has a color which is denoted as a lowercase Latin letter or a question mark Thus you are given two strings and both of length The character stands for the color of the th left boot and the character stands for the color of the th right boot A lowercase Latin letter denotes a specific color but the question mark denotes an indefinite color Two specific colors are if they are exactly the same An indefinite color is with any specific or indefinite color For example the following pairs of colors are compatible and The following pairs of colors are compatible and Compute the maximum number of pairs of boots such that there is one left and one right boot in a pair and their colors are compatible Print the maximum number of such pairs and the pairs themselves A boot can be part of at most one pair 
Problem Editorial:
 Use greedy approach in this problem At first match such pairs that colors are exactly the same and they are specific not indefinite After it match each indefinite colored left boot if any with any specific colored right boot Possibly some indefinite colored left boots stay unmatched Similarly match each indefinite colored right boot if any with any specific colored left boot And finally match indefinite colored left and right boots if any 

Problem Difficulty: B
Problem Statement:
 The girl Taylor has a beautiful calendar for the year In the calendar all days are given with their days of week Monday Tuesday Wednesday Thursday Friday Saturday and Sunday The calendar is so beautiful that she wants to know what is the next year after when the calendar will be exactly the same Help Taylor to find that year Note that leap years has days The year is leap if it is divisible by or it is divisible by but not by https en wikipedia org wiki Leap year 
Problem Editorial:
 Two calendars are same if and only if they have the same number of days and starts with the same day of a week So we should simply iterate over years and maintain the day of a week of January 1st for example Easy to see that the day of a week increases by one each year except of the leap years when it increases by two 

Problem Difficulty: D
Problem Statement:
 There is a robot staying at on the axis He has to walk to You are controlling this robot and controlling how he goes The robot has a battery and an accumulator with a solar panel The th segment of the path from to can be exposed to sunlight or not The array denotes which segments are exposed to sunlight if segment is exposed then otherwise The robot has one battery of capacity and one accumulator of capacity For each segment you should choose which type of energy storage robot will use to go to the next point it can be either battery or accumulator If the robot goes using the battery the current charge of the battery is decreased by one the robot can t use the battery if its charge is zero And if the robot goes using the accumulator the current charge of the accumulator is decreased by one and the robot also can t use the accumulator if its charge is zero If the current segment is and the robot goes through it the charge of the accumulator increases by one of course its charge can t become higher than it s maximum capacity If accumulator is used to pass some segment its charge decreases by 1 no matter if the segment is exposed or not You understand that it is not always possible to walk to You want your robot to go as far as possible Find the maximum number of segments of distance the robot can pass if you control him optimally 
Problem Editorial:
 Let s simulate the process of walking and maintain the current charges of the battery and the accumulator carefully choosing which to use each time we want to pass a segment Obviously if at the beginning of some segment our battery is exhausted its current charge is we must use the accumulator to continue and vice versa What if we can use both types of energy storage If we can recharge the accumulator the current segment is exposed the current charge of accumulator is lower than its initial charge let s do it because it only consumes one charge of the battery and there is no better way to spend it And if we cannot recharge the accumulator it s optimal to use it instead of the battery suppose it s not right our solution uses the accumulator during current moment of time and the battery during some moment in future but optimal solution does vice versa Then the usage of the battery in optimal solution does not grant us any additional charges so we can instead swap our decisions in these moments use the accumulator right now and the battery later and the answer won t get worse So what s left is to carefully implement the simulation keeping track of charges and choosing what to use according to aforementioned rules 

Problem Difficulty: C
Problem Statement:
 You are given a string consisting of lowercase Latin letters Polycarp wants to remove exactly characters from the string Polycarp uses the following algorithm times if there is at least one letter remove the leftmost occurrence and stop the algorithm otherwise go to next item if there is at least one letter remove the leftmost occurrence and stop the algorithm otherwise go to next item remove the leftmost occurrence of the letter and stop the algorithm This algorithm removes a single letter from the string Polycarp performs this algorithm exactly times thus removing exactly characters Help Polycarp find the resulting string 
Problem Editorial:
 Let the lowercase Latin letters be indexed from to There are exists at least two different solutions If exit the program Otherwise count the number of occurrences of each letter from to Let it be Now find the alphabetically smallest letter that will be in the resulting string It can be done as follows iterate over all from to and if then subtract it from otherwise will be the smallest letter that will be in the resulting string But we possibly need to remove some number of its leftmost occurrences It is obvious that letters smaller than will not appear in the resulting string Also the leftmost occurrences of letter will be removed Now let s iterate over all letters in string from left to right and construct the resulting string If the current character of let it be is smaller than then do nothing If is greater than then add it to Otherwise If then decrease by one otherwise add to The time complexity is Another solution is the following Let s carry the vector of pairs where is the th character of and is its position If we sort this vector with the standard compare function it is easy to see that the first elements of this vector will be removed from the input string Then if we will sort the last elements of this vector by its positions in the input string in increasing order we will obtain the answer The time complexity is 

Problem Difficulty: C
Problem Statement:
 Polycarp was given a row of tiles Each tile contains one lowercase letter of the Latin alphabet The entire sequence of tiles forms the string In other words you are given a string consisting of lowercase Latin letters Initially Polycarp is on the tile of the row and wants to get to the tile by jumping on the tiles Jumping from th tile to th tile has a cost equal to where is the index of the letter in the alphabet for example Polycarp wants to get to the th tile for the minimum total cost but at the same time make number of jumps In other words among all possible ways to get to the last tile for the total cost he will choose the one with the number of jumps Polycarp can visit each tile Polycarp asks you to help print the sequence of indices of string on which he should jump 
Problem Editorial:
 It s worth knowing that ways like and have the same cost That is first you need to understand the letter on the first tile and the last one conditionally the letters and Then you just need to find all such tiles on which the letters are between the letters and inclusive We go through each letter from to and for each letter we visit every tile that has a given letter but we must not forget to start exactly at tile and end at tile 

Problem Difficulty: G
Problem Statement:
 Let s analyze a program written on some strange programming language The variables in this language have names consisting of to characters and each character is a lowercase or an uppercase Latin letter or a digit There is an extra constraint that the first character should not be a digit There are four types of operations in the program each denoted by one of the characters or Each line of the program has one of the following formats where and are valid variable names where and are valid variable names and op is an operation character The program is executed line by line and the result of execution is stored in a variable having the name If is never assigned in the program then the result will be equal to the value of before running the program Two programs are called equivalent if no matter which operations do characters and denote but obviously performing the same operation on the same arguments gives the same result and which values do variables have before execution of program the value of after running the first program is equal to the value of after running the second program the programs are executed independently You are given a program consisting of lines Your task is to write a program consisting of minimum possible number of lines that is equivalent to the program you are given 
Problem Editorial:
 I could ve explained the jury solution however after the contest I found a much easier and more understandable solution by one of the participants I put one of jury s solutions under the spoiler along with a link to the solution I m explaining Let s restate the problem in a more convinient way Initially we are given some directed acyclic graph Let there be nodes of two kinds For a direct set operation These will have a single outgoing edge to another node For a binary operation These will have two outgoing edges to other nodes However it s important which edge is the left one and which is the right one We also have to make dummy vertices for the variables which only appeared at the right side of some operation We are allowed to remove any direct set operations we will simulate this by compressing the edges of the graph Instead of doing we ll do Value wise this is the same but variable don t rely on anymore so might be deleted We ll build the entire graph line by line Let s maintain array which will keep the current value of each variable It will store the node itself It s probably better to store both kinds of nodes in a separate array so that and the pointers to the ends of the edges could be integers If we encountered no variable getting set then the answer is 0 Otherwise let s traverse from the node representing the current value of to every reachable node While building the graph we were compressing every unoptimal operation thus all reachable nodes matter Finally the last operation on might have been just a direct set That s unoptimal so we ll handle that case separately 

Problem Difficulty: B
Problem Statement:
 Polycarp has positive integers and He can perform the following operation Choose a integer and multiply of the integers or by Can Polycarp make it so that after performing the operation the sequence of three numbers forms an arithmetic progression Note that you the order of and Formally a sequence is called an arithmetic progression AP if there exists a number called common difference such that for all from to In this problem For example the following sequences are AP and The following sequences are not AP and You need to answer independent test cases 
Problem Editorial:
 Let s iterate over the number that we want to multiply by How can we check that we can multiply the current number so that an AP is formed Note that those numbers that we do not touch should form an AP themselves For instance let at the current operation we want somehow multiply the number Then and Note that Thus we know what is Also we know that Let s check if is divisible by If yes then we have found the answer if not then move on to the next number We do the same for and Be careful with non positive numbers integer divisions and other edge cases 

Problem Difficulty: F
Problem Statement:
 You are given an array with integers and queries Each query is described by two integers Let s define the function The function is defined for only For each query print the maximal value of the function over all 
Problem Editorial:
 We gave bad constraints to this problem so some participants solved it in time Note that The values can be simply precomputed Also you can notice that the value is equal to depending on the value modulo Let s use Mo s algorithm we should group all the queries to blocks by the left end and sort all the queries in each block by the right end Let be the maximal left end inside the current group then all left ends will be in distance not greater than from and right ends will be in nondecreasing order so we can move the right end by one total we will made no more than movements in each block During moving of the right end inside some group from the value to the value of the current right end we will maintain two tries the first for the values and the second for the values in the first we will maintain the minimal value of in the second the maximal After adding some values to the trie we should find the maximal value that can be formed by the current value To do that we should go down in the first trie maintaining the invariant that in the current subtree the minimal value is not greater than Each time we should go by the bit that is not equal to the corresponding bit in if we can do that otherwise we should go by the other bit In the second trie we should do the same thing with the difference that we should maintain the invariant that the maximal value in the current subtree is not less than the value After moving the right end we should iterate from the left end of the query to and update the answer without adding the current value to the tries Also after that all we should iterate over all the queries and with new empty tries iterate from the left end to add the current values to the tries and update the answer 

