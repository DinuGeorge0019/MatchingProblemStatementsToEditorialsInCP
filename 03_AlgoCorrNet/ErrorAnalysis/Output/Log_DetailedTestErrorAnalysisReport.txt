Problem Difficulty: F
Problem Statement:
 Let be an array of integers Let s define as a minimal size of a partition of into subsegments such that all elements in each subsegment are equal For example using next partition Now you don t have any exact values of but you know that can be any integer value from uniformly at random All are independent Calculate expected value of or It s guaranteed that the expected value can be represented as rational fraction where so print the value 
Problem Editorial:
 As usual with tasks on an expected value let s denote as indicator function if and otherwise Then we can note that Now we can make some transformations Now we d like to make some casework if and aren t consecutive then and are independent that s why if then need further investigation For the simplicity let s transform segment to by increasing Let s denote as the probability that and Let s denote In result The final observation is the following is equal to the probability that and and can be calculated by inclusion exclusion principle where In result and can be calculated in time 

Problem Difficulty: B
Problem Statement:
 You are given four integers and You should build a sequence where and for each you can choose either or Your goal is to build such a sequence that for all and is maximum possible 
Problem Editorial:
 Strategy is quite easy we go from to and if we take this variant we set otherwise we set Note that all are in range so there won t be any overflow underflow It s also not hard to prove that this strategy maximizes the sum By contradiction suppose the optimal answer has some index where but Let s find first position where and swap operations between and As a result all from were increased while remained the same i e there is no violation of the rules and the total sum increased contradiction 

Problem Difficulty: B
Problem Statement:
 Mikhail walks on a Cartesian plane He starts at the point and in one move he can go to any of eight adjacent points For example if Mikhail is currently at the point he can go to any of the following points in one move If Mikhail goes from the point to the point in one move and and then such a move is called a Mikhail has For the th query Mikhail s target is to go to the point from the point in moves Among all possible movements he want to choose one with the maximum number of Your task is to find the maximum number of or find that it is impossible to go from the point to the point in moves Note that Mikhail visit any point any number of times even the destination point 
Problem Editorial:
 There are several cases in this problem If then let s swap them Let be the modulo operator Firstly if then let s decrease and by one Otherwise if let s decrease by one and by two Now if then the answer is otherwise the answer is You can get more clear description of these cases if you will draw some cases on the paper 

Problem Difficulty: D
Problem Statement:
  You are given a string consisting of characters each character is or You are also given an integer Your task is to change the minimum number of characters in the initial string so that after the changes there will be a string of length that is a substring of and is also a substring of the infinite string A string is a substring of string if there exists a positive integer such that For example strings are substrings of the infinite string while and are not You have to answer independent queries 
Problem Editorial:
 In this problem you should make the same as in the previous one but faster Let s consider three offsets of string and Let s copy the current offset of the string so that it will has the length possibly without some trailing characters and save it in the string Then let s compare the string with this offset of length and build an array of length where if Then let s iterate over all possible continuous subsegments of this array and maintain the variable denoting the current answer Firstly for the current position let s add to Then if the current position is greater than or equal to indexed let s decrease by So now we have the continuous subsegment of the array of length no more than Then if the current position is greater than or equal to indexed again the current subsegment has the length then let s update the answer with Then let s do the same with two remaining offsets 

Problem Difficulty: B
Problem Statement:
 Ayush is a cashier at the shopping center Recently his department has started a service which allows users to shop online The store contains items customers have already used the above service Each user paid for items Let denote the th item in the th person s order Due to the space limitations all the items are arranged in one single row When Ayush receives the th order he will find one by one all the items in the row Let denote the position of the item in the row at the moment of its collection Then Ayush takes time equal to for the th customer When Ayush accesses the th element he keeps a new stock in the front of the row and takes away the th element Thus the values are updating Your task is to calculate the total time it takes for Ayush to process all the orders You can assume that the market has endless stock 
Problem Editorial:
 In this problem you should simply do what was written in the problem statement There are no tricks 

Problem Difficulty: C
Problem Statement:
 In the school computer room there are servers which are responsible for processing several computing tasks You know the number of scheduled tasks for each server there are tasks assigned to the th server In order to balance the load for each server you want to reassign some tasks to make the difference between the most loaded server and the least loaded server as small as possible In other words you want to minimize expression where is the most loaded server and is the least loaded one In one second you can reassign a single task Thus in one second you can choose any pair of servers and move a single task from one server to another Write a program to find the minimum number of seconds needed to balance the load of servers 
Problem Editorial:
 Denote s the sum of elements in array If s is divisible by n then the balanced array consists of n elements In this case the difference between maximal and minimal elements is 0 Easy to see that in any other case the answer is greater than 0 On the other hand the array consists of numbers and numbers is balanced with the difference equals to 1 Let s denote this balanced array b To get array b let s sort array a in nonincreasing order and match element ai to element bi Now we should increase some elements and decrease others In one operation we can increase some element and decrease another so the answer is Complexity O nlogn 

Problem Difficulty: E
Problem Statement:
 You are given an array consisting of integers Let s denote of array as an array consisting of integers such that all of the following conditions are met for every pair of indices and such that if then note that if it is still possible that for every index either or For example if then two possible monotonic renumerations of are and Your task is to calculate the number of different monotonic renumerations of The answer may be large so print it modulo 
Problem Editorial:
 We are interested in such subsegments of the array that for every value belonging to this segment all occurences of this value in the array are inside this segment Let s call such segments For example if then and are closed segments We can see that the result is some partition of the given array into several closed segments if for some value all occurences of in do not form a segment in then there exists some pair such that which contradicts the statement and if the formed segment is not a closed segment then for some indices and such that it is not true that which also contradicts the statement Okay let s try to partition the array into closed segments greedily take the first prefix of the array that is a closed segment erase it take the next prefix and so on Let be the number of closed segments we got with this procedure The key fact is that To prove it suppose we partitioned the array in some other way The intersection of two closed segments if it exists is also a closed segment so there exists at least one segment in the partition we picked greedily that can be broken into two but that contradicts the algorithm we used to construct this partition So we may merge some of segments to get a valid partition There are exactly ways to do so because for every pair of adjacent segments we may choose whether we will merge it 

Problem Difficulty: D
Problem Statement:
 Polycarp has to solve exactly problems to improve his programming skill before an important programming competition But this competition will be held very soon most precisely it will start in days It means that Polycarp has exactly days for training Polycarp doesn t want to procrastinate so he wants to solve at least one problem during each of days He also doesn t want to overwork so if he solves problems during some day he should solve no more than problems during the next day And at last he wants to improve his skill so if he solves problems during some day he should solve at least problem during the next day More formally let be the array of numbers of problems solved by Polycarp The th element of this array is the number of problems Polycarp solves during the th day of his training Then the following conditions must be satisfied sum of all for from to should be should be for each from to the condition should be satisfied for each from to Your problem is to find array of length satisfying the conditions above or say that it is impossible to do it 
Problem Editorial:
 I suppose there are some solutions without cases handling but I ll describe my own it handling approximately 5 cases Firstly let nn n frac k k 1 2 If nn 0 then the answer is already Otherwise let s construct the array a where all a i are lfloor frac nn k rfloor except rightmost nn k values they are lceil frac nn k rceil It is easy to see that the sum of this array is nn it is sorted in non decreasing order and the difference between the maximum and the minimum elements is not greater than 1 Let s add 1 to a 1 2 to a 2 and so on this is what we subtract from n at the beginning of the solution Then if nn ne k 1 or k 1 then this answer is correct Otherwise we got some array of kind 1 3 dots a k How do we fix that For k 2 or k 3 there is no answer for this case you can try to prove it or try to find answers for cases n 4 k 2 and n 8 k 3 Otherwise k 3 and we can subtract one from a 2 and add it to a k and this answer will be correct this also can be proved with some easy formulas Time complexity O k 

Problem Difficulty: E
Problem Statement:
 You are given a string of length Each character is either one of the first lowercase Latin letters or a question mark You are asked to replace every question mark with one of the first lowercase Latin letters in such a way that the following value is maximized Let be the maximum length substring of string which consists entirely of the th Latin letter A substring of a string is a contiguous subsequence of that string If the th letter doesn t appear in a string then is equal to The value of a string is the minimum value among for all from to What is the maximum value the string can have 
Problem Editorial:
 Notice that if there are substrings of length for each letter then there are also substrings of length Thus the function on the answer is monotonous so the binary search is applicable Let s have some answer fixed by binary search We have to place blocks of letters of length somewhere in a string If we fix an order these blocks go into the string then the greedy algorithm for placing them works Put each block after the previous one but as far to the left as possible the correctness can be proven by showing that picking not the furthest to the left position can t be more optimal If there exists such an order that all blocks fit then the answer is greater than or equal to The common transition is to move from iterating over permutations to dynamic programming over submasks Let be the smallest prefix of the string such that all blocks of letters from the mask fit into this prefix The transitions are the same pick a new block and place it as early after that prefix as possible So far the solution works pretty slow since for each of masks we have to find the earliest possible position for a block Let s use some precalculations to perform the transitions in Notice that the transition doesn t depend on a mask only on a length of the previous prefix Thus for every prefix and every letter we can save the closest position for a block Let be the closest position for a prefix of length and the th letter is at least equal to However if the block can be placed at the th position then it should be updated That can happen if the closest occurrence of any letter except is not smaller than Thus we can also maintain the closest occurrence of every letter With some smart iterations we can do the precalculations in The dynamic programming works in then Overall complexity 

Problem Difficulty: F
Problem Statement:
 A string of length is called iff is even and for each Ivan has a string consisting of lowercase Latin letters is even He wants to form some string that will be an permutation of Also Ivan has denoted the of index as and the of as the sum of among all indices such that Help Ivan to determine maximum possible of he can get 
Problem Editorial:
 This problem has two different solutions a mincost maxflow approach and a greedy one We will tell you about the latter First of all let Then find all pairs of indices such that let the number of these pairs be It s obvious that we have to replace at least one letter in each of these pairs For each of these pairs let s replace the letter with lower with something Let s analyze the letters we are going to replace Let be the number of occurences of letter that we have to replace There are two cases There is no letter such that Then we can replace these letters without involving anything else and get an antipalindromic string with minimal possible cost There is a letter such that It s obvious that there is at most one such letter Let s replace some occurences of with other letters that are to be replaced Then we will still have some occurences of that need to be replaced Let s take one letter from each pair such that both of letters in a pair are not equal to Among these possibilities choose the required number of letters with minimum values of Then we can replace remaining occurences of with these letters 

Problem Difficulty: A
Problem Statement:
 Polycarp wants to cook a soup To do it he needs to buy exactly liters of water There are only two types of water bottles in the nearby shop liter bottles and liter bottles There are infinitely many bottles of these two types in the shop The bottle of the first type costs burles and the bottle of the second type costs burles correspondingly Polycarp wants to spend as few money as possible Your task is to find the minimum amount of money in burles Polycarp needs to buy exactly liters of water in the nearby shop if the bottle of the first type costs burles and the bottle of the second type costs burles You also have to answer independent queries 
Problem Editorial:
 The answer can be calculated by easy formula where is divided by rounded down and is modulo 

Problem Difficulty: G
Problem Statement:
 A permutation of length is an array which contains every integer from to inclusive and moreover each number appears exactly once For example is a permutation of length For a given number find a permutation in which absolute difference that is the absolute value of difference of any two neighboring adjacent elements is between and inclusive Formally find such permutation that for each Print any such permutation for the given integer or determine that it does not exist 
Problem Editorial:
 If then there is no answer You can do some handwork to be sure Otherwise the answer exists and there is one simple way to construct it firstly let s put all odd integers into the answer in decreasing order then put and all other even numbers in increasing order To test that it always works you can run some kind of checker locally you can check all tests very fast in less than one second this may be very helpful sometimes 

Problem Difficulty: E
Problem Statement:
 You are given an array of integers and a set of distinct integers from to In one operation you may choose two integers and can be any integer and assign This operation can be done only if does not belong to the set Calculate the minimum number of operations you should perform so the array is increasing that is or report that it is impossible 
Problem Editorial:
 First let s solve the problem without blocked positions Let s look at the array Obviously if strictly increases then does not decrease and vice versa Now we have to find the maximum number of positions in the array that can be left unchanged And you can always choose an integer that will not break the non decreasing array for the rest of positions This problem can be solved in by analogy with the largest increasing subsequence but now you can take equal elements Now you can realize that the segments between two blocked positions do not depend on each other and the initial problem can be solved as the problem described above All that remains is to check that all blocked positions do not break the strict array increment 

Problem Difficulty: A
Problem Statement:
 You are given one integer Recall that a permutation of length is an array consisting of distinct integers from to in arbitrary order For example is a permutation of length but is not a permutation appears twice in the array and is also not a permutation but there is in the array Your task is to find a permutation of length that there is no index such that so for all from to the condition should be satisfied You have to answer independent test cases If there are several answers you can print any It can be proven that the answer exists for each 
Problem Editorial:
 There are many possible solutions One of them is just to print 2 3 ldots n 1 

Problem Difficulty: E
Problem Statement:
  You are given a sequence consisting of positive integers Let s define a as the sequence consisting of distinct elements let these elements are and can be equal and is as follows There are integers greater than or equal to For example sequences and are but and are not Your task is to choose the maximum by length of that is a You have to answer independent test cases Recall that the sequence is a a subsequence of the sequence if can be derived from by removing zero or more elements without changing the order of the remaining elements For example if then possible subsequences are and but not and 
Problem Editorial:
 I ll take some definitions from the solution of the easy version so you can read it first if you don t understand something Let be the number of occurrences of on the segment We will try to do almost the same solution as in the easy version The only difference is how do we iterate over all segments corresponding to the second block of the required palindrome Consider some number which we want to use as the number for the first and third blocks If we take occurrences in the first block then we also take occurrences in the third block Let s take these occurrences greedily If we take elements in the first block and also in the third block then it is obviously better to take leftmost and rightmost elements correspondingly Define be the position of the th occurrence of the number indexed So if is the array of length and contains all occurrences of in order from left to right then let s iterate over its left half and fix the amount of numbers we will take in the first block and also in the third block Let it be Then the left border of the segment for the second block is and the right border is So let and and we can update the answer with It is easy to see that the total number of segments we consider is so the total time complexity is there are also solutions not depending on the size of the alphabet at least Mo s algorithm in but all of them are pretty hard to implement so I won t describe them here And I m also interested in solution so if you know it share it with us 

Problem Difficulty: F
Problem Statement:
 Alice and Bob play a game The game consists of several sets and each set consists of several rounds Each round is won either by Alice or by Bob and the set ends when one of the players has won rounds in a row For example if Bob won five rounds in a row and then two sets ends You know that Alice and Bob have already played rounds and you know the results of some rounds For each from to calculate the maximum possible number of sets that could have already finished if each set lasts until one of the players wins rounds in a row It is possible that the last set is still not finished in that case you should not count it in the answer 
Problem Editorial:
 Let s consider the following function minimum index such that there is a substring of string of length consisting of only characters and or and If this function has asymptotic then we can solve problem for Now let s precalculate two array and is equal the maximum integer such that substring consist only characters and is equal the maximum integer such that substring consist only characters and Also let s precalculate the arrays and of size contain all positions such that substring consist only characters and and or contain all positions such that substring consist only characters and and or After that let s solve problem for some Suppose that now we already processed first elements of If or then we increase the answer and change Otherwise we have to find the minimum element denote this element as in or such that If there is no such element then we found the final answer Otherwise let s increase answer and change and continue this algorithm 

Problem Difficulty: A
Problem Statement:
 You are given a string consisting of lowercase Latin letters A substring of string is a continuous segment of letters from For example is a substring of and is not The length of the substring is the number of letters in it Let s call some string of length if and only if there is no letter to appear strictly more than times For example strings and are and strings and are not Your task is to find substring of string or report that there is none Note that it is not required to maximize or minimize the length of the resulting substring 
Problem Editorial:
 Notice that the string of two distinct letter is already diverse That implies that the answer is if and only if all the letters in the string are the same Otherwise you can check all pairs of adjacent letters in Overall complexity 

Problem Difficulty: F
Problem Statement:
 There are communication towers numbered from to and bidirectional wires between them Each tower has a certain set of frequencies that it accepts the th of them accepts frequencies from to Let s say that a tower is accessible from a tower if there exists a frequency and a sequence of towers where consecutive towers in the sequence are directly connected by a wire and each of them accepts frequency Note that accessibility is not transitive i e if is accessible from and is accessible from then may not be accessible from Your task is to determine the towers that are accessible from the st tower 
Problem Editorial:
 Let s consider the sweep line approach by the value of the variable x the vertex i is active from the moment l i to the moment r i And we have to find vertices that are reachable in the graph of active vertices from the vertex 1 So we rephrased the problem as follows there are vertices that are active at some moments and we want to get some information about connectivity during each moment of time This is a standard offline dynamic connectivity problem which can be solved with a divide and conquer approach described here Now we are able to find the connectivity component of the 1 th vertex for each value of x It remains to understand how to combine answers for all values of x fast enough Let s try to visualize the components as vertices of a directed graph We assign a vertex to each component and when two components merge we add two directed edges from the new vertex to the vertices corresponding to the components and now we can use the reachability information in this graph Each vertex of the original graph corresponds to one of the sinks in this graph and sinks that correspond to the vertices of some component are reachable from the vertex corresponding to that component To restore all the vertex indices later we will mark all components containing the vertex 1 while we run our dynamic connectivity approach Then the vertex v of the original graph is included in the answer if the vertex representing the component containing only the vertex v is reachable from any of the marked vertices Now all you need to do is run DFS or BFS from all the marked vertices in the component graph 

Problem Difficulty: A
Problem Statement:
 Little girl Tanya climbs the stairs inside a multi storey building Every time Tanya climbs a stairway she starts counting steps from to the number of steps in this stairway She speaks every number aloud For example if she climbs two stairways the first of which contains steps and the second contains steps she will pronounce the numbers You are given all the numbers pronounced by Tanya How many stairways did she climb Also output the number of steps in each stairway The given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways 
Problem Editorial:
 The answer contains such elements that Also add to the answer the last element 

Problem Difficulty: B
Problem Statement:
 You are given an array consisting of integers Let s call a pair of indices if and where is the greatest common divisor of and Find the maximum number of index pairs if you can reorder the array in an arbitrary way 
Problem Editorial:
 If the value of is even then at least regardless of the value of Therefore we can put all the even values before the odd ones it does not matter in what order Now it remains to arrange the odd values In fact their order is not important because for odd and This means that each pair will be considered exactly time regardless of the order of the odd elements 

Problem Difficulty: A
Problem Statement:
 Ivan s classes at the university have just finished and now he wants to go to the local CFK cafe and eat some fried chicken CFK sells chicken chunks in small and large portions A small portion contains chunks a large one chunks Ivan wants to eat exactly chunks Now he wonders whether he can buy exactly this amount of chicken Formally Ivan wants to know if he can choose two non negative integers and in such a way that small portions and large ones contain exactly chunks Help Ivan to answer this question for several values of 
Problem Editorial:
 There are lots of different approaches to this problem For example you could just iterate on the values of and from to and check if 

