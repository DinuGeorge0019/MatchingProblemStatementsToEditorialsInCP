,statement,editorial,label
0,There are astronauts working on some space station An astronaut with the number has An evil humanoid has made his way to this space station of this humanoid is equal to Also the humanoid took with him serums and serum In one second a humanoid can do any of three actions to absorb an astronaut with to use serum if there is still one left to use serum if there is still one left When an astronaut with is absorbed this astronaut disappears and of the humanoid increases by that is an integer part of For example if a humanoid absorbs an astronaut with its increases by and if a humanoid absorbs an astronaut with its increases by After using the serum this serum disappears and the of the humanoid doubles so it increases by times After using the serum this serum disappears and the of the humanoid triples so it increases by times The humanoid is wondering what the maximum number of astronauts he will be able to absorb if he acts optimally ,Let s find a simple condition when the string is not beautiful A string is not beautiful if there are two characters or two characters at an odd distance or and at an even distance because in this case the string cannot be made unstable Iterate over the right border of the substring Let be the maximum index such that the substring is not beautiful or if the substring is beautiful Then we have to add to the answer since any substring of a beautiful string is also beautiful Denote as the last occurrence of or at the position of parity Let is the parity of then i e find the nearest character that breaks a beautiful substring at an odd distance or at an even distance The case for is similar If then we can choose what this character will be Obviously we need to choose the option with the smaller value of ,0
1,The robot is located on a checkered rectangular board of size rows columns The rows in the board are numbered from to from top to bottom and the columns from to from left to right The robot is able to move from the current cell to one of the four cells adjacent by side The sequence of commands executed by the robot is given Each command is denoted by one of the symbols or and triggers the movement to left right down or up respectively The robot can start its movement in cell The robot executes the commands starting from the first one strictly in the order in which they are listed in If the robot moves beyond the edge of the board it falls and breaks A command that causes the robot to break is successfully executed The robot s task is to execute as many commands as possible without falling off the board For example on board if the robot starts a sequence of actions right right down left up up from the central cell the robot will perform one command then the next command will force him to cross the edge If the robot starts moving from the cell second row first column then all commands will be executed successfully and the robot will stop at the cell first row second column Determine the cell from which the robot should start its movement in order to execute as many commands as possible ,Let be the number of xor sequences of length with the last element equal to Let be equal to one if contains the number of ones in binary presentation that is multiple of three Otherwise let be equal to zero Consider a vectors and a matrix Easy to see that So Let s use the associative property of matrix multiplication at first let s calculate with binary matrix exponentiation and then multiply it to the vector ,0
2,There are students who have taken part in an olympiad Now it s time to award the students Some of them will receive diplomas some wiil get certificates and others won t receive anything Students with diplomas and certificates are called But there are some rules of counting the number of diplomas and certificates The number of certificates must be times greater than the number of diplomas The number of must i e not be greater than half of It s possible that there are no You have to identify the maximum possible number of according to these rules Also for this case you have to calculate the number of students with diplomas the number of students with certificates and the number of students who are not ,Let be the number of students with diplomas and students with certificates is always So the total number of winners is It should not exceed so the maximum value for will be hit in where is Overall complexity ,1
3,You are given a text of single space separated words consisting of small and capital Latin letters of the word is number of capital letters in the word of the text is maximum of all words in the text Calculate the of the given text ,Maintain the amount of capital letters taken by going from left to right make it zero when you meet space Overall complexity ,1
4,You are given an undirected tree of vertices Some vertices are colored blue some are colored red and some are uncolored It is guaranteed that the tree contains at least one red vertex and at least one blue vertex You choose an edge and remove it from the tree Tree falls apart into two connected components Let s call an edge if neither of the resulting components contain vertices of both red and blue colors How many edges are there in the given tree ,Since all planks have length at least 1 so we can take any n 2 planks as steps So all we need is to maximize the length of base planks We can take the first and second maximum as base then the answer is minimum among second maximum 1 and n 2 ,0
5,There is a robot staying at on the axis He has to walk to You are controlling this robot and controlling how he goes The robot has a battery and an accumulator with a solar panel The th segment of the path from to can be exposed to sunlight or not The array denotes which segments are exposed to sunlight if segment is exposed then otherwise The robot has one battery of capacity and one accumulator of capacity For each segment you should choose which type of energy storage robot will use to go to the next point it can be either battery or accumulator If the robot goes using the battery the current charge of the battery is decreased by one the robot can t use the battery if its charge is zero And if the robot goes using the accumulator the current charge of the accumulator is decreased by one and the robot also can t use the accumulator if its charge is zero If the current segment is and the robot goes through it the charge of the accumulator increases by one of course its charge can t become higher than it s maximum capacity If accumulator is used to pass some segment its charge decreases by 1 no matter if the segment is exposed or not You understand that it is not always possible to walk to You want your robot to go as far as possible Find the maximum number of segments of distance the robot can pass if you control him optimally ,Let s simulate the process of walking and maintain the current charges of the battery and the accumulator carefully choosing which to use each time we want to pass a segment Obviously if at the beginning of some segment our battery is exhausted its current charge is we must use the accumulator to continue and vice versa What if we can use both types of energy storage If we can recharge the accumulator the current segment is exposed the current charge of accumulator is lower than its initial charge let s do it because it only consumes one charge of the battery and there is no better way to spend it And if we cannot recharge the accumulator it s optimal to use it instead of the battery suppose it s not right our solution uses the accumulator during current moment of time and the battery during some moment in future but optimal solution does vice versa Then the usage of the battery in optimal solution does not grant us any additional charges so we can instead swap our decisions in these moments use the accumulator right now and the battery later and the answer won t get worse So what s left is to carefully implement the simulation keeping track of charges and choosing what to use according to aforementioned rules ,1
6,You are given four positive integers Find any such rectangular matrix of size that satisfies all of the following conditions each row of the matrix contains exactly ones each column of the matrix contains exactly ones all other elements are zeros If the desired matrix does not exist indicate this For example for there exists a matrix satisfying the conditions above ,Let s see how the desired matrix looks like Since each row should have exactly ones and each column should have exactly ones the number of ones in all rows should be equal to the number of ones in all columns Thus the desired matrix exists iff or Let s show how to construct the desired matrix if it exists Let s find any number such that where is the remainder of dividing by In the first row of the desired matrix we put the ones at the positions and in the th row we put the ones as in the row but cyclically shifted by to the right ,1
7,There is a rectangular grid of size Each cell of the grid is colored black or white The color of the cell is You are also given a map of directions for each cell there is a direction which is one of the four characters and If is then there is a transition from the cell to the cell if is then there is a transition from the cell to the cell if is then there is a transition from the cell to the cell if is then there is a transition from the cell to the cell It is guaranteed that the top row doesn t contain characters the bottom row doesn t contain characters the leftmost column doesn t contain characters and the rightmost column doesn t contain characters You want to place some robots in this field at most one robot in a cell The following conditions should be satisfied Firstly each robot every time i e it cannot skip the move Secondly you have to place robots in such a way that before which two different robots occupy the same cell it also means that you cannot place two robots in the same cell I e if the grid is one row two columns colors does not matter there then you can place two robots in cells and but if the grid is then you cannot place robots in cells and because during the first second both robots will occupy the cell The robots make an infinite number of moves Your task is to place the maximum number of robots to satisfy all the conditions described above and among all such ways you have to choose one where the number of cells occupied by robots is the maximum possible You have to answer independent test cases ,Let s make two obvious remarks If we can absorb two astronauts with then we can always first absorb an astronaut with and then an astronaut with If we can absorb some astronaut it is effective for us to do it right now Let s sort the astronauts in increasing order Now let s lock the sequence of serums we use There are only three of them serum can be the first second or third Let s absorb the astronauts in increasing order of their and if we can t then use the next serum in a locked sequence or stop This solution works for ,0
8,You are given an integer You have to construct a permutation of size A is an array where each integer from to where is the size of permutation occurs exactly once For example is a permutation of size is a permutation of size is not a permutation the integer is absent is not a permutation the integer appears twice A of a permutation is a contiguous subsequence of that permutation For example the permutation has subsegments and The of the permutation is the number of its subsegments which are also permutations For example the value of is since the subsegments and are permutations You have to construct a permutation of size with among all permutations of size ,The subsegment as well as the whole permutation will always be a permutation so the value is at least Let s try to find a way to generate a permutation of elements with value equal to Every permutation must contain the number Let s try to construct the answer in such a way that if a subsegment contains the number then it also contains the number if it is so it can only be a permutation if it contains all numbers If we begin our permutation with the numbers and we will reach our goal the only subsegment which does not contain but contains is and the only subsegment which contains and also a permutation is the whole permutation itself So any permutation that begins with can be the answer ,1
9,You are given integers A sequence of integers is called a if for every the number of ones in the binary representation of the number s is a multiple of and for all The symbol is used for the binary exclusive or operation How many of length exist Output the answer modulo ,Let s simply iterate over all the values from to and add to the answer the number of segments of the current value To count the number of segments we should iterate over all the digits of the number and add to the answer the number of segments of the current digit These values can be calculated by the image from the problem statement and stored in some array in code ,0
10,There are students who have taken part in an olympiad Now it s time to award the students Some of them will receive diplomas some wiil get certificates and others won t receive anything Students with diplomas and certificates are called But there are some rules of counting the number of diplomas and certificates The number of certificates must be times greater than the number of diplomas The number of must i e not be greater than half of It s possible that there are no You have to identify the maximum possible number of according to these rules Also for this case you have to calculate the number of students with diplomas the number of students with certificates and the number of students who are not ,Note first that we can solve the two subtasks independently if we consider the coloring as on a chessboard since at any move of the robot the parity of does not change Now replace the moves with moves respectively This can be done because we simply shifted the rows by some value with the Robot walking on the same cells it walked on in the original board Let s look at the even numbered gray cells Then we ll go through the columns from left to right keeping the minimum by size set of cells the Robot should be in Then the transition to the next column will be as follows Go through the cells from bottom to top which contain the candy For each cell find the closest cell of our set find the Robot that is above the current cell Then we change the square from the set to the current square If there is no robot for the square in the array then we need to increase the answer by and add the robot to our current square you can think of it as adding the robot to the very top square in the column and getting all the candies that were above In the picture the red circles indicate the cells where we will put the robot as needed The pink cells mean that this cell is contained in the set The final asymptotic depends on the implementation you can use a set as data structure or you can use a vector with two pointers and respectively ,0
11,A row of cells is given all initially white Using a stamp you can stamp any two neighboring cells such that one becomes red and the other becomes blue A stamp can be rotated i e it can be used in both ways as and as During use the stamp must completely fit on the given cells it cannot be partially outside the cells The stamp can be applied multiple times to the same cell Each usage of the stamp recolors both cells that are under the stamp For example one possible sequence of stamps to make the picture could be Here and represent a white red or blue cell respectively and the cells that the stamp is used on are marked with an underline Given a final picture is it possible to make it using the stamp zero or more times ,First note that parts of the picture separated by are independent That is any stamps used on one part doesn t have any impact on the other since a character means no stamp has been placed on that cell So let s split the string by s for example with method in Python and consider the resulting strings containing only and Call one of these parts In the final stamp we place on we must have placed so it should have both the characters and Therefore if the string has only or only the answer is Otherwise the answer is Let s show it As we have just shown we must have next to for the string to be possible Consider the way to make The final stamp can be For the rest of the cells we can make them one by one as below so now we have made the prefix of the string before the final stamp Similarly Now we have made the prefix and the suffix by stamping one character at a time actually we stamp two characters but then cover it up with another stamp Finally we can put the final stamp to make the whole string This method easily generalizes to any string We can find the final stamp and then make the prefix and suffix one by one The solution runs in ,1
12,We call two numbers and if they have the same parity the same remainder when divided by or if For example in each of the pairs the numbers are similar to each other and in the pairs they are not You are given an array of is even positive integers Check if there is such a partition of the array into pairs that each element of the array belongs to exactly one pair and the numbers in each pair are similar to each other For example for the array there is a partition into pairs and The numbers in the first pair are similar because they differ by one and in the second pair because they are both even ,Let be the number of even numbers in the array and be the number of odd numbers in the array Note that if the parities of and of do not equal then the answer does not exist Otherwise we consider two cases and are even numbers Then all numbers can be combined into pairs of equal parity and are odd numbers Then you need to check whether there are two numbers in the array such that the modulus of their difference is If there are two such numbers then combine them into one pair and will decrease by and become even then the solution exists as shown in the previous case ,1
13,Authors have come up with the string consisting of lowercase Latin letters You are given two permutations of its indices not necessary equal and both of length Recall that the permutation is the array of length which contains each integer from to exactly once For all from to the following properties hold and It means that if you will write down all characters of in order of permutation indices the resulting string will be sorted in the non decreasing order Your task is to restore such string of length consisting of which suits the given permutations If there are multiple answers you can print any of them ,Because if we write down all characters of in order of both permutations and this string will be sorted it is obvious that these two strings are equal Let s try the maximum possible number of distinct characters and then replace extra characters with How to find the maximum number of distinct characters Let s iterate over all values of and in order from left to right If we staying at the position now let s add to the set the value and to the set the value And when these sets become equal the first time let s say that the block of positions such that values are in the set right now have the same letter and then clear both sets We can see that this segment of positions is the minimum by inclusion set that can contain equal letters We don t need to compare sets naively and clear them naively you can see implementation details in author s solution If the number of such segments is less than then the answer is otherwise the answer is and we can fill the string with letters in order of these segments if the segment is then all characters of with indices has the same letter the first segment has the letter the second one has the letter and so on all segments after th has the letter Time complexity ,1
14,You are given a sequence of one dimensional segments numbered through Your task is to find two distinct indices and such that segment lies within segment Segment lies within segment iff and Print indices and If there are multiple answers print any of them If no answer exists print ,First of all how to deal with the fractions modulo 998244353 According to Fermat s little theorem x phi m equiv 1 mod m if x is coprime with m So the inverse element for the denominator y is y phi 998244353 1 y 998244351 taken modulo 998244353 A cool property of fractions taken modulo 998244353 or any other number such that denominator is coprime with it is that if we want to add two fractions together and calculate the result modulo some number we can convert these fractions beforehand and then just add them as integer numbers The same works with subtracting multiplying dividing and exponentiating fractions Okay now for the solution itself We know that there are at most 10 6 possible pairs of x y we can iterate on these pairs calculate the probability that the fixed pair is included in the robot s decision that probability is frac 1 x cdot k x and calculate the probability that x y extends to a valid triple it is equal to frac cnt y z where cnt y is the number of kids who want item y Multiplying these two probabilities we get the probability that x y is chosen produces a valid decision since these events are independent and we sum up these values over all possible pairs x y ,0
15,You are given two matrices and Each matrix contains exactly rows and columns Each element of is either or each element of is initially You may perform some operations with matrix During each operation you choose any submatrix of having size and replace every element in the chosen submatrix with In other words you choose two integers and such that and and then set and to Your goal is to make matrix equal to matrix Two matrices and are equal if and only if every element of matrix is equal to the corresponding element of matrix Is it possible to make these matrices equal If it is you have to come up with a sequence of operations that makes equal to Note that you don t have to minimize the number of operations ,It is quite obvious that we can t choose any submatrix that contains at least one zero in The contrary is also true if a submatrix of consists of only ones then there s no reason not to choose it suppose there is an answer that does not choose it then choosing this submatrix won t affect it So we may perform an operation on every submatrix of such that the corresponding submatrix in is filled with s and check if our answer is correct ,1
16,Polycarp has a poor memory Each day he can remember no more than of different letters Polycarp wants to write a non empty string of consisting of lowercase Latin letters taking number of days In how many days will he be able to do it Polycarp initially has an empty string and can only add characters to the end of that string For example if Polycarp wants to write the string he will do it in days on the first day Polycarp will memorize the letters and write On the second day Polycarp will remember the letters add to the resulting line and get the line If Polycarp wants to write the string he will do it in days in the first day will be written part on day two will be written part on the third day part of will be written on the fourth day part of will be written For a given string print the minimum number of days it will take Polycarp to write it ,It s quite easy to see that ab x bmod a bmod b x bmod a bmod b What does it mean The property given in the statement holds for x if and only if it holds for x bmod ab It allows us to answer each testcase in O ab q as follows for each number from 0 to ab 1 we may check the given property before processing the queries and build an array of prefix sums on it to efficiently count the number of integers satisfying the property from the segment 0 y where y ab Then each query l r can be divided into two prefix queries 0 l 1 and 0 r To answer a prefix query 0 p in O 1 we can calculate the number of full segments of length ab inside this prefix that is lfloor frac p ab rfloor and the length of the last segment of numbers that don t belong into a full segment that is p bmod ab To handle full segments we multiply the number of integers satisfying the property on one segment by the number of such segments and to handle the last part of segment we use prefix sums ,0
17,You are given a bracket sequence not necessarily a regular one A bracket sequence is a string containing only characters and A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters and between the original characters of the sequence For example bracket sequences and are regular the resulting expressions are and and and are not Your problem is to calculate the number of regular bracket sequences of length containing the given bracket sequence as a substring consecutive sequence of characters modulo ,At first let s calculate the matrix of size Let will denote the maximum length of the prefix of which equals to the suffix of the prefix of of length with the additional character if and otherwise In other words is denote which maximum length of the prefix of we can reach if now we have the prefix of of length and want to add the character if and otherwise and only one possible move is to remove characters from the beginning of this prefix with an additional character This matrix can be easily calculated in without any dynamic programming It can be also calculated in using prefix function and dynamic programming Now let s calculate the following dynamic programming It means that now we have gained characters of the regular bracket sequence the balance of this sequence is the last characters of the gained prefix is the prefix of of length and equals to if we obtain the full string at least once and otherwise The stored value of the is the number of ways to reach this state Initially all other values equal The following recurrence works try to add to the current prefix character if the current balance is less than then we will move to the state is the length of and is operation if at least one is true then the result is true Let s add to the number of ways to reach the destination state the number of ways to reach the current state The same with the character Try to add to the current prefix character if the current balance is greater than then we will move to the state Also add to the number of ways to reach the destination state the number of ways to reach the current state After calculating this dynamic programming the answer is Time complexity is ,1
18,Ivan has a robot which is situated on an infinite grid Initially the robot is standing in the starting cell The robot can process commands There are four types of commands it can perform move from the cell to move from to move from to move from to Ivan entered a sequence of commands and the robot processed it After this sequence the robot ended up in the starting cell but Ivan doubts that the sequence is such that after performing it correctly the robot ends up in the same cell He thinks that some commands were ignored by robot To acknowledge whether the robot is severely bugged he needs to calculate the maximum possible number of commands that were performed correctly Help Ivan to do the calculations ,Consider the final cell after original path It has some distance to and to That means the path included at least and in corresponding directions Let s remove just these minimal numbers of moves Finally the answer will be where are distances from the final cell of the original path to Overall complexity ,1
19,You want to type the string consisting of lowercase Latin letters using your favorite text editor Notepad Notepad supports two kinds of operations append any letter of the string copy a substring of an already typed string and paste this substring of the string Can you type string in than operations ,Why does the problem ask us only to check if we can do less than operations instead of just asking the minimum amount That must be making the problem easier so let s focus our attention on that What if it was instead of Well then the problem would be trivial You can type the word letter by letter and be done in operations So we only have to save one operation In order to save at least one operation we have to use the copy operation and copy more than one character in that Let s take a closer look at any of the copy operations we do Basically it has to be a substring that has at least two non intersection occurrences in the string Thus if the string has any substring that has length at least two that appears at least twice in the string we can copy it and the answer will be That s still not enough to solve the problem we d have to check all substrings which is Let s think further Imagine we found a substring that works Let it have length Notice how you can remove its last character obtaining a substring of length and it will still occure in the same set of positions possibly even more occurrences will be found Remove characters until the substring has length Thus if any appropriate substring exists an appropriate substring of length also exists Finally we can check if there exists a substring of length that appears at least twice in the string so that the occurrences are at least apart That can be done with a set hashset or a map hashmap Some implementations might require careful handling of the substrings of kind and similar Overall complexity or per testcase ,1
20,You are given a rooted tree consisting of vertices The vertex is the root Each vertex has an integer written on it this integer is for the vertex You are given queries to the tree The th query is represented by two vertices and To answer the query consider all vertices that lie in the subtree of or For all vertices in these two subtrees list all integers written on them and find the integer with the maximum number of occurrences If there are multiple integers with maximum number of occurrences the among them is the answer ,First let s solve the following problem we need to maintain a multiset of numbers and process queries of 3 th types add a number to the multiset remove one occurrence of a number from the multiset it is guaranteed that it exists calculate the mode on this multiset To do this we will maintain the array cnt i the frequency of i in the multiset Now the mode is the position of the leftmost maximum in this array There are many ways to search for this position we will use the following we will build a sqrt decomposition on the array cnt for a block we will maintain a maximum on this block and an array c i the number of positions j in this block such that cnt j i Since in each of the initial requests cnt i changes by no more than 1 the maximum in the block also changes by no more than 1 and using the c array it is easy to update it after each query Now to find the mode the position of the leftmost maximum in the cnt array you first need to go through all the blocks to find the value of the maximum and the leftmost block in which this maximum occurs then iterate over the desired position in this block Thus queries to add and remove an element run in O 1 and a mode search query runs in O sqrt A where A is the number of possible distinct values in a given problem A 2 cdot 10 5 Now let s get back to the problem itself Let s build a Preorder traversal of our tree Let tin v be the position in the 0 indexing of the vertex v in the Preorder traversal tout v be the size of the Preorder traversal after leaving the vertex v Then the half interval tin v tout v of the Preorder traversal represents the set of vertices of the subtree of the vertex v For the i th query we will consider tin v i le tin u i Let sz v tout v tin v be the size of the subtree of v B be some integer then v will be called light if sz v B and heavy otherwise A query i is called light heavy if v i is a light heavy vertex We will solve the problem for light and heavy queries independently Let s use the small to large technique and maintain the multiset described at the beginning of the solution Let at the moment we have this multiset for the vertex w Let s answer all light queries for which u i w To do this take all the vertices from the subtree of v i and add the numbers written on them calculate the mode on the current multiset this will be the answer to the query and then delete the newly added vertices In the standard implementation of small to large you need to maintain several structures at the same time which in this case is impossible due to the fact that each of them takes up O A sqrt A of memory This problem can be avoided for example as follows before constructing the Preorder traversal for each vertex v put its heaviest son at the head of the adjacency list Then it will be possible to iterate over the vertices in the order of the Preorder traversal preserving the asymptotics This part of the solution runs in O n log n qB q sqrt A Let s divide all heavy vertices into non intersecting vertical paths so that two vertices from the same path have subtrees that differ by no more than B vertices and the number of the paths themselves is O frac n B To do this let s take the deepest of the unused heavy vertices and build one of the desired paths going up to the parent while the first of these conditions is met Then we mark all the vertices in this path as used and start over We will continue to do this while there are still unused heavy vertices It is easy to see that the resulting paths are vertical and the subtrees of two vertices from the same path differ by no more than B by construction Let s prove that there are not very many of these paths To do this we will understand in which cases the path breaks If the current path contains a root then since the root has no parent the path will terminate Obviously this path is only 1 If the parent of the last vertex of the path has only one heavy child this last vertex itself From the construction a break means that the number of vertices in this path plus the number of children outside the heaviest son subtree of the parent of the last vertex and each vertex of the path except for the initial one is more than B in total but each of the counted vertices can be counted in only one of such cases that is the number of paths that terminate in this way does not exceed frac n B If the parent of the last node has more than one heavy child Let s leave only heavy vertices in the tree since the parent of a heavy vertex is a heavy vertex too it will indeed be a tree or an empty graph This tree contains at most frac n B leafs Calculating the total degree of the vertices of this tree we can see that there are at most frac n B additional sons all sons of a vertex except one This means that the number of paths terminating in this way is at most frac n B We got that the paths are O frac n B Let s divide the heavy queries according to the paths where the v i is situated We will answer queries with vertices v from the same path together We will do it similarly to the case with light queries with minor differences at the very beginning we add to the multiset all the vertices of the subtree of the initial vertex of the path and mentally remove these vertices from the subtrees of v i vertices Everything else is preserved Let s calculate how long it takes add all vertices from one subtree O n small to large O n log n to answer one query due to condition on vertices from one path we have to add at most B vertices Since there are only O frac n B paths the whole solution will take O frac n 2 log n B qB q sqrt A We take B sqrt frac n 2 log n q and counting n approx q we get B sqrt n log n and total running time O n sqrt n log n n sqrt A As already mentioned a subtree corresponds to a segment of the Preorder traversal so 2 subtrees are 2 segments We will maintain the data structure described at the beginning on the sum of 2 segments By moving the boundaries of these segments you can move from one query to another as in Mo s algorithm It remains only to sort the queries Heavy queries are sorted first by path number of v i then by tin u i Light queries are sorted only by tin u i but here you can t just move the segment of the v subtree you need to rebuild it for each query Solve this problem for two subtrees and a path connecting the roots of these subtrees This solution partially intersects with the one described by the problem author We will use the same data structure for maintaining the mode and we will also use DFS order of the tree but before constructing it we will reorder the children of each vertex so that the heaviest child is the first one Let tin v be the moment we enter the vertex v in DFS and tout v be the moment we leave the vertex As usual the segment tin v tout v represents the subtree of vertex v and we can change the state of the structure from the subtree of the vertex x to the subtree of the vertex y in tin x tin y tout x tout y operations Let this number of operations be cost x y Let v 1 v 2 dots v n be the DFS order of the tree We can prove that cost v 1 v 2 cost v 2 v 3 dots cost v n 1 v n is estimated as O n log n if we order the children of each vertex in such a way that the first of them is the heaviest one Let s analyze how many times some vertex v is added when we go in DFS order and maintain the current set of vertices When some vertex is added to the current subtree this means that the previous vertex in DFS order was not an ancestor of the current vertex so the current vertex is not the first son of its parent So the size of the subtree of the parent is at least 2x the size of the current vertex Since the path from v to root can have at most O log n such vertices then the vertex v is added at most O log n times Okay how do we use it to process queries efficiently Let s say that the vertex v i the i th vertex in DFS order has coordinate equal to cost v 1 v 2 cost v 2 v 3 dots cost v i 1 v i Let this coordinate be c v i Then if we have the data structure for the query x 1 y 1 and we want to change it so it meets the query x 2 y 2 we can do it in at most c x 1 c x 2 c y 1 c y 2 operations which can be treated as the Manhattan distance between points c x 1 c y 1 and c x 2 c y 2 Do you see where this is going We can map each query x y to the point c x c y and then order them in such a way that the total distance we need to travel between them is not too large We can use Mo s algorithm to do this Since the coordinates are up to O n log n but there are only q points some alternative sorting orders for Mo like the one that uses Hilbert s curve may work better than the usual one ,1
21,It all started with a black and white picture that can be represented as an matrix such that all its elements are either or The rows are numbered from to the columns are numbered from to Several operations were performed on the picture possibly zero each of one of the two kinds choose a cell such that it s not on the border neither row or nor column or and it s surrounded by four cells of the opposite color four zeros if it s a one and vice versa and paint it the opposite color itself make a copy of the current picture Note that the order of operations could be arbitrary they were not necessarily alternating You are presented with the outcome all copies that were made Additionally you are given the initial picture However all pictures are shuffled Restore the sequence of the operations If there are multiple answers print any of them The tests are constructed from the real sequence of operations i e at least one answer always exists ,Notice the following once you apply the recolor operation to some cell you can never recolor it again That happens because you can t recolor its neighbors too as each of them has at least one neighbor of the same color this cell itself In particular that implies that applying a recolor operation always decreases the possible number of operations that can be made currently It doesn t always decrease them by from to operations can become unavailable but it always decreases That gives us an order of copies Just sort them in the decreasing order of the number of recolor operations that can be made currently If the numbers are the same the copies must be equal so their order doesn t matter The only thing remains is to apply the operations Turns out their order doesn t matter at all Consider all different cells for a pair of adjacent pictures It s never possible that there are two different cells that are adjacent to each other Thus no operation can interfere with another one Just print all positions of different cells in any order you want and make a copy Overall complexity ,1
22,Polycarp invited all his friends to the tea party to celebrate the holiday He has cups one for each of his friends with volumes His teapot stores milliliters of tea Polycarp wants to pour tea in cups in such a way that Every cup will contain tea for at least half of its volume Every cup will contain integer number of milliliters of tea All the tea from the teapot will be poured into cups All friends will be Friend with cup won t be if there exists such cup that cup contains less tea than cup but For each cup output how many milliliters of tea should be poured in it If it s impossible to pour all the tea and satisfy all conditions then output ,Firstly let s learn how to split persons in pairs as if there are no single kayaks Let there be people with weights and Obviously the lowest instability you can achieve is Swapping any two elements will only make the result greater This greedy strategy can be used to distribute all the seats Now you need to check every pair of persons to seat in single kayaks and calculate total instability for the rest The answer will be the minimun instabily over all pairs Overall complexity ,0
23,There is a field divided into rows and columns Some cells are empty denoted as other cells contain robots denoted as You can send a command to at the same time The command can be of one of the four types move up move right move down move left When you send a command attempt to take one step in the direction you picked If a robot tries to move outside the field it explodes otherwise moves to an adjacent cell in the chosen direction You can send as many commands as you want possibly zero in any order Your goal is to make at least one robot reach the upper left corner of the field Can you do this without forcing any of the robots to explode ,Let s assume that the rows are numbered from to from top to bottom and columns are numbered from to from left to right If there is no robot in the cell initially we have to perform several moves up and or left If the first row with at least one robot is the th row then we can make at most steps up and we should do at least steps up since otherwise there will me no robot in the upper row Similarly if the first column with at least one robot is the th column then we can make at most steps to the left and we should do at least steps to the left since otherwise there will me no robot in the leftmost column Now there are two possible solutions both starting with finding and we afterwards either simulate moves up and moves to the left and check that everything is fine or just check that there is a robot in the cell since only this robot can end up in ,1
24,You are given two strings and consisting of lowercase Latin letters A template is string consisting of lowercase Latin letters and asterisks character A template is called if the number of asterisks in it is less than or equal to the number of letters in it A string is said to be matching a template if you can replace each asterisk in with a string of lowercase Latin letters possibly an empty string so that it becomes equal to Find an template such that both and match it or report that such a template doesn t exist If there are multiple answers print any of them ,Notice that the robots that start at even coordinates can never collide with the robots that start at odd coordinates You can see that if a robot starts at an even coordinate it ll be at an even coordinate on an even second and at an odd coordinate on an odd second Thus we ll solve the even and the odd cases separately Sort the robots by their starting coordinate Apparently that step was an inconvenience for some of you There is a common trick that can help you to implement that Create a separate array of integer indices and sort them with a comparator that looks up the value by indices provided to tell the order This gives you the order of elements and doesn t require you to modify the original data in any way Consider the task without reflections of the wall Take a look at the first robot If it goes to the left then nothing ever happens to it Otherwise remember that it goes to the right Look at the next one If it goes to the left then it can collide with the first one if that went to the right Otherwise remember that it also goes to the right Now for the third one If this one goes to the left who does it collide with Obviously the rightmost alive robot that goes to the right So the idea is to keep a stack of the alive robots If a robot goes to the left then check if the stack is empty If it isn t then the top of the stack robot is the one who will collide with it Pop it from the stack since it explodes If a robot goes to the right simply push it to the stack The time of the collision is just the distance between the robots divided by If there are robots left in the stack after every robot is processed then they all go to the right together so they never collide What changes when the reflections are introduced Almost nothing actually Well now if the stack is empty and a robot goes to the left then it behaves as a one going to the right You can reflect the part of the way from its start to the wall Just say that instead of starting at some going to the left it starts at going to the right Since there s no one alive to the left of him initially that will change nothing That should be used for computing the collision time However the final robots in the stack also act differently First the top of the stack robots reflects off the wall and collides with the second on the stack one Then the third and the fourth and so on So you can pop them in pairs until or are left The coordinate reflection trick can be used here as well Imagine that the top of the stack starts at and goes to the left instead of starting in going to the right For the same reason it changes nothing Overall complexity ,0
25,You are given a string consisting of lowercase Latin letters Let s denote substring of as a string Obviously and there are exactly such substrings Let s call some string an of a string iff the following conditions are met is an odd number is simultaneously a prefix and a suffix of For evey substring of you have to calculate the maximum length of its odd proper suprefix ,Solution is just some implementation simulate algorithm given in the legend maintaining maximum over all on prefix and breaking when the maximum becomes smaller than index of the next page ,0
26,Polycarp got the following problem given a grid strip of size some cells of it are blocked You need to check if it is possible to tile all free cells using the and tiles dominoes For example if and the strip looks like this black cells are blocked Then it can be tiled for example using two vertical and two horizontal tiles as in the picture below different tiles are marked by different colors And if and the strip looks like this It is impossible to tile free cells Polycarp easily solved this task and received his New Year s gift Can you solve it ,If the first column is empty we can always cover it with a vertical tile if the next column is also empty then we will have to put either two vertical or two horizontal tiles but they are obtained from each other by rotating if the next column contains at least one blocked cell then we have no other options but to cover the column with a vertical board If the first column is fully blocked then we can just skip it Remove such columns from the beginning reducing the problem Now the first column contains one empty and one blocked cell Obviously in place of an empty cell we will have to place a horizontal tile If this did not work then the tiling does not exist Otherwise there are two cases if the next column is empty it will turn into a column with one occupied cell Then we continue to put horizontal tiles if the next column contains one blocked cell then it becomes fully blocked and we return to the first step It turns out the following greedy algorithm we sort all columns with at least one cell blocked there are no more than such columns by number Now if we see a column with one occupied cell then the next one must also be with one occupied cell we skipped the empty columns but this cell must have a different color in the chess coloring so that we can tile the space between them with horizontal boards This check is easy to do after sorting the columns ,1
27,You are given a tree consisting of vertices and triples where and are integers from to and is a string You want to write a lowercase Latin letter on each vertex in such a way that for each of given triples at least one of the following conditions holds if you write out the letters on the vertices on the simple path from to in the order they appear on this path you get the string if you write out the letters on the vertices on the simple path from to in the order they appear on this path you get the string Find any possible way to write a letter on each vertex to meet these constraints or report that it is impossible ,Let s design a naive solution first For each of the given triples we have two options either write the string on the tree in the order from to or in reverse order Some options conflict with each other So we can treat this problem as an instance of 2 SAT create a variable for each of the given strings which is true if the string is not reversed and false if it is reversed find all conflicting pairs of options and then run the usual algorithm for solving 2 SAT Unfortunately the number of conflicting pairs can be up to so we need to improve this solution Let s introduce a variable for each vertex of the tree which will define the character we write on it At first it looks like we can t use these variables in 2 SAT since the number of possible characters is not But if a vertex is covered by at least one path in a triple then there are only two possible characters we can write in this vertex either the character which will land on this position if we write the string from to or the character on the opposite position in the string And obviously if a vertex is not covered by any triple we can write any character on it Okay now for each vertex we have two options for a character and Let the variable be true if we write on vertex and false if we write Also for each triple let s introduce a variable which is true if the string is written from to and false if it is written in reversed order If the vertex is the th one on the path from to then we should add the following constraints in our 2 SAT if we need a constraint NOT OR NOT if we need a constraint OR NOT if we need a constraint NOT OR if we need a constraint OR Thus we add at most constraints in our 2 SAT The only thing we haven t discussed is how to actually restore each path from to this can be done either with any fast algorithm that finds LCA or by searching for LCA naively by ascending from one of those vertices until we arrive at the ancestor of another vertex this approach will visit at most vertices Overall this solution runs in ,1
28,There is a square field of size in which two cells are marked These cells can be in the same row or column You are to mark two more cells so that they are the corners of a rectangle with sides parallel to the coordinate axes For example if and a rectangular field looks like this there are asterisks in the marked cells Then you can mark two more cells as followsIf there are several possible solutions then print any of them ,f two asterisks are in the same row then it is enough to select any other row and place two asterisks in the same columns in it If two asterisks are in the same column then you can do the same If none of the above conditions are met and the asterisks are at positions x1 y1 x2 y2 then you can place two more asterisks at positions x1 y2 x2 y1 ,1
29,Polycarp wants to assemble his own keyboard Layouts with multiple rows are too complicated for him his keyboard will consist of only one row where all lowercase Latin letters will be arranged in some order Polycarp uses the same password on all websites where he is registered it is bad but he doesn t care He wants to assemble a keyboard that will allow to type this password very easily He doesn t like to move his fingers while typing the password so for each pair of adjacent characters in they should be adjacent on the keyboard For example if the password is then the layout is perfect since characters and are adjacent on the keyboard and and are adjacent on the keyboard It is guaranteed that there are no two adjacent equal characters in so for example the password cannot be two characters are adjacent Can you help Polycarp with choosing the perfect layout of the keyboard if it is possible ,Let s run dfs on the tree and write out the vertices in order of their visisiting by dfs that permutation is called Euler walk Easy to see that subtree of any vertex is a subsegment of that permutation Note that the number of different colours is so we can store the set of colours just as mask of binary bits in bit type long long in C long in Java Let s build the segment tree over the permutation which supports two operations paint subsegment by some colour and find the mask of colours of some segment ,0
30,Numbers each integer from to once are written on a board In one operation you can erase any two numbers and from the board and write one integer instead You should perform the given operation times and make the resulting number that will be left on the board as small as possible For example if the following course of action is optimal choose and so the new number is and the whiteboard contains choose and so the new number is and the whiteboard contains choose and so the new number is and the whiteboard contains It s easy to see that after operations there will be left only one number Your goal is to minimize it ,Let and Then we can construct the following answer and Because all numbers in the answer are positive we can assume that the maximum element of is So let s sort the input array consisting of four elements and just print and ,0
31,For a sequence of integers let s define its as follows Process the sequence from the first element to the last one maintaining the list of its subsequences When you process the element append it to the end of the subsequence in the list such that the bitwise AND of its last element and is greater than If there is no such subsequence in the list create a new subsequence with only one element and append it to the end of the list of subsequences For example let s analyze the decomposition of the sequence processing element the list of subsequences is empty There is no subsequence to append to so we create a new subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is There is no subsequence to append to so we create a new subsequence processing element the list of subsequences is There is no subsequence to append to so we create a new subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is The element cannot be appended to any of the first two subsequences but can be appended to the third one The resulting list of subsequences is Let be the number of subsequences the sequence is decomposed into You are given a sequence where each element is an integer from to Let be the sequence You have to calculate ,Write down all the numbers which appear exactly once let there be of them If is even put the first of them into the first multiset and put the other into the second multiset All the other numbers which appear more than once also go into the first multiset The only nice numbers will be the initial thus the answer is valid If is odd and there is no number to appear more than twice then the answer is as all the numbers to appear exactly twice don t change the difference of the amounts of the nice numbers at all If there is a number to appear more than twice let it be then let s firstly add of the numbers to appear exactly once to the first multiset add others of them to the second multiset Then the first occurrence of goes to the second multiset and all the other numbers go to the first multiset It s easy to notice that multisets will contain equal number of the nice numbers after all the partitioning ,0
32,An array is if both of the following two conditions meet there are and elements in the array equal to its minimum there are and elements in the array equal to its maximum For example the array has elements equal to its minimum st rd and th and elements equal to its maximum th and th Another example the array has elements equal to its minimum and elements equal to its maximum Your task is to calculate the possible number of elements in a array ,Firstly since we are interested in minimum possible size of the array we don t need any elements other than minimums and maximums So the array has at most distinct elements Now there are many possible solutions The simplest one is to iterate on the number of minimums let this be and maximums let this be If the number of minimums is equal to the number of maximums then the array should have all elements as both its minimums and maximums so its length should be otherwise it should be We can iterate on all possible pairs and find the best result over all of them A solution in is possible if you see that you only have to consider and as the number of minimums maximums or check if the segments and intersect in ,1
33,Ivan is a programming teacher During the academic year he plans to give lectures on different topics Each topic should be used in exactly one lecture Ivan wants to choose which topic will he explain during the st nd th lecture formally he wants to choose some permutation of integers from to let s call this permutation is the index of the topic Ivan will explain during the th lecture For each topic except there exists a prerequisite topic for the topic the prerequisite topic is Ivan cannot give a lecture on a topic before giving a lecture on its prerequisite topic There exists at least one valid ordering of topics according to these prerequisite constraints Ordering the topics correctly can help students understand the lectures better Ivan has special pairs of topics such that he knows that the students will understand the th topic better if the lecture on it is conducted the lecture on the th topic Ivan wants to satisfy the constraints on every such pair that is for every there should exist some such that and Now Ivan wants to know if there exists an ordering of topics that satisfies all these constraints and if at least one exists find any of them ,The prerequisites for each lecture form a rooted tree so let s forget about the legend and learn how to find such an order of vertices of a tree that all conditions work Let s introduce some algorithm that produces an ordering of vertices for every possible case If any valid ordering exists it should produce a valid one So we will only have to check if the resulting ordering is fine and output it if it is If there were no special pairs the task would be perfectly solvable with an algorithm of topological sorting Thus let s come up with a way to modify the graph so that topsort could still be a solution We know that the vertices that are in the special pairs should follow each other in the ordering Look at these special pairs as edges as well Let s first imagine they are undirected These edges connect some vertices in the tree into components Each component should be a segment of vertices in a valid answer So how about we compress them into one vertex first each find some answer for a compressed version and decompress them back Let each of these connected components be a vertex in the new graph Two components are connected by an edge if there is a edge in the tree between vertices of the corresponding components Topsort in this graph will tell us the order the components should go However we should also find the order the vertices should go inside each component Let s topsort the graph of all directed special pairs and sort the vertices in that order in every component We can sort the entire graph instead of sorting each component separately because the components are totally independent Finally write down the answer iterate over the compressed vertices of the first new graph in the order of its topsort for each one write down all the actual vertices inside it in the order of the topsort of the second new graph Check if each vertex has its parent earlier than itself in the answer If all the graphs were topologically sortable and that holds then the answer exists and we found it Otherwise the answer doesn t exist Overall complexity O n log n ,1
34,Captain Bill the Hummingbird and his crew recieved an interesting challenge offer Some stranger gave them a map potion of teleportation and said that only this potion might help them to reach the treasure Bottle with potion has two values and written on it These values define four moves which can be performed using the potion Map shows that the position of Captain Bill the Hummingbird is and the position of the treasure is You task is to tell Captain Bill the Hummingbird whether he should accept this challenge or decline If it is possible for Captain to reach the treasure using the potion then output otherwise without quotes ,Firstly let s approach this problem as if the steps were and Then the answer is if and It s easy to see that if the answer to this problem is then the answer to the original one is also Let s return to the original problem and take a look at some sequence of steps It ends in some point Define as and as The parity of is the same as the parity of It is like this because every type of move changes parity of both and So the answer is if and Overall complexity ,1
35,One day Polycarp decided to rewatch his absolute favourite episode of well known TV series Tufurama He was pretty surprised when he got results only for season 7 episode 3 with his search query of Watch Tufurama season 3 episode 7 online full hd free This got Polycarp confused what if he decides to rewatch the entire series someday and won t be able to find the right episodes to watch Polycarp now wants to count the number of times he will be forced to search for an episode using some different method TV series have seasons numbered through the th season has episodes numbered through Polycarp thinks that if for some pair of integers and exist both season episode and season episode then one of these search queries will include the wrong results Help Polycarp to calculate the number of such pairs ,Polycarp has dominoes on each domino there are numbers it turns out there will be numbers in total We need to divide numbers each number from to into two sets so that all numbers in each set are different each set will consist of numbers It turns out that all numbers from to must occur exactly times no more and no less Let s imagine it all as a bipartite graph where there are vertices from to and dominoes are edges Since each number occurs exactly times then we have a lot of cycles In which the edges of each number must be included in different sets in other words the cycles must be of even length This can be checked in by a simple enumeration ,0
36,Limak is a little polar bear He likes strings strings of length consisting of lowercase English letters only The distance between two letters is defined as the difference between their positions in the alphabet For example and Also the distance between two nice strings is defined as the sum of distances of corresponding letters For example and Limak gives you a nice string and an integer He challenges you to find any nice string that Find any satisfying the given conditions or print if it s impossible to do so As input output can reach huge size it is recommended to use fast input output methods for example prefer to use instead of in C prefer to use instead of in ,Let be the number of xor sequences of length with the last element equal to Let be equal to one if contains the number of ones in binary presentation that is multiple of three Otherwise let be equal to zero Consider a vectors and a matrix Easy to see that So Let s use the associative property of matrix multiplication at first let s calculate with binary matrix exponentiation and then multiply it to the vector ,0
37,You are given an array consisting of integers and an integer It is guaranteed that for every Let s denote a function which erases all values such that from the array and returns the resulting array For example if then Your task is to calculate the number of pairs such that and is sorted in non descending order Note that the empty array is also considered sorted ,Let s prove that the color with the maximum value of is one of the possible answers Let the color have the maximum value of if there are several such colors choose any of them Let s keep taking the balls of two different colors out of the bag without touching the balls of color for as long as possible After such operations two cases exist In one case only balls of color are left then everything is fine In other case there are balls of color and some color let be the remaining number of balls of this color Since initially was one of the maximums However the number of remaining balls is odd which means and Therefore we can keep taking the balls of colors and until only balls of color are left ,0
38,Polycarp was recently given a set of number even dominoes Each domino contains two integers from to Can he divide all the dominoes into two sets so that all the numbers on the dominoes of each set are different Each domino must go into exactly one of the two sets For example if he has dominoes and then Polycarp will be able to divide them into two sets in the required way The first set can include the first and third dominoes and and the second set the second and fourth ones and ,To solve the problem it is enough to consider several cases if the array is already sorted the answer is if or then you can sort the array in one operation by selecting the subarray or if and you can perform the sequence of operations and and sort the array on each of them you can t do it faster since you can t move both to position and to position in only operations otherwise the array can be sorted in operations ,0
39,You are given sticks the length of the th stick is You have to create rectangles each rectangle will consist of exactly sticks from the given set The rectangle consists of four sides opposite sides should have equal length and all angles in it should be right Note that each stick can be used in only one rectangle Each stick should be used as a side you cannot break the stick or use it not to the full length You want to all rectangles to have equal area The area of the rectangle with sides and is Your task is to say if it is possible to create exactly rectangles of equal area or not You have to answer independent queries ,After sorting we can observe that if the answer is then the area of each rectangle is Then we just need to check for each from to that and and If all conditions are satisfied for all then the answer is Otherwise the answer is ,1
40,We will call a non empty string if it contains the same number of plus and minus signs For example strings and are balanced and strings and are not balanced We will call a string if the string can be made balanced by several possibly zero uses of the following operation replace two minus signs with one plus sign In particular every balanced string is promising However the converse is not true not every promising string is balanced For example the string is promising because you can replace two adjacent minuses with plus and get a balanced string or get another balanced string How many non empty substrings of the given string are promising Each non empty promising substring must be counted in the answer as many times as it occurs in string Recall that a substring is a sequence of consecutive characters of the string For example for string its substring are the string is a substring of itself and some others But the following strings are not its substring ,The topic of this problem is BFS Let strings be the vertices of the graph and there is a directed edge from string to string if and only if we can obtain from by removing exactly one character In this interpretation we have to find first visited vertices if we start our BFS from the initial string And then the answer will be just minus the sum of length of visited strings The last thing to mention instead of standard queue of integers we need to maintain the queue of strings and instead of array of visited vertices we have to maintain the set of visited strings Don t forget to stop BFS when you obtain exactly strings If the number of distinct subsequences is less than then the answer is ,0
41,Consider a system of water taps all pouring water into the same container The th water tap can be set to deliver any amount of water from to ml per second this amount may be a real number The water delivered by th tap has temperature If for every you set th tap to deliver exactly ml of water per second then the resulting temperature of water will be if then to avoid division by zero we state that the resulting water temperature is You have to set all the water taps in such a way that the resulting temperature is exactly What is the maximum amount of water you may get per second if its temperature has to be ,The following greedy strategy work Let s turn all the taps at full power If total temperature is greater than then we would like to decrease power on some taps with higher temperature We want to decrease as low power as possible so we should prioritize taps with the highest temperature Sort all taps by temperature and find the total power on suffix you should decrease to have equal temperatures This can be done with binary search The same works for smaller initial temperature Overall complexity ,1
42,Alice and Bob play a game They have a binary string a string such that each character in it is either or Alice moves first then Bob then Alice again and so on During their move the player can choose any number not less than one of in and delete them For example if the string is there are possible moves deleted characters are bold After the characters are removed the characters to the left and to the right of the removed block become adjacent I e the following sequence of moves is valid The game ends when the string becomes empty and the score of each player is Each player wants to maximize their score Calculate the resulting score of Alice ,Two calendars are same if and only if they have the same number of days and starts with the same day of a week So we should simply iterate over years and maintain the day of a week of January 1st for example Easy to see that the day of a week increases by one each year except of the leap years when it increases by two ,0
43,You are given two strings and Both strings have length and consist of lowercase Latin letters The characters in the strings are numbered from to You can successively perform the following move any number of times possibly zero swap any two adjacent neighboring characters of i e for any you can swap and You can t apply a move to the string The moves are applied to the string one after another Your task is to obtain the string from the string Find any way to do it with at most such moves ,This problem can be solved using the next greedy approach let s iterate over all from to If go further Otherwise let s find any position such that and move the character from the position to the position If there is no such position in the answer is Upper bound on time complexity and the size of the answer of this solution is ,1
44,The New Year holidays are over but Resha doesn t want to throw away the New Year tree He invited his best friends Kerim and Gural to help him to redecorate the New Year tree The New Year tree is an undirected tree with vertices and root in the vertex You should process the queries of the two types Change the colours of all vertices in the subtree of the vertex to the colour Find the number of different colours in the subtree of the vertex ,Let s run dfs on the tree and write out the vertices in order of their visisiting by dfs that permutation is called Euler walk Easy to see that subtree of any vertex is a subsegment of that permutation Note that the number of different colours is so we can store the set of colours just as mask of binary bits in bit type long long in C long in Java Let s build the segment tree over the permutation which supports two operations paint subsegment by some colour and find the mask of colours of some segment ,1
45,Alice guesses the strings that Bob made for her At first Bob came up with the secret string consisting of lowercase English letters The string has a length of or more characters Then from string he builds a new string and offers Alice the string so that she can guess the string Bob builds from as follows he writes all the substrings of length of the string in the order from left to right and then joins them in the same order into the string For example if Bob came up with the string then all the substrings of length of the string are Therefore the string You are given the string Help Alice to guess the string that Bob came up with It is guaranteed that was built according to the algorithm given above It can be proved that the answer to the problem is unique ,Note that the first two characters of match the first two characters of The third character of the string again matches the second character of since it is the first character in the second substring which contains the second and the third character of The fourth character matches with the third character of It is easy to notice that such a pattern continues further That is the string consists of the first character and all characters at even positions in ,1
46,You are the head of a large enterprise people work at you and is odd i e is not divisible by You have to distribute salaries to your employees Initially you have dollars for it and the th employee should get a salary from to dollars You have to distribute salaries in such a way that the median salary is To find the median of a sequence of odd length you have to sort it and take the element in the middle position after sorting For example the median of the sequence is the median of the sequence is It is guaranteed that you have enough money to pay the minimum salary i e You have to answer test cases ,Let be equal minimum amount of money to obtain the median salary at least We ll solve this problem by binary search by Suppose the have to calculate the minimum amount of money for obtaining median salary at least Let s divide all salaries into three groups In order to the median salary be at least there must be at least salaries greater than or equal to Let s denote the number of such salaries as Note that salaries of the first group can t increment the value of so it s beneficial for us to pay the minimum salary for this group Salaries if second group always increment the value of so it s also beneficial for us to pay the minimum salary The salaries from the third group are more interesting For each salary in this group we can pay and increment or we can pay and don t increase The value of should be increased by So if the size of the third group is less than than we can t obtain the median salary Otherwise we can define how many salaries we can take with value and chose the minimal ones ,1
47,The new generation external memory contains an array of integers This type of memory does not support changing the value of an arbitrary element Instead it allows you to cut out any segment of the given array rotate it by any offset and insert it back into the same place Technically each cyclic shift consists of two consecutive actions You may select arbitrary indices and as the boundaries of the segment Then you replace the segment with it s to the by an arbitrary offset The concept of a can be also explained by following relations the sequence is a cyclic shift of the sequence to the left by the offset and the sequence is a cyclic shift of the sequence to the left by the offset For example if then choosing and yields a segment This segment is then shifted by the offset to the and you get a segment which then takes the place of of the original elements of the segment In the end you get Sort the given array using no more than cyclic shifts of any of its segments Note that you don t need to minimize the number of cyclic shifts Any method that requires or less cyclic shifts will be accepted ,We can first compute all values of Since we only care about the maximum such value within our segment we can use div conquer to solve every segment In particular if we know the index of the maximum value in we know that any segment crossing this index has this value as its maximum We can thus solve all segments crossing this maximum and recurse on the left and right sides To find the best crossing segment note that each problem contributes a value of We can independently find the largest sum starting from our crossing index going left and the largest sum going right and add these two together for the best overall crossing segment Unfortunately since we can t guarantee that the maximum indices will divide our interval nicely in half this does not lead to the usual runtime of div conquer but is instead in the worst case To improve on this we can precompute partial sums of and use RMQ to find the minimum sum left of the crossing index and the maximum sum right of the crossing index This reduces the crossing computation from per index to or giving an overall runtime of Code 49036431 ,0
48,You are given four integer values and Check if there exists a string that contains letters letters letters no other letters exactly pairs of adjacent equal letters exactly such positions that the th letter is equal to the th one ,We will use binary search to solve the problem Suppose we want to know if the answer is not less than Each array can be represented by a bit mask where the th bit is if the th element of the array is not less than or if the th element is less than If we want to verify that the answer is not less than we have to choose two arrays such that bitwise OR of their masks is Checking all pairs of arrays is too slow Instead we can treat the arrays represented by the same masks as equal so we will have no more than distinct arrays and we can iterate over pairs Overall the solution works in ,0
49,You are given a string consisting of lowercase Latin letters A substring of string is a continuous segment of letters from For example is a substring of and is not The length of the substring is the number of letters in it Let s call some string of length if and only if there is no letter to appear strictly more than times For example strings and are and strings and are not Your task is to find substring of string or report that there is none Note that it is not required to maximize or minimize the length of the resulting substring ,Notice that the string of two distinct letter is already diverse That implies that the answer is if and only if all the letters in the string are the same Otherwise you can check all pairs of adjacent letters in Overall complexity ,1
50,Polycarp bought a new expensive painting and decided to show it to his friends He hung it in his room of his friends entered and exited there one by one At one moment there was no more than one person in the room In other words the first friend entered and left first then the second and so on It is known that at the beginning before visiting friends a picture hung in the room At the end after the th friend it turned out that it disappeared At what exact moment it disappeared there is no information Polycarp asked his friends one by one He asked each one if there was a picture when he entered the room Each friend answered one of three response encoded with response encoded as response is encoded with Everyone except the thief either doesn t remember or told the The thief can say anything any of the three options Polycarp cannot understand who the thief is He asks you to find out the number of those who can be considered a thief according to the answers ,First let s note that we will have a transition from to only once otherwise it turns out that first the picture disappeared then it appeared and disappeared back but we can consider that a friend in the middle who answered lied to us but this is not true because even before him the picture disappeared So we need to find this transition Since we can also meet we find the index of the leftmost in case of absence we take and mark it as and the index of rightmost in case of absence we take and mark as Answer the number of indices between them inclusive because only they could lie There could not be a thief to the left of since either the friend under the index lied or the picture was not stolen before There could not be a thief to the right of since either the painting had already been stolen in the presence of s friend or it was he who lied ,1
51,Let s call the set of positive integers if the following two conditions are met if and then and For the given values and you have to find the maximum size of the set ,The topic of this problem is BFS Let strings be the vertices of the graph and there is a directed edge from string to string if and only if we can obtain from by removing exactly one character In this interpretation we have to find first visited vertices if we start our BFS from the initial string And then the answer will be just minus the sum of length of visited strings The last thing to mention instead of standard queue of integers we need to maintain the queue of strings and instead of array of visited vertices we have to maintain the set of visited strings Don t forget to stop BFS when you obtain exactly strings If the number of distinct subsequences is less than then the answer is ,0
52,You are given strings of length at most For each string determine if there exist two strings and such that That is is the concatenation of and Note that be equal to Recall that the concatenation of strings and is where and are the lengths of strings and respectively For example concatenation of and is ,Let s denote a prefix of length as We can note that each where and is a concatenation Then balance of prefix of length is equal to Now there two cases is equal to or not If then if exist such that then for each and answer is Otherwise for each such there will no more than one possible since there are zero or one solution to the equation The solution exists if and only if and So just precalc and for each check the equation ,0
53,Let s call the set of positive integers if the following two conditions are met if and then and For the given values and you have to find the maximum size of the set ,The key idea of the task is to prove that there is an optimal answer where the chosen elements in has a period equal to Let s work with instead of Firstly let s prove that if we ve chosen correct set in interval then if we take all then set will be corect as well By contradiction suppose we have then or contradiction It means that if we take the correct set in interval we can create a periodic answer by copying this interval several times Next let s prove that there is an optimal periodic answer Let s look at any optimal answer and its indicator vector binary vector of length where iff is in the set Let Let s split the vector in intervals The st rd th segments have length and nd th segments have length If we choose any two consecutive segments its total length will be equal to and we can use it to make periodic answer by replacing all length segments with the chosen one and segments with the other one We can prove that we can always find such two consecutive segments that the induced answer will be greater or equal to the initial one If we create vector where is equal to the sum of in the th segment then the task is equivalent to finding and such that replacing all by and all by won t decrease array sum The proof is down below Now since the answer is periodical taking element is equivalent to taking all elements so for each we can calc the number of integers with the same remainder And for each we either take it or not So we can write where is the maximum sum if we processed elements and last elements are described by mask We start with and when look at the th element either take it if we can or skip it Time complexity is Let s prove that for any array we can find pair such that replacing all with and all with won t decrease the total sum Let s define and Let s make array where and The meaning behind is how changes the total sum if we replace corresponding elements by Note that finding a good pair is equivalent to finding Also note that and analogically Let s prove by contradiction suppose that for any Let s look at But from the other side we know that so otherwise will be negative In the same way since then Analogically we can prove that each but contradiction So there is always a pair i e a pair ,1
54,You are given some Tetris field consisting of columns The initial height of the th column of the field is blocks On top of these columns you can place figures of size i e the height of this figure is blocks and the width of this figure is block Note that you rotate these figures Your task is to say if you can clear the whole field by placing such figures More formally the problem can be described like this The following process occurs while You place one figure choose some from to and replace with then while all are greater than zero replace each with And your task is to determine if it is possible to clear the whole field i e finish the described process choosing the places for new figures properly You have to answer independent test cases ,Coordinates don t exceed so it s possible to use sweep line method to solve the problem Let s calculate value separately for each side I will show the algorithm for left side and all the others will be done similarly Let be the number of sofas which has smaller of their coordinates less than or equal to To count that let s firstly increment by one for all sofas and then proceed from left to right and do Now will represent number of sofas to the left of the current one but the sofa itself can also be counted You need to decrement the result by one if The same is for top value but with coordinates insted of For the right and bottom values you should calculate and Then take and The only thing left is to compare values of each sofa with given ones and find the suitable sofa Overall complexity ,0
55,Little girl Tanya climbs the stairs inside a multi storey building Every time Tanya climbs a stairway she starts counting steps from to the number of steps in this stairway She speaks every number aloud For example if she climbs two stairways the first of which contains steps and the second contains steps she will pronounce the numbers You are given all the numbers pronounced by Tanya How many stairways did she climb Also output the number of steps in each stairway The given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways ,Let s use dynamic programming to solve the problem Let be the number of correct partitions for the long integer It s easy to see that if we have two big integers without leading zeroes we know the lengths of these integers and these lengths are not equal then we can determine which integer is greater in We will calculate the answers in the following order Suppose we want to calculate Let be the minimum position such that the number meets the following condition Let be the maximum position such that the number meets the following condition Initially let s consider will be less if will be less if To determine which of the numbers and is greater let s calculate z function for the string where is any character that doesn t occur in and After calculating z function we can easily find the first non equal character in and and this character will determine which number is greater To compare and we can act the same All that s left is to set to the sum of values from to This can be done by maintaining suffix sums There is a corner case which applies when If then because we cannot afford any leading zeroes Otherwise ,0
56,We will call a non empty string if it contains the same number of plus and minus signs For example strings and are balanced and strings and are not balanced We will call a string if the string can be made balanced by several possibly zero uses of the following operation replace two minus signs with one plus sign In particular every balanced string is promising However the converse is not true not every promising string is balanced For example the string is promising because you can replace two adjacent minuses with plus and get a balanced string or get another balanced string How many non empty substrings of the given string are promising Each non empty promising substring must be counted in the answer as many times as it occurs in string Recall that a substring is a sequence of consecutive characters of the string For example for string its substring are the string is a substring of itself and some others But the following strings are not its substring ,Now we need to quickly find for a given balance value on the prefix the number of matching left boundaries The boundary is suitable if the balance on the boundary is comparable modulo to the current balance and the current balance is less than the balance on the boundary since we need the balance on the segment to be non positive That is we need to be able to find a number of numbers for each value of the balance that is not less than ours This can be done either by data structure or notice that the balance takes only different values then you can find the number of numbers not less on the prefix for ,1
57,A is a figure of the following type an asterisk character in the center of the figure and four rays to the left right top bottom of the same positive length The size of a is the length of its rays The size of a star must be a positive number i e rays of length are not allowed Let s consider empty cells are denoted by then the following figures are You are given a rectangular grid of size consisting only of asterisks and periods dots Rows are numbered from to columns are numbered from to Your task is to draw this grid using number of or find out that it is impossible can intersect overlap or even coincide with each other The number of in the output can t exceed Each star should be completely inside the grid You can use stars of same and arbitrary sizes ,Notice that rows can be solved completely separately of each other Each tile takes either one or two squares but it s always in the same row So let s take a look at a single row There are sequences of dot characters separated by some asterisks Once again each of these sequences can be solved independently of the others Thus we have these empty strips of empty squares which when solved can be summed up into the whole answer There are two cases depending on if a is cheaper than two tiles If it is then we want to use of many tiles as possible So given we can place tiles and cover the rest squares with tiles If it isn t cheaper then we want to cover everything with tiles and never use ones So all should be The easier way to implement this might be the following Let s update the price of the tile with the minimum of and This way the first algorithm will produce exactly the same result of the second one in the case when a tile isn t cheaper than two ones Overall complexity per testcase ,0
58,Let s call an undirected graph if and only if for each edge the greatest common divisor of and is If there is no edge between some pair of vertices and then the value of doesn t matter The vertices are numbered from to Construct a graph with vertices and edges such that it is connected and it contains neither self loops nor multiple edges If there exists no valid graph with the given number of vertices and edges then output If there are multiple answers then print any of them ,Even though is up to straightforward solution will work You iterate for from to in the outer loop from to in the inner loop and check each time When edges are found you break from both loops Here is why this work fast enough The total number of pairs with is where is Euler s totient function We also want to substract a single pair And this sum grows so fast that after about iteratons will be greater than for any The only thing left is to check that is big enough to build a connected graph and small enough to fit all possible edges for given the formula above Overall complexity ,1
59,Vasya got really tired of these credits from problem F and now wants to earn the money himself He decided to make a contest to gain a profit Vasya has problems to choose from They are numbered from to The difficulty of the th problem is Moreover the problems are given in the increasing order by their difficulties In order to add the th problem to the contest you need to pay burles to its author For each problem in the contest Vasya gets burles So the total earnings for the contest are calculated as follows if Vasya takes problem to the contest he needs to pay to its author for each problem in the contest Vasya gets burles let If Vasya takes all the tasks with indices from to to the contest he also needs to pay If then Calculate the maximum profit that Vasya can earn by taking a consecutive segment of tasks ,Let s precalculate for each number indexed the array of length where is the number of occurrences of the number on the prefix of length This can be done with easy dynamic programming just compute prefix sums Also let be and it s meaning is the number of occurrences of the number on the segment indexed Firstly let s update the answer with we can always take all occurrences of the same element as the answer Then let s iterate over all possible segments of the array Let the current segment be Consider that all occurrences of the element in the middle block belong to Then we can just take the most frequent number on this segment We also have to choose the number for the first and the last blocks It is obvious that for the number the maximum amount of such numbers we can take is So And we can update the answer with Time complexity where is the size of alphabet the maximum value of ,0
60,You are given one integer Recall that a permutation of length is an array consisting of distinct integers from to in arbitrary order For example is a permutation of length but is not a permutation appears twice in the array and is also not a permutation but there is in the array Your task is to find a permutation of length that there is no index such that so for all from to the condition should be satisfied You have to answer independent test cases If there are several answers you can print any It can be proven that the answer exists for each ,Each move we can choose the minimum element in the maximum element in and swap them if the minimum in is less than maximum in If we repeat this operation times we get the answer This can be done in but authors solution is ,0
61,You are given a huge decimal number consisting of digits It is guaranteed that this number has no leading zeros Each digit of this number is either or You may perform several possibly zero operations with this number During each operation you are allowed to change any digit of your number you may change to or to It is possible that after some operation you can obtain a number with leading zeroes but it does not matter for this problem You are also given two integers Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder modulo In other words the obtained number should have remainder when divided by ,Let s solve this task in several steps Step 1 Calculate for each vertex Let be maximal profit of some 2 path starting at and finishing at If vertex is a root of the tree then equivalent to where maximal profit of 2 path when we can go only in subtree of The can be calculated with next approach To calculate we can use next technique Let s manage next invariant when processing vertex all its neighbours even parent will hold as if its parent Then After that we can proceed with each child of but before moving to it we must change value since we must keep invariant true To keep it true it s enough to set Also let s memorize value as Step 2 Processing queries Let simple path be If then answer is Otherwise each edge on this simple path must be used exactly once But while travelling from to using this simple path at each vertex we can go somewhere and return to the only condition is not use edges from simple path And we can do it using precalculated values and So if we want to find max profit of 2 path with prohibited edges so we can use value Finally to process queries let s find divide it on two queries Now we can handle all queries offline travelling on tree in dfs order Let s manage some data structure on current path from current vertex to the root this DS can be based on array of depths Then when we come to vertex just add value to DS in position and erase it before exit Each query becomes a query of sum to some subsegment in DS don t forget carefully handle value in lca And before moving from to you need subtract from current value of here you can at once subtract weight of edge Don t forget to return each change in DS when it needed As we can see DS is just a BIT with sum on segment and change in position Result complexity is Fast IO are welcome ,0
62,Polycarp is playing a new computer game This game has stones in a row The stone on the position has integer power Each turn Polycarp can destroy either stone on the first position or stone on the last position in other words either the leftmost or the rightmost stone When Polycarp destroys the stone it does not exist any more Now Polycarp wants two achievements He gets them if he destroys the stone with the power and the stone with the power Help Polycarp find out what is the minimum number of moves he should make in order to achieve his goal For example if and then Polycarp could make the following moves Destroy the leftmost stone After this move Destroy the rightmost stone After this move Destroy the leftmost stone After this move Polycarp destroyed the stones with the greatest and least power so he can end the game Please note that in the example above you can complete the game in two steps For example Destroy the leftmost stone After this move Destroy the leftmost stone After this move Polycarp destroyed the stones with the greatest and least power so he can end the game ,If we want to destroy the largest and smallest stone then there are only four options Destroy the stones on the left until we destroy the smallest stone Then destroy the stones on the right until we destroy the largest stone Destroy the stones on the right until we destroy the smallest stone Then destroy the stones on the left until we destroy the largest stone Destroy the stones on the left until we destroy both stones Destroy the stones on the right until we destroy both stones You need to check all four options and choose the minimum answer ,1
63,You are given the array consisting of elements and the integer You want to obtain equal elements in the array In one move you can make one of the following two operations Take of the minimum elements of the array and increase its value by one more formally if the minimum value of is then you choose such index that and set take of the maximum elements of the array and decrease its value by one more formally if the maximum value of is then you choose such index that and set Your task is to calculate the minimum number of moves required to obtain equal elements in the array ,This problem is just all about the implementation Firstly let s sort the initial values and compress them to pairs where is the number of elements The first observation is pretty standard and easy some equal elements will remain unchanged So let s iterate over all elements in some order and suppose that all elements will remain unchanged Firstly we need elements which we should obtain by some moves The second observation is that we first need to take elements from one end only less or only greater and only then from the other if needed Consider the case when we first take less elements The other case is almost symmetric Let be the number of less than which we need to increase to If then skip the following step Otherwise let be the number of elements less than or equal to be the sum of all elements less than or equal to and be the previous value the maximum value less than Then we need to increase all elements less than or equal to at least to the value It costs moves And then we need moves to increase elements to And let be the number of elements greater than which we need to decrease to if we increased elements already If then skip the following step Otherwise let be the number of elements greater than or equal to be the sum of all elements greater than or equal to and be the next value the minimum value greater than Then we need to decrease all elements greater than or equal to at least to the value It costs moves And then we need moves to decrease elements to So we can update the answer with the sum of values described above and proceed to the next value Arrays are just simple prefix and suffix sums which can be calculated in using very standard and easy dynamic programming Don t forget about the overflow Total time complexity because of sorting ,1
64,You are given a matrix consisting of rows and columns The th cell of the th row contains an integer First you have to color each row of the matrix either red or blue in such a way that and Then you have to choose an integer and cut the colored matrix in such a way that the first columns become a separate matrix the matrix and the last columns become a separate matrix the matrix The coloring and the cut are called if two properties hold every red cell in the left matrix contains an integer greater than every blue cell in the left matrix every blue cell in the right matrix contains an integer greater than every red cell in the right matrix Find any perfect coloring and cut or report that there are none ,If we put the maximum in the array on the first position then for every element starting from the third one the sum of elements before it will be greater than it since that sum is greater than the maximum value in the array So the only element that can make our array ugly is the second element We need to make sure that it is not equal to the first element Let s put the maximum element on the first position the minimum element on the second position and then fill the rest of the array arbitrarily The only case when it fails is when the maximum element is equal to the minimum element and it s easy to see that if the maximum is equal to the minimum then the first element of the array will be equal to the second element no matter what and the array cannot become beautiful So the solution is to check if the maximum is different from the minimum and if it is so put them on the first two positions and the order of remaining elements does not matter Note that the given array is sorted so the minimum is the first element the maximum is the last element ,0
65,You have a garland consisting of lamps Each lamp is colored red green or blue The color of the th lamp is and colors of lamps in the garland You have to recolor some lamps in this garland recoloring a lamp means changing its initial color to another in such a way that the obtained garland is A garland is called if any two adjacent consecutive lamps i e such lamps that the distance between their positions is have distinct colors In other words if the obtained garland is then for each from to the condition should be satisfied Among all ways to recolor the initial garland to make it you have to choose one with the number of recolored lamps If there are multiple optimal solutions print of them ,Let s divide the initial string into blocks of consecutive equal letters For example if we have the string then have blocks the first block is two letters the second one is three letters the third one is two letters and the last one is four letters Let s see at the current block let it has the length and consider two cases The first case is when this block has odd length Then it seems like So what is the minimum number of recolors we need to make this block correct It is Why can we always make this block correct for such number of recolors Because we can recolor all at even positions to any which differs from So our block will be look like The second case is when this block has even length Then it seems like where is the next block letter if the next block exists because the last block doesn t have the next one What is the minimum number of recolors in this case It is How can we recolor this block to make it correct Let s recolor all at even positions again to any which differs from and differs from So our block will be look like So all we have to do is to iterate over all blocks from left to right and apply the algorithm above to recolor them ,1
66,You are given a tree of vertices and edges The th vertex has an initial weight Let the from vertex to vertex be the number of edges on the path from to Note that and Let the distance from to be Note that and if Analogically to usual distance let s define the of vertex as the greatest weighted distance from to any other vertex including itself or Finally let s define the of the tree as the minimum eccentricity of any vertex or You need to perform queries of the following form assign After performing each query print the radius of the current tree ,At first time limit was not that tight for the problem We didn t want any sqrt bitset or straight up solution to pass and it s close to none to pass Jury solution works faster than twice the time limit so we decided 6 seconds is alright The task is purely about implementation You renumerate numbers in permutations so that the queries are and then have the structure to make update in point and sum on rectangle Renumeration in my case was making the first permutation into identity one and changing the numbers in second appropriately You can choose the structure you want I ll tell about the one I use when the queries are offline For online the common technique is having BITs each with treap in it ordered set template from pbds is usually enough For offline you can precalculate the values to fall into each BIT beforehand and do BIT on these values inside Preprocess all the update and get queries adding into all the BITs will fall into Then sort them and leave only unique occurrences Overall complexity ,0
67,HDD hard drives group data by sectors All files are split to fragments and each of them are written in some sector of hard drive Note the fragments can be written in sectors in arbitrary order One of the problems of HDD hard drives is the following the magnetic head should move from one sector to another to read some file Find the time need to read file split to fragments The th sector contains the th fragment of the file Note different sectors contains the different fragments At the start the magnetic head is in the position that contains the first fragment The file are reading in the following manner at first the first fragment is read then the magnetic head moves to the sector that contains the second fragment then the second fragment is read and so on until the th fragment is read The fragments are read in the order from the first to the th It takes time units to move the magnetic head from the sector to the sector Reading a fragment takes no time ,At first time limit was not that tight for the problem We didn t want any sqrt bitset or straight up solution to pass and it s close to none to pass Jury solution works faster than twice the time limit so we decided 6 seconds is alright The task is purely about implementation You renumerate numbers in permutations so that the queries are and then have the structure to make update in point and sum on rectangle Renumeration in my case was making the first permutation into identity one and changing the numbers in second appropriately You can choose the structure you want I ll tell about the one I use when the queries are offline For online the common technique is having BITs each with treap in it ordered set template from pbds is usually enough For offline you can precalculate the values to fall into each BIT beforehand and do BIT on these values inside Preprocess all the update and get queries adding into all the BITs will fall into Then sort them and leave only unique occurrences Overall complexity ,0
68,There are emotes in very popular digital collectible card game the game is pretty famous so we won t say its name The th emote increases the opponent s happiness by units we all know that emotes in this game are used to make opponents happy You have time to use some emotes only times You are allowed to use any emotion once more than once or not use it at all The only restriction is that you otherwise the opponent will think that you re trolling him You have to make your opponent as happy as possible Find the maximum possible opponent s happiness ,In this problem we have to calculate the number of positions such that if we change the type of the bracket at this position then the obtained bracket sequence will become regular Let s calculate the balance of each prefix of the bracket sequence and store it in the array Just iterate from left to right over the string and if the current bracket is opening then increase the current balance by one otherwise decrease it by one For each prefix let s also calculate whether it can be a prefix of a regular bracket sequence RBS and store it in the array The prefix of length can be the prefix of RBS if and only if the prefix of length can be the prefix of RBS and Let s calculate the same arrays for all suffixes and call they and correspondingly but now the closing bracket will increase the balance by one and the opening will decrease it by one and we consider the characters from right to left Now if we have these arrays let s iterate over all positions in the initial bracket sequence If we now at the position then let s do the following things firstly if or then skip this position Otherwise if the current bracket is opening then we have to increase the answer if and only in this case the bracket sequence will become regular And if the current bracket is closing then we have to increase the answer if ,0
69,At first there was a legend related to the name of the problem but now it s just a formal statement You are given points on the axis Now you are asked to find such an integer point on axis that is minimal possible The function can be described in the following way form a list of distances where distance between and sort list in non descending order take as a result If there are multiple optimal answers you can print any of them ,First observation closest points to any point form a contiguous subsegment so Second observation for any contiguous subsegment all points this subsegment closest to also form a contiguous segment And because of the nature of value of is minimal in borders and So all we need is to check all and But what is a value of It s such point that but So it s just in the middle of segment Note that and so it s enough to check only s In result all we need is to find minimal possible value and resulting ,1
70,The girl Taylor has a beautiful calendar for the year In the calendar all days are given with their days of week Monday Tuesday Wednesday Thursday Friday Saturday and Sunday The calendar is so beautiful that she wants to know what is the next year after when the calendar will be exactly the same Help Taylor to find that year Note that leap years has days The year is leap if it is divisible by or it is divisible by but not by https en wikipedia org wiki Leap year ,Two calendars are same if and only if they have the same number of days and starts with the same day of a week So we should simply iterate over years and maintain the day of a week of January 1st for example Easy to see that the day of a week increases by one each year except of the leap years when it increases by two ,1
71,You are given a string consisting of characters Each character of is either or A substring of is a contiguous subsequence of its characters You have to choose two substrings of possibly intersecting possibly the same possibly non intersecting just any two substrings After choosing them you calculate the value of the chosen pair of substrings as follows let be the first substring be the second chosen substring and be the integer such that is its binary representation for example if is the value is the of and Calculate the maximum possible value you can get and print it ,The first observation we need is that we can choose two prefixes of as the substrings used in forming the results This can be proved easily suppose we chose a substring which does not contain the leftmost character of if we expand it to the left the answer won t become worse So it is optimal to choose two prefixes of as the substrings Furthermore one of these prefixes must be itself if the leftmost index of is the length of the answer won t exceed but the only way to have a in the th bit of the answer is to choose a prefix of where the th character from the right is and there is only one such prefix of which is itself So now we can solve the problem in try to combine all prefixes of with itself and choose the one that yields the best answer To speed this up we need to somehow cut down on the number of prefixes of we check Let s look at the first block of s in The next character after this block is since we take as one of the substring in order to get instead of in the corresponding position of the answer we need to choose a prefix which has in that position This represents one of the s from the first block of s since only one of them can shift to that position So we need to check only the prefixes such that by using them we shift some character from the first block to the position of the first after this block Since the tests are random the expected length of the first block of s is furthermore even the probabiliy that its length is or bigger is about so the expected number of prefixes we need to check is also Thus the expected runtime of our solution is ,1
72, You are given an sequence of form which consist of blocks of all consecutive positive integers written one after another The first block consists of all numbers from to the second one from to the third one from to the th block consists of all numbers from to So the first elements of the sequence are Elements of the sequence are numbered from one For example the st element of the sequence is the rd element of the sequence is the th element of the sequence is the th element is the th element of the sequence is Your task is to answer independent queries In the th query you are given one integer Calculate the digit at the position of the sequence ,Let s take a look on the upper bound of the number where is the maximum possible number of block which can be asked If we assume that each number has length then the sum of lengths will be equal to And as we know this value equals So the maximum value of is not greater than Now we can just iterate over all from to where is no more than and carry the length of the last block If this length is greater than or equal to indexed then let s decrease by this length increase the length of the last block and continue Otherwise our answer lies in the current block So then let s iterate over all from to and if the decimal length of is greater than or equal to then decrease by this length otherwise our answer lies in the current number and we just need to print indexed Time complexity per query ,1
73,At the school where Vasya is studying preparations are underway for the graduation ceremony One of the planned performances is a ball which will be attended by pairs of boys and girls Each class must present two couples to the ball In Vasya s class boys and girls wish to participate But not all boys and not all girls are ready to dance in pairs Formally you know possible one boy one girl pairs You need to choose two of these pairs so that no person is in more than one pair For example if and the couples are ready to dance together in each pair the boy s number comes first then the girl s number then the following combinations of two pairs are possible not all possible options are listed below and and But the following combinations are not possible and the first boy enters two pairs and the second girl enters two pairs Find the number of ways to select two pairs that match the condition above Two ways are considered different if they consist of different pairs ,Note that we never have a choice in what door should we open First we open the door with the same number as the key in our hand Then the door with the same number as the key behind the first opened door Finally the door with the same number as the key behind the second opened door If any of the first and second opened doors didn t have a key behind it then it s impossible Otherwise we open every door Let be the keys behind the corresponding doors Then we should check if is not zero and is not zero Overall complexity per testcase ,0
74,You are given arrays each array consists of exactly integers We denote the th element of the th array as You have to choose two arrays and it is possible that After that you will obtain a new array consisting of integers such that for every Your goal is to choose and so that the value of is maximum possible ,We will use binary search to solve the problem Suppose we want to know if the answer is not less than Each array can be represented by a bit mask where the th bit is if the th element of the array is not less than or if the th element is less than If we want to verify that the answer is not less than we have to choose two arrays such that bitwise OR of their masks is Checking all pairs of arrays is too slow Instead we can treat the arrays represented by the same masks as equal so we will have no more than distinct arrays and we can iterate over pairs Overall the solution works in ,1
75,Polycarp has of red and of blue candies Using them he wants to make gift sets Each gift set contains either red candies and blue candies or blue candies and red candies Any candy can belong to at most one gift set Help Polycarp to find the largest number of gift sets he can create For example if and then Polycarp can make three gift sets In the first set there will be red candies and blue candies In the second set there will be blue candies and red candies In the third set will be blue candies and red candies Note that in this example there is one red candy that Polycarp does not use in any gift set ,It is obvious that if there is a pair of points and such that and then the answer is It means that if the answer is then there is some ordering of points such that and because we can only move right or up But what is this ordering it is just sorted order of points firstly by then by So we can sort all points check if this ordering is valid and traverse among all these points For each from to firstly do moves to the right then do moves to the up because this order minimizing the answer lexicographically Time complexity or ,0
76,In Japan the number reads like death so Bob decided to build a contains all natural numbers that do not contain the digit For example the number is part of the sequence but the numbers are not part of the sequence Bob realized that he does not know how to quickly search for a particular number by the position in the sequence so he asks for your help For example if Bob wants to find the number at position indexing from you need to answer ,Note that any number in the sequence can be made up of possible digits all digits except Then let s find the first digit of the answer notice that it is just or where where the length of the number we re looking for and the maximum Note that simply corresponds to a digit in the base numeral system Why is this so Because without the first digit we can assemble any numbers with possible digits and we can put the digits except in the first place Thus in the answer the first digit will be if and if Note that once the first digit is determined the rest can be found the same way since the prefix does not affect anything ,1
77,A is a figure of the following type an asterisk character in the center of the figure and four rays to the left right top bottom of the same positive length The size of a is the length of its rays The size of a star must be a positive number i e rays of length are not allowed Let s consider empty cells are denoted by then the following figures are You are given a rectangular grid of size consisting only of asterisks and periods dots Rows are numbered from to columns are numbered from to Your task is to draw this grid using number of or find out that it is impossible can intersect overlap or even coincide with each other The number of in the output can t exceed Each star should be completely inside the grid You can use stars of same and arbitrary sizes ,Since we are almost unlimited in the number of in the answer the following solution will works We iterate over all possible centers and try to extend rays of the current as large as possible It can be done by the simple iterating and checking in If the size of the current is non zero let s add it to the answer It is obvious that the number of in such answer will not exceed Then let s try to draw all these on the empty grid Drawing of each is also can be done in If after drawing our grid equals to the input grid the answer is and our set of is the correct answer Otherwise the answer is Time complexity ,1
78,You are given a string consisting of lowercase Latin letters A substring of string is a continuous segment of letters from For example is a substring of and is not The length of the substring is the number of letters in it Let s call some string of length if and only if there is no letter to appear strictly more than times For example strings and are and strings and are not Your task is to find substring of string or report that there is none Note that it is not required to maximize or minimize the length of the resulting substring ,There are several cases in this problem If then let s swap them Let be the modulo operator Firstly if then let s decrease and by one Otherwise if let s decrease by one and by two Now if then the answer is otherwise the answer is You can get more clear description of these cases if you will draw some cases on the paper ,0
79,Polycarp analyzes the prices of the new berPhone At his disposal are the prices for last days where is the price of berPhone on the day Polycarp considers the price on the day to be bad if later that is a day with a greater number berPhone was sold at a lower price For example if and then the number of days with a bad price is these are days and Print the number of days with a bad price You have to answer independent data sets ,Let be the minimum price of the berPhone during days We can precalculate this array moving from right to left and carrying the minimum price we met in other words if we iterate over all from to then if otherwise Then the answer is the number of such days from to that ,1
80,In the school computer room there are servers which are responsible for processing several computing tasks You know the number of scheduled tasks for each server there are tasks assigned to the th server In order to balance the load for each server you want to reassign some tasks to make the difference between the most loaded server and the least loaded server as small as possible In other words you want to minimize expression where is the most loaded server and is the least loaded one In one second you can reassign a single task Thus in one second you can choose any pair of servers and move a single task from one server to another Write a program to find the minimum number of seconds needed to balance the load of servers ,Denote s the sum of elements in array If s is divisible by n then the balanced array consists of n elements In this case the difference between maximal and minimal elements is 0 Easy to see that in any other case the answer is greater than 0 On the other hand the array consists of numbers and numbers is balanced with the difference equals to 1 Let s denote this balanced array b To get array b let s sort array a in nonincreasing order and match element ai to element bi Now we should increase some elements and decrease others In one operation we can increase some element and decrease another so the answer is Complexity O nlogn ,1
81,Vova is playing a computer game There are in total turns in the game and Vova really wants to play all of them The initial charge of his laptop battery i e the charge before the start of the game is During each turn Vova can choose what to do If the current charge of his laptop battery is strictly greater than Vova can and then the charge of his laptop battery will decrease by if the current charge of his laptop battery is strictly greater than Vova can his laptop and then the charge of his laptop battery will decrease by if the current charge of his laptop battery is less than or equal to and at the same time then Vova cannot do anything and loses the game Vova wants to complete the game Vova can complete the game if after each of turns the charge of the laptop battery is Vova has to play Among all possible ways to complete the game Vova wants to choose the one where the number of turns when he is the possible It is possible that Vova cannot complete the game at all Your task is to find out the possible number of turns Vova can make the or report that Vova cannot complete the game You have to answer independent queries ,Firstly about the problem description Vova really needs to i e play Exactly turns Among all possible ways to do it he need choose one where the number of turns when he this is the first type turn is Suppose the answer is Then the charge of the battery after turns will be If this value is greater than then the answer is Otherwise we need to replace some turns when Vova with turns when Vova The charge of the battery will increase by avfter one replacement We have to obtain with some replacements The number of turns to do it is equals to where is divided by rounded up If then the answer is Otherwise the answer is ,1
82,There is a robot staying at on the axis He has to walk to You are controlling this robot and controlling how he goes The robot has a battery and an accumulator with a solar panel The th segment of the path from to can be exposed to sunlight or not The array denotes which segments are exposed to sunlight if segment is exposed then otherwise The robot has one battery of capacity and one accumulator of capacity For each segment you should choose which type of energy storage robot will use to go to the next point it can be either battery or accumulator If the robot goes using the battery the current charge of the battery is decreased by one the robot can t use the battery if its charge is zero And if the robot goes using the accumulator the current charge of the accumulator is decreased by one and the robot also can t use the accumulator if its charge is zero If the current segment is and the robot goes through it the charge of the accumulator increases by one of course its charge can t become higher than it s maximum capacity If accumulator is used to pass some segment its charge decreases by 1 no matter if the segment is exposed or not You understand that it is not always possible to walk to You want your robot to go as far as possible Find the maximum number of segments of distance the robot can pass if you control him optimally ,Let s denote a prefix of length as We can note that each where and is a concatenation Then balance of prefix of length is equal to Now there two cases is equal to or not If then if exist such that then for each and answer is Otherwise for each such there will no more than one possible since there are zero or one solution to the equation The solution exists if and only if and So just precalc and for each check the equation ,0
83,One day Polycarp decided to rewatch his absolute favourite episode of well known TV series Tufurama He was pretty surprised when he got results only for season 7 episode 3 with his search query of Watch Tufurama season 3 episode 7 online full hd free This got Polycarp confused what if he decides to rewatch the entire series someday and won t be able to find the right episodes to watch Polycarp now wants to count the number of times he will be forced to search for an episode using some different method TV series have seasons numbered through the th season has episodes numbered through Polycarp thinks that if for some pair of integers and exist both season episode and season episode then one of these search queries will include the wrong results Help Polycarp to calculate the number of such pairs ,At first it doesn t matter if some season has more than episodes so we can set Let s maintain next invariant when we proceed th season we will have only seasons containing the episodes with indices Then the number of pairs is just number of seasons with index One of the ways to maintain this invariant is the following for each number of episodes store a list with indices of seasons with exactly episodes Then after proceeding of th season just erase all seasons with exactly episodes Maintaining seasons and counting them can be done by BIT with zeros and ones Finally notice that we counted each pair twice and also counted the pairs so we must subtract the number of pairs where and divide the result by two ,1
84,Alice and Bob are playing a game on a matrix consisting of rows and columns The cell in the th row in the th column contains coins in it Initially both Alice and Bob are standing in a cell They are going to perform a sequence of moves to reach a cell The possible moves are Move right from some cell to Move down from some cell to First Alice makes until she reaches She collects the coins in all cells she visit including the starting cell When Alice finishes Bob starts his journey He also performs the moves to reach and collects the coins in all cells that he visited The score of the game is the total number of coins Bob collects Alice wants to minimize the score Bob wants to maximize the score What will the score of the game be if both players play optimally ,First observe that each of the players has only m options for their path which column to go down in Let s consider a Bob s response to a strategy chosen by Alice The easiest way to approach that is to look at the picture of the Alice s path The path clearly separates the field into two independent pieces suffix of the first row and the prefix of the second row Bob can t grab the coins from both of them at once However he can grab either of them fully So the optimal path for him will be one of these two options You can precalculate some prefix sums and become able to get the Bob s score given the Alice s path Alice has m possibly paths so you can iterate over them and choose the minimum answer However prefix sums are not required since you can quickly recalculate both needed sums while iterating over the Alice s column to go down in Overall complexity O m per testcase ,1
85,There are communication towers numbered from to and bidirectional wires between them Each tower has a certain set of frequencies that it accepts the th of them accepts frequencies from to Let s say that a tower is accessible from a tower if there exists a frequency and a sequence of towers where consecutive towers in the sequence are directly connected by a wire and each of them accepts frequency Note that accessibility is not transitive i e if is accessible from and is accessible from then may not be accessible from Your task is to determine the towers that are accessible from the st tower ,Let s consider the sweep line approach by the value of the variable x the vertex i is active from the moment l i to the moment r i And we have to find vertices that are reachable in the graph of active vertices from the vertex 1 So we rephrased the problem as follows there are vertices that are active at some moments and we want to get some information about connectivity during each moment of time This is a standard offline dynamic connectivity problem which can be solved with a divide and conquer approach described here Now we are able to find the connectivity component of the 1 th vertex for each value of x It remains to understand how to combine answers for all values of x fast enough Let s try to visualize the components as vertices of a directed graph We assign a vertex to each component and when two components merge we add two directed edges from the new vertex to the vertices corresponding to the components and now we can use the reachability information in this graph Each vertex of the original graph corresponds to one of the sinks in this graph and sinks that correspond to the vertices of some component are reachable from the vertex corresponding to that component To restore all the vertex indices later we will mark all components containing the vertex 1 while we run our dynamic connectivity approach Then the vertex v of the original graph is included in the answer if the vertex representing the component containing only the vertex v is reachable from any of the marked vertices Now all you need to do is run DFS or BFS from all the marked vertices in the component graph ,1
86,You are given two strings and consisting of lowercase Latin letters A template is string consisting of lowercase Latin letters and asterisks character A template is called if the number of asterisks in it is less than or equal to the number of letters in it A string is said to be matching a template if you can replace each asterisk in with a string of lowercase Latin letters possibly an empty string so that it becomes equal to Find an template such that both and match it or report that such a template doesn t exist If there are multiple answers print any of them ,What s the reason behind authors specifically asking for templates that have less or equal asterisks than letters Well without that the problem would be kind of trivial A template is matched by every string so it would always work Hmm let s try to make something similar to that template then We basically have to find some part of that occurs in both strings that we can use letters on to get some freedom to use asterisks There are some easy cases If the first letters of both strings are the same then the template can be that letter followed by an asterisk There s a symmetrical case for the last letter By studying the examples you can also notice the final case a common substring of both strings of length at least two surrounded by two asterisks Moreover since we only use two asterisks we can find a substring of length exactly two which always exists if a longer common substring exists Turns out that s it If a template exists one of these three kinds also exists This is not that hard to show If the first two kinds don t work then you have to use asterisks on both sides of the template In order for the template with asterisks on both sides to work there have to be adjacent letters in it at least once otherwise it s like and there are more asterisks than letters And since at least one such substring exists we can just remove everything other than this substring and the asterisks on the sides Overall complexity per testcase ,1
87,You are given a binary string each character of this string is either or Let s denote the cost of string as the number of occurences of in For example if is and is then the cost of is Let s also denote the Fibonacci strings sequence as follows is is if where means the concatenation of two strings Your task is to calculate the sum of costs of all subsequences of the string Since answer may be large calculate it modulo ,We cannot make a funny permutation only when because one of the neighboring elements of must be equal to Any permutation made in this way will not satisfy the conditions The permutation will have a fixed point The permutation will have a fixed point The permutation will not have a neighbor equal to for For the remaining values of make the following observations For the only funny permutation is When permutations of the form will always be funny because all elements will have a neighbor equal to or and the permutation will have no fixed points and for will always be true ,0
88,Let s call two numbers if their binary representations contain the same number of digits equal to For example and are similar binary representations are and and are similar binary representations are and and are not similar binary representations are and and are similar binary representations are and You are given an array of integers You may choose a non negative integer and then get another array of integers where denotes bitwise XOR Is it possible to obtain an array where all numbers are similar to each other ,It s quite easy to see that ab x bmod a bmod b x bmod a bmod b What does it mean The property given in the statement holds for x if and only if it holds for x bmod ab It allows us to answer each testcase in O ab q as follows for each number from 0 to ab 1 we may check the given property before processing the queries and build an array of prefix sums on it to efficiently count the number of integers satisfying the property from the segment 0 y where y ab Then each query l r can be divided into two prefix queries 0 l 1 and 0 r To answer a prefix query 0 p in O 1 we can calculate the number of full segments of length ab inside this prefix that is lfloor frac p ab rfloor and the length of the last segment of numbers that don t belong into a full segment that is p bmod ab To handle full segments we multiply the number of integers satisfying the property on one segment by the number of such segments and to handle the last part of segment we use prefix sums ,0
89,Dmitry has segments of different colors on the coordinate axis Each segment is characterized by three integers and where and are are the coordinates of the ends of the th segment and is its color Dmitry likes to find the minimum distances between segments However he considers pairs of segments of the same color uninteresting Therefore he wants to know for each segment the distance from this segment to the nearest colored segment The distance between two segments is the minimum of the distances between a point of the first segment and a point of the second segment In particular if the segments intersect then the distance between them is equal to For example Dmitry has segments The first segment intersects with the second and these are segments of different colors so the answers for them are equal to For the rd segment the nearest segment of a different color is the nd segment the distance to which is equal to For the th segment the nearest segment of a different color is the th segment the distance to which is equal to The th segment lies inside the nd segment and these are segments of different colors so the answers for them are equal to ,Let s go through the segments times in non decreasing coordinates of the left end and then in non increasing coordinates of the right end To walk a second time just multiply the coordinates of the left and right borders by and then swap them and walk from left to right Going through the segments in non decreasing coordinates of the left end you need to find for each segment a segment that starts not to the right of the current one and ends as far to the right as possible If the coordinate of its right end is not less than the coordinate of the left end of the current segment then it intersects with it otherwise the distance between them is equal to the distance between the coordinate of the left end of the current segment and the maximum coordinate of the right end of the segment starting to the left of ours Note that it is enough for us to store no more than segments for each color we will store the maximum right coordinate of the segment of this color which has already been considered If we store the colors with the largest right coordinates then one of them is definitely not equal to the current one When considering a segment we add it to the list and if the size of the list becomes then we leave of optimal elements ,1
90,Ivan wants to write a letter to his friend The letter is a string consisting of lowercase Latin letters Unfortunately when Ivan started writing the letter he realised that it is very long and writing the whole letter may take extremely long time So he wants to write the of string instead of the string itself The of string is a sequence of strings where is the decimal representation of number without any leading zeroes and is some string consisting of lowercase Latin letters If Ivan writes string exactly times then string exactly times and so on the result will be string The length of a is Among all Ivan wants to choose a version such that its length is minimum possible Help Ivan to determine minimum possible length ,Let be the answer for the prefix of consisting of first characters How can we update from Suppose that we try to represent the substring from index to index indexed by writing it as some other string times Then this string has to be the smallest period of the substring and where is the length of the smallest period The smallest period of some string can be calculated as follows compute prefix function for and if is divisible by is the last value of prefix function then the length of the smallest period is if not then the length of the smallest period is This allows us to write a solution with complexity To improve it to we can use the fact that when we compute prefix function for some string we compute it for every prefix of this string So to obtain all values of we need in our solution we only need to compute prefix functions for every suffix of ,1
91,You have a large electronic screen which can display up to decimal digits The digits are displayed in the same way as on different electronic alarm clocks each place for a digit consists of segments which can be turned on and off to compose different digits The following picture describes how you can display all decimal digits As you can see different digits may require different number of segments to be turned on For example if you want to display you have to turn on segments of the screen and if you want to display all segments of some place to display a digit should be turned on You want to display a really large integer on the screen Unfortunately the screen is bugged no more than segments can be turned on simultaneously So now you wonder what is the greatest integer that can be displayed by turning on no more than segments Your program should be able to process different test cases ,First of all we don t need to use any digits other than and If we use any other digit it consists of or more segments so it can be replaced by two s and the number will become greater For the same reason we don t need to use more than one if we have two we can replace them with three s Obviously it is always optimal to place before So our number is either a sequence of s or a and a sequence of s We should use only if is odd because if is even it will decrease the number of digits in the result ,1
92,You are given a string consisting of lowercase Latin characters In an operation you can take a character and replace occurrences of this character with or replace occurrences of this character with Is it possible to perform some number of moves so that the resulting string is an alternating binary string For example consider the string You can perform the following moves Replace with Now the string is Replace with Now the string is Replace with Now the string is This is an alternating binary string An is a string of s and s such that no two adjacent bits are equal For example are alternating binary strings but are not ,Let s solve a harder problem given a string and a binary string can we make into using the find and replace operations We can simply iterate through each character of and see the bit it has turned to in that is for each Keep track of each change and see if there is some letter that needs to be turned into both and If there is some letter it is impossible since each operation requires changing all occurrences of a letter into the same bit Otherwise it is possible and we can directly change each letter into the bit it needs to be See the implementation for a better understanding Now for this problem since there are only two alternating binary strings of length and we can simply check both Actually we only have to check one do you see why The time complexity is ,1
93,You are given an array consisting of integers and additionally an integer You have to choose some sequence of indices in such a way that the value of is maximized Chosen sequence can be empty Print the maximum possible value of ,We can notice that the answer is the number of zeros between the leftmost occurrence of and the rightmost occurrence of Why is it true Let s take the leftmost maximum by inclusion segment of and just shift it right We can see that using this algorithm we will do exactly described amount of moves and there is no way improve the answer ,0
94,Ayush is a cashier at the shopping center Recently his department has started a service which allows users to shop online The store contains items customers have already used the above service Each user paid for items Let denote the th item in the th person s order Due to the space limitations all the items are arranged in one single row When Ayush receives the th order he will find one by one all the items in the row Let denote the position of the item in the row at the moment of its collection Then Ayush takes time equal to for the th customer When Ayush accesses the th element he keeps a new stock in the front of the row and takes away the th element Thus the values are updating Your task is to calculate the total time it takes for Ayush to process all the orders You can assume that the market has endless stock ,Note that the speed of cooking 1 slice of pizza is the same for all sizes 1 slice of pizza for 2 5 minutes If n is odd then we will increase it by 1 since the pizza is cooked only with an even number of pieces Now the value of n is always even If n 6 then for such n the answer is equal to the answer for n 6 so we can say that n max n 6 While n ge 12 we can order a small pizza Eventually the value of n will be equal to 6 8 or 10 This means that for any n there will be a set of pizzas with exactly n slices Then the answer is n 2 5 in the solution it is better to use the formula n 2 5 ,0
95,You are given an array consisting of integers Your problem is to find such pair of indices that is minimum possible is the least common multiple of and minimum positive number such that both and are divisors of this number ,Let s calculate the answer as the sum of suitable numbers in range minus the sum of suitable numbers in range Now our problem is to calculate the sum of suitable numbers in range The main approach for problem is digit DP Let s calculate two dynamic programmings and means that now we are at the th digit of the number at the digit corresponding to where is the decimal length of a number is a binary mask describing digits we already use and equals if the current prefix of number we trying to obtain is the same as the prefix of number otherwise equals So what means It means the count of numbers in general not numbers but their prefixes in range of length without leading zeroes corresponding to this state So what the point of this DP Its point is helping us to calculate the main DP which means the sum of numbers in general not numbers but their prefixes in range of length without leading zeroes corresponding to this state How do we calculate the answer Firstly let be the length of Let be the function calculating the sum of numbers from to containing at most different digits How to calculate it Let be the sum of numbers from to containing at most different digits and having length exactly Then seems to be pretty easy for each length from to add to the answer And the last step is to add to the answer How to calculate dynamic programmings Initially all states are zeroes excluding which is Firstly let s calculate After calculating it we can calculate in almost the same way Let s iterate over all possible lengths and over all possible masks Let the current state is Then let s iterate over next digit we will place in this number and place it If then otherwise The transition is pretty easy There is the bitwise operation For transitions are almost the same expect the restrictions on digit we place and the state we update If we now at the position with mask and then the current digit of is Then let s iterate over next digit if otherwise The transition is also easy After calculating the previous DP we can calculate All the process is the same as in the previous dynamic programming expect the value we will add in transitions In the previous DP this value was equal in the current DP this value equals to Don t forget to calculate it modulo So after calculating all the values of DPs what is the answer for It is for all masks with at most bits I m pretty sure that there is another way to avoid leading zeroes in calculating these DPs but this one is very straight forward and simple ,0
96,A tree is an undirected connected graph without cycles You are given a tree of vertices Find the number of ways to choose exactly vertices in this tree i e a element subset of vertices so that all pairwise distances between the selected vertices are equal in other words there exists an integer such that for all are in selected vertices where is the distance from to Since the answer may be very large you need to output it modulo ,If any set of two vertices may be taken so the answer is modulo Suppose Consider three vertices such that If this equality is true there s a vertex that belongs to all three paths otherwise either one of the vertices belongs to the path between two others or there is more than one simple path i e path having distinct edges between any of the vertices so the graph isn t a tree Hence the following equalities are true Then hence Suppose Let s select vertices that is a correct desired set of four vertices for the triple of paths let s select a common vertex and for the triple Because is the same vertex as The same procedure we can do for all other pairs of triples of vertices The situation will not be another if we add a new vertex in the set if the set will still meet the problem s conditions So if a vertex exists such that all vertices of the set are equidistant from it Note that for each set only one such exists Let s iterate over all vertices taking them as and hang the tree by The set of vertices equidistant from meets the problem s condition if and only if the vertices of the set are placed in different subtrees of vertices adjacent to in other words the paths from them to must intersect only in Let s calculate the number of desired sets for a given and a layer of equidistant vertices Let be the number of vertices adjacent to and it s the number of subtrees too Let s create an array indexed of size so that the th element will contain the number of the vertices of the layer in the th subtree For the layer of vertices adjacent to this array will be filled with For the other layers we can update the array as follows let s mark and vertices adjacent to as used then for every vertex of the current layer let s decrease by if is the index of the subtree of the vertex then let s increase by the number of the vertices adjacent to the current one but not used Then let s mark the vertices as used After the iteration the array will correspond to the new layer Using the array let s calculate the number of the desired sets of vertices using the concept of dynamic programming Let s create an array indexed of size will contain a number of found sets of vertices if only subtrees have been considered Let s fill the array with except Let s start a loop with parameter from to and the internal one with parameter from to In every step we can either take a vertex from th subtree or take nothing If we take a vertex from the subtree it s possible only if then we have ways to select vertices considering subtrees so that the last vertex belongs to the th subtree This value we must add to that must contain all ways to select vertices from subtrees If we ignore the subtree the number of ways to select vertices from subtrees ignoring the th subtree is It must be added to the number of ways to select vertices from subtrees The answer for the current and the current layer of equidistant vertices is The answer for the whole tree is the sum of the answers for all and for all layers of equidistant vertices Remember that all arithmetical operations must be done modulo The number of possible central vertices is For every central vertex and every layer we perform two actions recalculate the array and calculate the number of the corresponding sets using the concept of dynamic programming The recalculation of works in it s just BFS starting from so for every central vertex it works in O n The dynamic programming for the current and the current layer works in for the current and all layers in The summary time corresponding to the current is The total algorithm work time is The sum of all is a total number of the adjacent vertices to all vertices it s just a double number of edges So the total work time is ,1
97,On the number line there are points th of which has integer coordinate and integer weight The coordinates of all points are different and the points are numbered from to A sequence of segments is called if for each pair the condition is satisfied In other words the second segment is strictly inside the first one the third segment is strictly inside the second one and so on For a given number find a system of nested segments such that both ends of each segment are one of given points the sum of the weights of the points used as ends of the segments is For example let The given points are marked in the picture their weights are marked in red their coordinates are marked in blue Make a system of three nested segments weight of the first segment weight of the second segment weight of the third segment sum of the weights of all the segments in the system ,It s worth knowing that ways like and have the same cost That is first you need to understand the letter on the first tile and the last one conditionally the letters and Then you just need to find all such tiles on which the letters are between the letters and inclusive We go through each letter from to and for each letter we visit every tile that has a given letter but we must not forget to start exactly at tile and end at tile ,0
98,An array is called if it contains element which is equal to the If the array is not ugly it is For example the array is ugly the element is equal to the array is ugly the element the second one is equal to the array is beautiful so there is no element which is equal to the sum of all elements before it You are given an array such that You have to the elements of in such a way that the resulting array is beautiful Note that you are not allowed to insert new elements or erase existing ones you can only change the order of elements of You are allowed to keep the array unchanged if it is beautiful ,Use greedy approach in this problem At first match such pairs that colors are exactly the same and they are specific not indefinite After it match each indefinite colored left boot if any with any specific colored right boot Possibly some indefinite colored left boots stay unmatched Similarly match each indefinite colored right boot if any with any specific colored left boot And finally match indefinite colored left and right boots if any ,0
99,Consider a tournament with participants The rating of the th participant is The tournament will be organized as follows First of all organizers will assign each participant an index from to All indices will be unique Let be the participant who gets the index Then games will be held In the first game participants and will play In the second game the winner of the first game will play against In the third game the winner of the second game will play against and so on in the last game the winner of the th game will play against Monocarp wants to predict the results of all games of course he will do the prediction only after the indices of the participants are assigned He knows for sure that when two participants with ratings and play and the participant with the higher rating wins But if any of the two participants may win Among all ways to assign the indices to participants calculate the number of ways to do this so that Monocarp can predict the results of games Since the answer can be large print it modulo ,There are lots of different approaches to this problem For example you could just iterate on the values of and from to and check if ,0
100,You are given an array of integers and another integer such that You have to perform operations with this array In one operation you have to choose two elements of the array let them be and they can be equal or different but remove them from the array and add to your where is the maximum integer not exceeding Initially your is After you perform exactly operations you add all the remaining elements of the array to the Calculate the minimum possible you can get ,Since all planks have length at least 1 so we can take any n 2 planks as steps So all we need is to maximize the length of base planks We can take the first and second maximum as base then the answer is minimum among second maximum 1 and n 2 ,0
101,Captain Bill the Hummingbird and his crew recieved an interesting challenge offer Some stranger gave them a map potion of teleportation and said that only this potion might help them to reach the treasure Bottle with potion has two values and written on it These values define four moves which can be performed using the potion Map shows that the position of Captain Bill the Hummingbird is and the position of the treasure is You task is to tell Captain Bill the Hummingbird whether he should accept this challenge or decline If it is possible for Captain to reach the treasure using the potion then output otherwise without quotes ,This problem can be reduced to one of well known flow problems Projects and Instruments In this problem we have a set of projects we can do each with its cost and a set of instruments each also having some cost Each project depends on some instruments and each instrument can be used any number of times We have to choose a subset of projects and a subset of instruments so that if a project is chosen all instruments that this project depends on are also chosen and we have to maximize the difference between the sum of costs of chosen projects and the sum of costs of chosen instruments The problem about projects and instruments can be solved with the following flow network for each project create a vertex and add a directed edge from the source to this vertex with capacity equal to the cost of this project for each instrument create a vertex and add a directed edge from this vertex to the sink with capacity equal to the cost of this instrument for each project create edges with infinite capacity from the vertex denoting this project to all vertices denoting the required instruments for this project Let s analyze an cut between the source and the sink in this vertex and construct some answer based on this cut as follows if a project vertex belongs to then we take this project if an instrument vertex belongs to then we take this instrument all other projects and instruments are discarded If an edge between some project and some instrument is cut then it means that the answer is incorrect we try to take a project requiring some instrument we don t take and the cut value is infinite Otherwise the value of the cut is equal to the total cost of taken instruments and discarded projects and we need to minimize it So the minimum cut in this network denotes the best answer Reducing the given problem to this problem is easy edges of the given graph are projects vertices of the given graph are instruments Regarding implementation any flow algorithm using capacity scaling should be sufficient It seems that Dinic also passes even though its complexity is ,0
102,Limak is a little polar bear He likes strings strings of length consisting of lowercase English letters only The distance between two letters is defined as the difference between their positions in the alphabet For example and Also the distance between two nice strings is defined as the sum of distances of corresponding letters For example and Limak gives you a nice string and an integer He challenges you to find any nice string that Find any satisfying the given conditions or print if it s impossible to do so As input output can reach huge size it is recommended to use fast input output methods for example prefer to use instead of in C prefer to use instead of in ,There is no solution if the given required distance is too big Let s think what is the maximum possible distance for the given string Or the more useful thing how to construct a string to maximize the distance We can treat each letter separately and replace it with the most distant letter For example we should replace c with z and we should replace y with a To be more precise for first 13 letters of the alphabet the most distant letter is z and for other letters it is a ,1
103,Mishka got a six faced dice It has integer numbers from to written on its faces all numbers on faces are different so this is an usual dice Mishka wants to get exactly points by rolling his dice The number of points is just a sum of numbers written at the topmost face of the dice for all the rolls Mishka makes Mishka doesn t really care about the number of rolls so he just wants to know number of rolls he can make to be able to get exactly points for them Your task is to print this number It is that at least one answer exists Mishka is also very curious about different number of points to score so you have to answer queries ,Note that it does not make sense to move several blocks first from the left tower to the right and then from the right to the left since this is similar to canceling the last actions Using the fact described above and small restrictions on the input data one of the possible solutions is the following choose which tower will be the one where we take blocks from try both options iterate over the number of operations and then check that both towers are beautiful after that number of operations There is a faster solution move all the blocks to the left tower and then check that there is no more than one pair of adjacent blocks of the same color If there are no such pairs then we can divide the tower into two in an arbitrary way and if there is exactly one pair then we need to make a cut exactly between two blocks of the same color Otherwise there will always be a pair of adjacent blocks of the same color in one of the towers ,0
104,You are given a string consisting of letters each letter is either or The letters in the string are numbered from to is a continuous substring of letters from index to of the string inclusive A string is called balanced if the number of letters in it is equal to the number of letters For example strings and are balanced and strings and are not Find any non empty balanced substring of string Print its and If there is no such substring then print ,Any non empty balanced string contains at least one letter and at least one letter That implies that there s an adjacent to a somewhere in that string Both strings and are balanced Thus any balanced string contains a balanced substring of length So the solution is to check all pairs of adjacent letters If there exists a pair of different ones print it Overall complexity per testcase ,1
105,You are given a string consisting of lowercase Latin letters Polycarp wants to remove exactly characters from the string Polycarp uses the following algorithm times if there is at least one letter remove the leftmost occurrence and stop the algorithm otherwise go to next item if there is at least one letter remove the leftmost occurrence and stop the algorithm otherwise go to next item remove the leftmost occurrence of the letter and stop the algorithm This algorithm removes a single letter from the string Polycarp performs this algorithm exactly times thus removing exactly characters Help Polycarp find the resulting string ,Firstly let s calculate for each from to two following values and means the maximum length of the increasing sequence starting in the position and means the maximum length of the increasing sequence ending in the position Initially all values are the element itself The array can be calculated in order from right to left with the following condition if then otherwise it still remain The same with the array but we have to calculate its values in order from left to right and if then otherwise it still remain Having these arrays we can calculate the answer The initial answer if we don t remove any element is the maximum value of the array And if we remove the th element where then we can update the answer with the value if Time complexity ,0
106,There is a bag containing colored balls There are different colors of balls numbered from to There are balls of color in the bag The total amount of balls in the bag is odd e g is odd In one move you can choose two balls and take them out of the bag At some point all the remaining balls in the bag will have the same color That s when you can t make moves anymore Find any possible color of the remaining balls ,Let us simulate the process We store a set consisting of letters that Polycarp memorizes on one day Gradually dial the set If the size of exceeds we add to the day counter and clear ,0
107,You are standing at the point on a coordinate line Your goal is to reach the point In one minute you can move by or by to the left or to the right i e if your current coordinate is it can become or Note that the new coordinate can become negative Your task is to find the number of minutes required to get from the point to the point You have to answer independent test cases ,Even though is up to straightforward solution will work You iterate for from to in the outer loop from to in the inner loop and check each time When edges are found you break from both loops Here is why this work fast enough The total number of pairs with is where is Euler s totient function We also want to substract a single pair And this sum grows so fast that after about iteratons will be greater than for any The only thing left is to check that is big enough to build a connected graph and small enough to fit all possible edges for given the formula above Overall complexity ,0
108,There are astronauts working on some space station An astronaut with the number has An evil humanoid has made his way to this space station of this humanoid is equal to Also the humanoid took with him serums and serum In one second a humanoid can do any of three actions to absorb an astronaut with to use serum if there is still one left to use serum if there is still one left When an astronaut with is absorbed this astronaut disappears and of the humanoid increases by that is an integer part of For example if a humanoid absorbs an astronaut with its increases by and if a humanoid absorbs an astronaut with its increases by After using the serum this serum disappears and the of the humanoid doubles so it increases by times After using the serum this serum disappears and the of the humanoid triples so it increases by times The humanoid is wondering what the maximum number of astronauts he will be able to absorb if he acts optimally ,Let s make two obvious remarks If we can absorb two astronauts with then we can always first absorb an astronaut with and then an astronaut with If we can absorb some astronaut it is effective for us to do it right now Let s sort the astronauts in increasing order Now let s lock the sequence of serums we use There are only three of them serum can be the first second or third Let s absorb the astronauts in increasing order of their and if we can t then use the next serum in a locked sequence or stop This solution works for ,1
109,On the number line there are points th of which has integer coordinate and integer weight The coordinates of all points are different and the points are numbered from to A sequence of segments is called if for each pair the condition is satisfied In other words the second segment is strictly inside the first one the third segment is strictly inside the second one and so on For a given number find a system of nested segments such that both ends of each segment are one of given points the sum of the weights of the points used as ends of the segments is For example let The given points are marked in the picture their weights are marked in red their coordinates are marked in blue Make a system of three nested segments weight of the first segment weight of the second segment weight of the third segment sum of the weights of all the segments in the system ,We create a structure that stores for each point its coordinate weight and index in the input data Sort the array by increasing weight The sum of weights of the first points will be minimal so we use them to construct a system of nested segments We save the weights of the first points in the variable and remove the remaining points from the array Now sort the points in ascending order of coordinates and form a system of nested segments such that the endpoints of th segment are and for Thus the endpoints of the first segment are and the endpoints of the th segment are and For each test case we first output then pairs of numbers the indices under which the endpoints of the current segment were written in the input data ,1
110,There are two towers consisting of blocks of two colors red and blue Both towers are represented by strings of characters and or denoting the order of blocks in them where corresponds to a blue block and corresponds to a red block You can perform the following operation any number of times choose a tower with and move its block to the of the other tower The pair of towers is if no pair of touching blocks has the same color i e no red block stands on top of another red block and no blue block stands on top of another blue block You have to check if it is possible to perform any number of operations possibly zero to make the pair of towers beautiful ,Let s discuss two approaches to this problem Firstly let s think that we choose not four destination points but four lines on which sides of the square lie It s two vertical lines with coordinates and and two horizontal lines and of course is to note that either both and coincide with some s and coincide with one of or both and coincide with some s and coincide with one Since we know the side of the square from or and one point It s easy to construct other points of the square and find the minimum total distance by iterating all permutations This approach needs around operations and work around one second if written accurately is more clever and faster Let s assign a role for each point which vertex of the final square this will be left bottom left top right bottom or right top There will be such assignments For simplicity let s say that the left bottom vertex is left top is right bottom is and right top is If we rewrite our total distance formulas we can note that instead of summing the distance between points we can sum the distance from lines to the points which should lie on it In other words we can calculate the answer as Let s look at the left side If then the total distance is always and has it s optimal segment of values Analogically also has it s optimal segment of values Since we can choose as any value in its segment and as any value in its segment then the possible distance the side of the square also forms a segment of possible values let s name it as and can be calculated with pretty easy formula On the other hand we can do the same with horizontal sides and compute the segment of optimal side length in the same manner Now if and intersects then we can choose such side length that lies in both and and optimal for both vertical sides and horizontal sides Otherwise without loss of generality and if we choose we need to pay extra fee since we out of it means that the chosen is greater than optimal so we need to choose for example outside And we need to pay for each step outside of this segment In other words the answer for a fixed permutation is ,0
111,The girl named Masha was walking in the forest and found a complete binary tree of height and a permutation of length A complete binary tree of height is a rooted tree such that every vertex except the leaves has exactly two sons and the length of the path from the root to any of the leaves is The picture below shows the complete binary tree for A permutation is an array consisting of different integers from to For example is a permutation but is not occurs twice and is also not a permutation but there is in the array Let s enumerate leaves of this tree from left to right The leaf with the number contains the value For example if the tree will look like this Masha considers a tree if the values in its leaves are ordered from left to right in increasing order In one operation Masha can choose any non leaf vertex of the tree and swap its left and right sons along with their subtrees For example if Masha applies this operation to the root of the tree discussed above it will take the following form Help Masha understand if she can make a tree in a certain number of operations If she can then output the minimum number of operations to make the tree ,Let s make two obvious remarks If we can absorb two astronauts with then we can always first absorb an astronaut with and then an astronaut with If we can absorb some astronaut it is effective for us to do it right now Let s sort the astronauts in increasing order Now let s lock the sequence of serums we use There are only three of them serum can be the first second or third Let s absorb the astronauts in increasing order of their and if we can t then use the next serum in a locked sequence or stop This solution works for ,0
112,You are given an array of positive integers Determine if by rearranging the elements you can make the array strictly increasing In other words determine if it is possible to rearrange the elements such that holds ,The answer can be calculated by easy formula where is divided by rounded down and is modulo ,0
113,There is a game called Unique Bid Auction You can read more about it here https en wikipedia org wiki Unique bid auction though you don t have to do it to solve this problem Let s simplify this game a bit Formally there are participants the th participant chose the number The winner of the game is such a participant that the number he chose is i e nobody else chose this number except him and is i e among all unique values of the minimum one is the winning one Your task is to find the of the participant who won the game or if there is no winner Indexing is based i e the participants are numbered from to You have to answer independent test cases ,Let s iterate over the number that we want to multiply by How can we check that we can multiply the current number so that an AP is formed Note that those numbers that we do not touch should form an AP themselves For instance let at the current operation we want somehow multiply the number Then and Note that Thus we know what is Also we know that Let s check if is divisible by If yes then we have found the answer if not then move on to the next number We do the same for and Be careful with non positive numbers integer divisions and other edge cases ,0
114,You are given a permutation consisting of numbers a permutation is an array in which each element from to occurs exactly once You can perform the following operation choose some subarray contiguous subsegment of and rearrange the elements in it in any way you want But this operation cannot be applied to the whole array For example if and we want to apply the operation to the subarray the subarray containing all elements from the nd to the th then after the operation the array can become or for example Your task is to calculate the minimum number of operations described above to sort the permutation in ascending order ,Firstly let s generate first primes It can be done in almost naively just check all elements in range It also can be done with Eratosthenes sieve in or We also can calculate for each number in this range the maximum its divisor non equal to it if this number is not a prime And in other case we can calculate the index of this prime Using all this information we can restore the array Let s maintain a multiset a set in which multiple copies of the same element are allowed of all elements in While it is not empty let s take the maximum element from this set If it is prime we can check it using the information calculated earlier then it is some Let s find the index of this prime using calculated information remove this element and push in and continue Otherwise this element is not a prime and then it is some Let s remove it and its maximum divisor non equal to it from the multiset push in and continue ,0
115,You are given an array with integers and queries Each query is described by two integers Let s define the function The function is defined for only For each query print the maximal value of the function over all ,We gave bad constraints to this problem so some participants solved it in time Note that The values can be simply precomputed Also you can notice that the value is equal to depending on the value modulo Let s use Mo s algorithm we should group all the queries to blocks by the left end and sort all the queries in each block by the right end Let be the maximal left end inside the current group then all left ends will be in distance not greater than from and right ends will be in nondecreasing order so we can move the right end by one total we will made no more than movements in each block During moving of the right end inside some group from the value to the value of the current right end we will maintain two tries the first for the values and the second for the values in the first we will maintain the minimal value of in the second the maximal After adding some values to the trie we should find the maximal value that can be formed by the current value To do that we should go down in the first trie maintaining the invariant that in the current subtree the minimal value is not greater than Each time we should go by the bit that is not equal to the corresponding bit in if we can do that otherwise we should go by the other bit In the second trie we should do the same thing with the difference that we should maintain the invariant that the maximal value in the current subtree is not less than the value After moving the right end we should iterate from the left end of the query to and update the answer without adding the current value to the tries Also after that all we should iterate over all the queries and with new empty tries iterate from the left end to add the current values to the tries and update the answer ,1
116,Mishka got a six faced dice It has integer numbers from to written on its faces all numbers on faces are different so this is an usual dice Mishka wants to get exactly points by rolling his dice The number of points is just a sum of numbers written at the topmost face of the dice for all the rolls Mishka makes Mishka doesn t really care about the number of rolls so he just wants to know number of rolls he can make to be able to get exactly points for them Your task is to print this number It is that at least one answer exists Mishka is also very curious about different number of points to score so you have to answer queries ,It is enough to print for each query where is divided by rounded down ,1
117,You are given a tree consisting of vertices and triples where and are integers from to and is a string You want to write a lowercase Latin letter on each vertex in such a way that for each of given triples at least one of the following conditions holds if you write out the letters on the vertices on the simple path from to in the order they appear on this path you get the string if you write out the letters on the vertices on the simple path from to in the order they appear on this path you get the string Find any possible way to write a letter on each vertex to meet these constraints or report that it is impossible ,Minimal product is obtained by multiplying three smallest elements of the array Let s iterate over the middle element of these three and calc sum of all options Firstly let s precalc two arrays of pairs and is minimum and number of its occurrences on the prefix of array up to index inclusive is minimum and number of its occurrences on the suffix of array up to index inclusive It can be done with two traversals over the array Let s also store set of three elements which give minimal product of the array Consider every index from to inclusive 0 indexed If set is equal to the stored set of three minimums then add to the answer number of ways to choose pair that is Overall complexity ,0
118,Alice and Bob play a game They have a binary string a string such that each character in it is either or Alice moves first then Bob then Alice again and so on During their move the player can choose any number not less than one of in and delete them For example if the string is there are possible moves deleted characters are bold After the characters are removed the characters to the left and to the right of the removed block become adjacent I e the following sequence of moves is valid The game ends when the string becomes empty and the score of each player is Each player wants to maximize their score Calculate the resulting score of Alice ,The following greedy strategy works during each turn delete the largest possible substring consisting of characters So we have to find all blocks of characters sort them according to their length and model which blocks are taken by Alice and which by Bob Why does the greedy strategy work It s never optimal to delete some part of the block of ones because we either have to spend an additional turn to delete the remaining part or allow our opponent to take it which is never good Why don t we need to delete zeroes If we delete a whole block of zeroes our opponent can take the newly formed block of s during their turn and it is obviously worse than taking a part of that block And deleting some part of a block of zeroes doesn t do anything our opponent will never delete the remaining part because it s suboptimal ,1
119,You are given a graph with vertices each pair of vertices in have both directed edges and there are no self loops You should find such a cycle in that visits every directed edge exactly once allowing for revisiting vertices We can write such cycle as a list of vertices a visiting order where each occurs exactly once Find the such cycle It s not hard to prove that the cycle always exists Since the answer can be too large print its segment in other words ,As we can see last digits of the resulting number will be zeros except the th So we need to change all ones to zeros if needed among last digits if the position of the digit is not and change zero to one if needed otherwise It can be done with simple cycle ,0
120,Vasya has a multiset consisting of integer numbers Vasya calls some number nice if it appears in the multiset exactly once For example multiset contains nice numbers and Vasya wants to split multiset into two multisets and in such a way that the quantity of nice numbers in multiset would be the same as the quantity of nice numbers in multiset the quantity of numbers to appear exactly once in multiset and the quantity of numbers to appear exactly once in multiset ,Write down all the numbers which appear exactly once let there be of them If is even put the first of them into the first multiset and put the other into the second multiset All the other numbers which appear more than once also go into the first multiset The only nice numbers will be the initial thus the answer is valid If is odd and there is no number to appear more than twice then the answer is as all the numbers to appear exactly twice don t change the difference of the amounts of the nice numbers at all If there is a number to appear more than twice let it be then let s firstly add of the numbers to appear exactly once to the first multiset add others of them to the second multiset Then the first occurrence of goes to the second multiset and all the other numbers go to the first multiset It s easy to notice that multisets will contain equal number of the nice numbers after all the partitioning ,1
121,After returning from the army Makes received a gift an array consisting of positive integer numbers He hadn t been solving problems for a long time so he became interested to answer a particular question how many triples of indices such that is minimum possible are there in the array Help him with it ,As we can see last digits of the resulting number will be zeros except the th So we need to change all ones to zeros if needed among last digits if the position of the digit is not and change zero to one if needed otherwise It can be done with simple cycle ,0
122,You are given a rooted tree of vertices Every vertex of this tree has either children or children All leaves of this tree have the same distance from the root and for every non leaf vertex one of its children is the left one and the other child is the right one Formally you are given a The vertices of the tree are numbered in the following order the root has index if a vertex has index then its left child has index and its right child has index Every vertex of the tree has a letter written on it either or Let s define the character on the vertex as Let the of some vertex be defined in the following way if the vertex is a leaf then the of be consisting of only one character otherwise the of is where operator defines concatenation of strings is the of the left child of and is the of the right child of The of the tree is the of its root You have to calculate the number of different strings that can be obtained as the of the given tree if you are allowed to perform the following operation any number of times before constructing the of the tree choose any non leaf vertex and swap its children so the left child becomes the right one and vice versa ,In terms of preorder strings the operation swap two children of some vertex means swap two substrings of equal length in some specific location This operation can be inverted by applying it an additional time so for every positive integer all of the strings of length are split into equivalence classes in such a way that two strings from the same class can be transformed into each other and two strings from different classes cannot For each vertex the set of its possible preorder strings is one of these classes Let s calculate the answer for the problem recursively let be the number of preorder strings for the vertex For a leaf the number of its preorder strings is For a vertex with children and one of the two holds if the equivalence class for vertex is different from the equivalence class for vertex then we have to pick a string from the class of vertex pick a string from the class of vertex and choose the order in which we take them So if the equivalence class for is the same as the equivalence class for then swapping and doesn t do anything so we pick a string from the equivalence class of and then a string from the equivalence class of So The only thing we don t know is how to determine if two vertices represent the same equivalence class The model solution uses hashing for this but there s a much simpler method for each vertex let be the lexicographically smallest string that can be a preorder string of If a vertex has children and then and we can calculate these strings recursively since the total length is each of characters will be present in strings ,1
123,Lena is a programmer She got a task to solve at work There is an empty set of pairs of integers and queries to process Each query is one of three types Add a pair to the set Remove a pair added in the query number All queries are numbered with integers from to For a given integer find the maximal value over all pairs from the set Help Lena to process the queries ,First of all we will calculate the sum of maximum and minimum values on all segments separatedly Then the answer is the difference between the sum of maximum values and minimum values How can we calculate the sum of minimum values for example For each element we will try to find the number of segments where it is the So we will calculate two arrays means that is the maximum index such that and and means that is the minimum index such that and So actually and represent the borders of the largest segment where is the and we need to exclude those borders While knowing these values we can calculate the number of subsegments where is the How can we calculate for example the array We will use a stack where we will store some indices in the array in such a way that if we change all indices to the values in the array they will be in sorted order the maximum element will be at the top of the stack and the minimum at the bottom Let s calculate from the minimum index to the maximum When we calculate we remove all elements such that from the stack since the stack is sorted all these elements will be at the top of the stack and when we encounter the first element such that it is guaranteed that all elements below it don t need to be deleted Then if there s any element on top of the stack it becomes the value of then we push into the stack Since every element will be added and deleted not more than one time the complexity of this algorithm is linear We can apply the same technique to calculate the values of and the sum of maximums ,0
124,You are given four different integer points and on grid In one step you can choose one of the points and move it in one of four directions by one In other words if you have chosen point you can move it to or Your goal to move points in such a way that they will form a square with sides parallel to and axes a square with side is allowed What is the minimum number of steps you need to make such a square ,Let s discuss two approaches to this problem Firstly let s think that we choose not four destination points but four lines on which sides of the square lie It s two vertical lines with coordinates and and two horizontal lines and of course is to note that either both and coincide with some s and coincide with one of or both and coincide with some s and coincide with one Since we know the side of the square from or and one point It s easy to construct other points of the square and find the minimum total distance by iterating all permutations This approach needs around operations and work around one second if written accurately is more clever and faster Let s assign a role for each point which vertex of the final square this will be left bottom left top right bottom or right top There will be such assignments For simplicity let s say that the left bottom vertex is left top is right bottom is and right top is If we rewrite our total distance formulas we can note that instead of summing the distance between points we can sum the distance from lines to the points which should lie on it In other words we can calculate the answer as Let s look at the left side If then the total distance is always and has it s optimal segment of values Analogically also has it s optimal segment of values Since we can choose as any value in its segment and as any value in its segment then the possible distance the side of the square also forms a segment of possible values let s name it as and can be calculated with pretty easy formula On the other hand we can do the same with horizontal sides and compute the segment of optimal side length in the same manner Now if and intersects then we can choose such side length that lies in both and and optimal for both vertical sides and horizontal sides Otherwise without loss of generality and if we choose we need to pay extra fee since we out of it means that the chosen is greater than optimal so we need to choose for example outside And we need to pay for each step outside of this segment In other words the answer for a fixed permutation is ,1
125,You are given two permutations and both consisting of elements Permutation of elements is such a integer sequence that each value from to appears exactly once in it You are asked to perform two types of queries with them calculate the number of values which appear in both segment of positions in permutation and segment of positions in permutation swap values on positions and in permutation Print the answer for each query of the first type It is guaranteed that there will be at least one query of the first type in the input ,Let s intruduce the following dynamic programming approach is the smallest number of elements of type page can end with If we learn to recalculate it the answer will be if or I will try to prove it on the fly Let s look into the constructing of each page from the following perspective I ll consider the cases when the current page ends with tables and the previous page ends with either tables or formulas Let s write down all the tables and then put formulas as separators to them I will call number of tables on the end of the previous page the number of formulas on the end of the previous page the number on tables on the current page and the number of formulas on the current page In the case with tables on the end of the previous page the smallest number of separators you can have is Moreover if you have you can put one of the formulas right before the end of the page ending it with table The only case is when there are too many separators should be less or equal to you can put up to separators before each table The case with formulas on the end of the previous page isn t that different The smallest number of separators is and the limit to the number of separators is you can t put separators before the first table as in the first case the maximum number to that position is determined by the previous page Now let s take a look at resulting expressions You can notice that lowering can only decrease the lower bound on the number of separators and lowering can only increase the upper bound on the number of separators That shows that minimizing the values in is always profitable Overall complexity ,0
126,A string of length is called if it can be obtained using the following algorithm first write an empty string to i e perform the assignment then perform the next step times at the th step take th lowercase letter of the Latin alphabet and write it either to the left of the string or to the right of the string i e perform the assignment or where is the th letter of the Latin alphabet In other words iterate over the first letters of the Latin alphabet starting from and etc Each time we prepend a letter to the left of the string or append a letter to the right of the string Strings that can be obtained in that way are alphabetical For example the following strings are alphabetical and The following strings alphabetical and From the given string determine if it is alphabetical ,The first solution is some kind of a straight forward understanding the problem Let s do binary search on the answer So our problem is to find the smallest such that the suffix of the array starting from the position can be packed in boxes It is easy to see that if we can do it for some then we always can do it for And to find the answer for the fixed we have to simulate the process described in the problem statement starting from the position Okay this is solution The second solution is more interesting than the first one The approach is to reverse the initial array simulate the process from the first position of reversed array and then all the objects we can pack are in the best answer and there is no better answer at all Why it works Let s take a look on the last box in the best answer if we will go from left to right in the initial array Let objects in this box be What do we see So all these objects are fit in the last box obviously Now if we will iterate over objects from right to left these objects will fit also It means that we cannot do worse by such a transform reversing at least for the last box But what will happen if we can put some of the previous objects in this box Well it will not make worse for this box but what about next boxes previous boxes in straight notation Let objects in the penultimate box be What do we see These objects are fit in this box obviously again What will happen if we will put in the last box one or more objects of this box Then the border of objects which we will put in it will not increase because we the number of object in this box So we can see that for previous boxes this condition is also satisfied So we can solve the problem with this approach Time complexity of this solution is ,0
127,Let be an array of integers Let s define as a minimal size of a partition of into subsegments such that all elements in each subsegment are equal For example using next partition Now you don t have any exact values of but you know that can be any integer value from uniformly at random All are independent Calculate expected value of or It s guaranteed that the expected value can be represented as rational fraction where so print the value ,It is obvious that if there is a pair of points and such that and then the answer is It means that if the answer is then there is some ordering of points such that and because we can only move right or up But what is this ordering it is just sorted order of points firstly by then by So we can sort all points check if this ordering is valid and traverse among all these points For each from to firstly do moves to the right then do moves to the up because this order minimizing the answer lexicographically Time complexity or ,0
128,You are given strings Each string consists of lowercase English letters Rearrange reorder the given strings in such a way that for every string all strings that are placed before it are its String is a of string if it is possible to choose several letters in in such a way that they form For example string is contained as a in strings and but is not contained as a in strings and ,Firstly sort all the strings by their lengths if there are several strings of the same length their order does not matter because if the answer is then all the strings of the same length should be equal Then for each check that is a substring of If it doesn t hold for some then the answer is Otherwise the answer is and the sorted array is the correct order of strings ,1
129,Ivan wants to write a letter to his friend The letter is a string consisting of lowercase Latin letters Unfortunately when Ivan started writing the letter he realised that it is very long and writing the whole letter may take extremely long time So he wants to write the of string instead of the string itself The of string is a sequence of strings where is the decimal representation of number without any leading zeroes and is some string consisting of lowercase Latin letters If Ivan writes string exactly times then string exactly times and so on the result will be string The length of a is Among all Ivan wants to choose a version such that its length is minimum possible Help Ivan to determine minimum possible length ,Let s solve this problem with dynamic programming Let be the maximum answer if one melody finishes in note number and another melody in note number and are indexed if one of them is then the melody is empty How shall we update First of all we will update from previous values only if If then obviously answer is and if then we take the answer for Secondly to avoid intersections we will update only using values of where and Why Because if we update from some and then it can lead to some intersection we can t guarantee we didn t use in the first melody How can we make fast updates We will count from to Then while counting for some specific we will maintain two arrays the maximum value of encountered so far where the maximum value of encountered so far where So when we need to count it will be the maximum of four values if we add a note which is congruent modulo with the last one if we add a note which is less by than the last note if we add a note which is greater by than the last note if we just start a melody These values can be calculated in ,0
130,Santa Claus has received letters from different kids throughout this year Of course each kid wants to get some presents from Santa in particular the th kid asked Santa to give them one of different items as a present Some items could have been asked by multiple kids Santa is really busy so he wants the New Year Bot to choose the presents for all children Unfortunately the Bot s algorithm of choosing presents is bugged To choose a present for some kid the Bot does the following choose one kid equiprobably among all kids choose some item equiprobably among all items kid wants choose a kid who will receive the present equipropably among all kids this choice is independent of choosing and the resulting triple is called of the Bot If kid listed item as an item they want to receive then the decision Otherwise the Bot s choice is Santa is aware of the bug but he can t estimate if this bug is really severe To do so he wants to know the probability that one decision generated according to the aforementioned algorithm is Can you help him ,Firstly let s learn how to split persons in pairs as if there are no single kayaks Let there be people with weights and Obviously the lowest instability you can achieve is Swapping any two elements will only make the result greater This greedy strategy can be used to distribute all the seats Now you need to check every pair of persons to seat in single kayaks and calculate total instability for the rest The answer will be the minimun instabily over all pairs Overall complexity ,0
131,Timur initially had a binary string possibly of length He performed the following operation several possibly zero times Add to one end of the string and to the other end of the string For example starting from the string you can obtain either or You are given Timur s final string What is the length of the possible string he could have started with A binary string is a string possibly the empty string whose characters are either or ,Let s perform the process in reverse we will remove the first and last character of the string if these two characters are different We should do this as long as possible since we need to find the shortest initial string So the algorithm is straightfoward keep track of the left and right characters and if they are different remove both Otherwise output the length of the current string or output if the string became empty There are a few ways to implement this For example you can keep two pointers one at the beginning of the string and one at the end say and and check if If it s true then we increment and decrement Otherwise we output We stop when Alternatively you can use deque to simulate the operations directly The time complexity is ,1
132,You are given a set of strings Each string consists of lowercase Latin letters For each string in this set you want to calculate the minimum number of seconds required to type this string To type a string you have to start with an empty string and transform it into the string you want to type using the following actions if the current string is choose some lowercase Latin letter and append it to the back of so the current string becomes This action takes second use autocompletion When you try to autocomplete the current string a list of all strings such that is a prefix of is shown to you and the strings are ordered lexicographically You can transform into the th string from this list in seconds Note that you may choose any string from this list you want it is not necessarily the string you are trying to type What is the minimum number of seconds that you have to spend to type each string from ,At first notice that if only programmers are taken then the same or even better answer can be achieved if strongest programmers are taken Now let s sort the programmers in a non increasing order and choose some assignment into the teams For each team only the rightmost taken programmer of that team matters the sorted sequence implies that the rightmost is the weakest Take a look at the team with the strongest weakest member If the number of programmers in it is less than the position of the weakest member then you can safely rearrange the programmers before him in such a way that none of parameters of later teams change and the weakest member in the first one only becomes stronger After that you can get rid of the first team as it takes exactly the prefix of all the programmers and proceed to fix the later teams Thus we can see that there is an optimal solution such that each team is a segment and all the teams together take some prefix of the programmers So we can finally run a greedy solution that takes programmers from left to right and increases the answer if the conditions for the latest team hold Overall complexity ,0
133,You are given sticks the length of the th stick is You have to create rectangles each rectangle will consist of exactly sticks from the given set The rectangle consists of four sides opposite sides should have equal length and all angles in it should be right Note that each stick can be used in only one rectangle Each stick should be used as a side you cannot break the stick or use it not to the full length You want to all rectangles to have equal area The area of the rectangle with sides and is Your task is to say if it is possible to create exactly rectangles of equal area or not You have to answer independent queries ,Let s divide the initial string into blocks of consecutive equal letters For example if we have the string then have blocks the first block is two letters the second one is three letters the third one is two letters and the last one is four letters Let s see at the current block let it has the length and consider two cases The first case is when this block has odd length Then it seems like So what is the minimum number of recolors we need to make this block correct It is Why can we always make this block correct for such number of recolors Because we can recolor all at even positions to any which differs from So our block will be look like The second case is when this block has even length Then it seems like where is the next block letter if the next block exists because the last block doesn t have the next one What is the minimum number of recolors in this case It is How can we recolor this block to make it correct Let s recolor all at even positions again to any which differs from and differs from So our block will be look like So all we have to do is to iterate over all blocks from left to right and apply the algorithm above to recolor them ,0
134,Vasya has got an array consisting of integers and two integers and in addition All numbers in the array are either between and inclusive or equal to The array is good if there is no segment of consecutive numbers Vasya will replace each with some number from to inclusive in such a way that the resulting array is good Tell him the number of ways to do this replacement Since the answer may be large print it modulo ,Let s try dynamic programming approach to this problem Let be the number of ways to replace all with numbers from to in such a way that array is good and the last number of that array is Let Then initially it s if equals to or However we could include incorrect states such that segment consist of the same value It happens when as we should have at least elements segment has all its elements either equal to or If both of these conditions hold then you should subtract all the bad states from The number of them is ,1
135, A subsequence is a string that can be derived from another string by deleting some or no symbols without changing the order of the remaining symbols Characters to be deleted are not required to go successively there can be any gaps between them For example for the string the following strings are subsequences and empty string But the following strings are not subsequences and You are given a string consisting of lowercase Latin letters In one move you can take subsequence of the given string and add it to the set The set can t contain duplicates This move costs where is the length of the added subsequence i e the price equals to the number of the deleted characters Your task is to find out the minimum possible total cost to obtain a set of size or report that it is impossible to do so ,The topic of this problem is BFS Let strings be the vertices of the graph and there is a directed edge from string to string if and only if we can obtain from by removing exactly one character In this interpretation we have to find first visited vertices if we start our BFS from the initial string And then the answer will be just minus the sum of length of visited strings The last thing to mention instead of standard queue of integers we need to maintain the queue of strings and instead of array of visited vertices we have to maintain the set of visited strings Don t forget to stop BFS when you obtain exactly strings If the number of distinct subsequences is less than then the answer is ,1
136,Ivan is playing a strange game He has a matrix with rows and columns Each element of the matrix is equal to either or Rows and columns are indexed Ivan can replace any number of ones in this matrix with zeroes After that his score in the game will be calculated as follows Initially Ivan s score is In each column Ivan will find the topmost that is if the current column is then he will find minimum such that If there are no s in the column this column is skipped Ivan will look at the next elements in this column starting from the element he found and count the number of s among these elements This number will be added to his score Of course Ivan wants to maximize his score in this strange game Also he doesn t want to change many elements so he will replace the minimum possible number of ones with zeroes Help him to determine the maximum possible score he can get and the minimum possible number of replacements required to achieve that score ,Let the lowercase Latin letters be indexed from to There are exists at least two different solutions If exit the program Otherwise count the number of occurrences of each letter from to Let it be Now find the alphabetically smallest letter that will be in the resulting string It can be done as follows iterate over all from to and if then subtract it from otherwise will be the smallest letter that will be in the resulting string But we possibly need to remove some number of its leftmost occurrences It is obvious that letters smaller than will not appear in the resulting string Also the leftmost occurrences of letter will be removed Now let s iterate over all letters in string from left to right and construct the resulting string If the current character of let it be is smaller than then do nothing If is greater than then add it to Otherwise If then decrease by one otherwise add to The time complexity is Another solution is the following Let s carry the vector of pairs where is the th character of and is its position If we sort this vector with the standard compare function it is easy to see that the first elements of this vector will be removed from the input string Then if we will sort the last elements of this vector by its positions in the input string in increasing order we will obtain the answer The time complexity is ,0
137,You are given a rectangular matrix of size consisting of integers from to In one move you can choose of the matrix and change its value to integer between and inclusive take and shift it one cell up cyclically see the example of such cyclic shift below A cyclic shift is an operation such that you choose some and set Example of cyclic shift of the first column You want to perform the minimum number of moves to make this matrix look like this In other words the goal is to obtain the matrix where i e with the performed ,At first let s decrease all elements by one and solve the problem in indexation The first observation is that we can solve the problem independently for each column Consider the column It consists of elements Now consider some element We don t need to replace it with some other number in only one case if we shift the column such that will coincide with the corresponding number of the required matrix Obviously there is only one cyclic shift of the column that can rid us of replacing So the idea is the following let s calculate for each cyclic shift the number of elements we don t need to replace if we use this cyclic shift Let for the th cyclic shift indexed it be Then the answer for this column can be taken as How to calculate for the element the corresponding cyclic shift Firstly if is modulo operation then there is no such cyclic shift Otherwise let If then there is such cyclic shift can be greater than or equal to because can be up to and the number of such cyclic shift is So let s increase and continue After considering all elements of this column take the answer by the formula above and go to the next column Time complexity ,1
138,There are programmers that you want to split into several non empty teams The skill of the th programmer is You want to assemble the maximum number of teams from them There is a restriction for each team the number of programmers in the team multiplied by the minimum skill among all programmers in the team must be at least Each programmer should belong to at most one team Some programmers may be left without a team Calculate the maximum number of teams that you can assemble ,At first notice that if only programmers are taken then the same or even better answer can be achieved if strongest programmers are taken Now let s sort the programmers in a non increasing order and choose some assignment into the teams For each team only the rightmost taken programmer of that team matters the sorted sequence implies that the rightmost is the weakest Take a look at the team with the strongest weakest member If the number of programmers in it is less than the position of the weakest member then you can safely rearrange the programmers before him in such a way that none of parameters of later teams change and the weakest member in the first one only becomes stronger After that you can get rid of the first team as it takes exactly the prefix of all the programmers and proceed to fix the later teams Thus we can see that there is an optimal solution such that each team is a segment and all the teams together take some prefix of the programmers So we can finally run a greedy solution that takes programmers from left to right and increases the answer if the conditions for the latest team hold Overall complexity ,1
139,There are pillars aligned in a row and numbered from to Initially each pillar contains exactly one disk The th pillar contains a disk having radius You can move these disks from one pillar to another You can take a disk from pillar and place it on top of pillar if all these conditions are met there is no other pillar between pillars and Formally it means that pillar contains one disk either pillar contains no disks or the topmost disk on pillar has radius strictly greater than the radius of the disk you move When you place a disk on a pillar that already has some disks on it you put the new disk on top of previously placed disks so the new disk will be used to check the third condition if you try to place another disk on the same pillar You may take any disk and place it on other pillar any number of times provided that every time you do it all three aforementioned conditions are met Now you wonder is it possible to place all disks on the same pillar simultaneously ,Let s denote and analogically Then we can note that So we can switch to calculating and Let s be the closest from the left to element such that To calculate we will look from the other side we will look at it as the sum of lengths of segments induced by each element from Each element will add to value equal to or a piecewise linear function if we look at as a variable And is a value of a sum of linear functions induced by in a point To process it efficiently we can one by one add induced linear functions to the corresponding subsegments using BIT or Segment Tree and if we ve added functions induced by we can calculate answer for all queries which looks like To calculate we can just reverse array and all queries Result time complexity is Note that it s still works quite slow so you should use fast data structures like BIT of iterative segment tree ,0
140,Consider a playoff tournament where athletes compete The athletes are numbered from to The tournament is held in stages In each stage the athletes are split into pairs in such a way that each athlete belongs exactly to one pair In each pair the athletes compete against each other and exactly one of them wins The winner of each pair advances to the next stage the athlete who was defeated gets eliminated from the tournament The pairs are formed as follows in the first stage athlete competes against athlete competes against competes against and so on in the second stage the winner of the match competes against the winner of the match the winner of the match competes against the winner of the match and so on the next stages are held according to the same rules When athletes and compete the winner is decided as follows if is odd the athlete with the lower index wins i e if then wins otherwise wins if is even the athlete with the higher index wins The following picture describes the way the tournament with goes Your task is the following one given the integer determine the index of the athlete who wins the tournament ,First Consider the sum If we substitute the formula of then for every the coefficient at will be equal to so we can find the sum of all is equal to If the sum of isn t divisible by then the answer is Now let s consider the difference between two neighboring towns so If the value of we found isn t a positive integer then the answer if Otherwise we can find a single value of for every It s easy to see that these values are correct Overall complexity per testcase ,0
141,You are given an array consisting of integer numbers Your task is to split this array into three parts some of which may be empty in such a way that each element of the array belongs to exactly one of the three parts and each of the parts forms a consecutive contiguous subsegment possibly empty of the original array Let the sum of elements of the first part be the sum of elements of the second part be and the sum of elements of the third part be Among all possible ways to split the array you have to choose a way such that and is maximum possible More formally if the first part of the array contains elements the second part of the array contains elements and the third part contains elements then The sum of an empty array is Your task is to find a way to split the array such that and is maximum possible ,Let be the answer for the prefix of consisting of first characters How can we update from Suppose that we try to represent the substring from index to index indexed by writing it as some other string times Then this string has to be the smallest period of the substring and where is the length of the smallest period The smallest period of some string can be calculated as follows compute prefix function for and if is divisible by is the last value of prefix function then the length of the smallest period is if not then the length of the smallest period is This allows us to write a solution with complexity To improve it to we can use the fact that when we compute prefix function for some string we compute it for every prefix of this string So to obtain all values of we need in our solution we only need to compute prefix functions for every suffix of ,0
142,Ayush is a cashier at the shopping center Recently his department has started a service which allows users to shop online The store contains items customers have already used the above service Each user paid for items Let denote the th item in the th person s order Due to the space limitations all the items are arranged in one single row When Ayush receives the th order he will find one by one all the items in the row Let denote the position of the item in the row at the moment of its collection Then Ayush takes time equal to for the th customer When Ayush accesses the th element he keeps a new stock in the front of the row and takes away the th element Thus the values are updating Your task is to calculate the total time it takes for Ayush to process all the orders You can assume that the market has endless stock ,In this problem you should simply do what was written in the problem statement There are no tricks ,1
143,Vadim is really keen on travelling Recently he heard about kayaking activity near his town and became very excited about it so he joined a party of kayakers Now the party is ready to start its journey but firstly they have to choose kayaks There are people in the group including Vadim and they have exactly tandem kayaks each of which obviously can carry two people and single kayaks th person s weight is and weight is an important matter in kayaking if the difference between the weights of two people that sit in the same tandem kayak is too large then it can crash And of course people want to distribute their seats in kayaks in order to minimize the chances that kayaks will crash Formally the instability of a single kayak is always and the instability of a tandem kayak is the absolute difference between weights of the people that are in this kayak Instability of the whole journey is the total instability of all kayaks Help the party to determine minimum possible total instability ,Firstly let s learn how to split persons in pairs as if there are no single kayaks Let there be people with weights and Obviously the lowest instability you can achieve is Swapping any two elements will only make the result greater This greedy strategy can be used to distribute all the seats Now you need to check every pair of persons to seat in single kayaks and calculate total instability for the rest The answer will be the minimun instabily over all pairs Overall complexity ,1
144,You are given a rooted tree consisting of vertices numbered from to The root is vertex There is also a string denoting the color of each vertex if then vertex is black and if then vertex is white A subtree of the tree is called balanced if the number of white vertices equals the number of black vertices Count the number of balanced subtrees A is a connected undirected graph without cycles A is a tree with a selected vertex which is called the In this problem all trees have root The tree is specified by an array of parents containing numbers is the parent of the vertex with the number for all The parent of a vertex is a vertex that is the next vertex on a simple path from to the root The of a vertex is the set of all vertices that pass through on a simple path to the root For example in the picture below is in the subtree of because the simple path passes through Note that a vertex is included in its subtree and the subtree of the root is the entire tree The picture shows the tree for and The subtree at the vertex is balanced ,Let s run a dynamic programming from the leaves to the root For each vertex store the values of the number of balanced subtrees as well as the number of white and black vertices in it Then from a vertex we can count the total number of white vertices in its subtree as well as the black vertices in its subtree and update our total if they are equal Remember to include the color of the vertex itself in these counts The answer is the answer at the root Therefore the problem is solved in time ,1
145,At first there was a legend related to the name of the problem but now it s just a formal statement You are given points on the axis Now you are asked to find such an integer point on axis that is minimal possible The function can be described in the following way form a list of distances where distance between and sort list in non descending order take as a result If there are multiple optimal answers you can print any of them ,Let s look at the answer Let s see how many commands the robot can execute Since the robot breaks goes outside the field if any command causes it to break it either leads to its total shift relative to of exactly to the left or exactly to the right or similarly of exactly up or exactly down Denote by and the sum of the maximum positive right down and maximum negative left up shifts in the corresponding direction By adding up the above constraints we get the fact that the robot will not fall off the board only if and Note that the reverse is also true if both these conditions are satisfied then starting from the point where is the maximum shift along the direction the robot will not pass any of the board s edges Thus it is sufficient to find the number of commands which when executed hold the following invariant The horizontal shift can be calculated as the difference between the number of letters and the number of letters encountered Similarly the vertical shift as the difference of the numbers of and Let s iterate over the sequence of commands maintaining relevant values of for all After executing each command if the robot goes farther in some direction than ever before we update the corresponding Either we reach the end of or we meet a command after which either becomes equal to or becomes equal to and the robot breaks so the previous command was the last one successfully executed The possible answer is where the values are calculated one command before the robot broke ,0
146,Ivan wants to have a good dinner A good dinner should consist of a first course a second course a drink and a dessert There are different types of first courses Ivan can buy the th of them costs coins different types of second courses the th of them costs coins different types of drinks the th of them costs coins and different types of desserts the th of them costs coins Some dishes don t go well with each other There are pairs of first courses and second courses that don t go well with each other pairs of second courses and drinks and pairs of drinks and desserts that don t go well with each other Ivan wants to buy exactly one first course one second course one drink and one dessert so that they go well with each other and the total cost of the dinner is the minimum possible Help him to find the cheapest dinner option ,The main solution is dynamic programming let for every possible dish be the minimum cost to assemble a prefix of a dinner ending with the dish here can be a dish of any type first course second course drink or dessert Then the answer to the problem is the minimum value among all desserts The number of transitions in this dynamic programming is too big since for example when transitioning from first courses to second courses we need to check options To speed this up we need some sort of data structure built over the values of for all first courses that allows to recalculate for a second course quickly There are two main approaches to this build any version of RMQ over the values of dynamic programming for the first courses Then when we want to calculate the answer for some second course sort all types of first courses which don t go well with it and make several RMQ queries to find the minimum value over all non forbidden first courses store all values of in a data structure that supports adding an element deleting an element and finding the minimum element this DS should allow duplicate elements as well When we want to calculate the answer for some second course remove all values of corresponding to the first courses that don t go well with it from the data structure query the minimum in it and insert the removed elements back The same approach can be used to advance from second courses to drinks and from drinks to desserts you can even use the same code in a for loop with iterations so the resulting solution is actually short and simple ,1
147,You have a large rectangular board which is divided into cells the board has rows and columns Each cell is either white or black You paint each white cell either red or blue Obviously the number of different ways to paint them is where is the number of white cells After painting the white cells of the board you want to place the maximum number of dominoes on it according to the following rules each domino covers two adjacent cells each cell is covered by at most one domino if a domino is placed horizontally it covers two adjacent cells in one of the rows it should cover only red cells if a domino is placed vertically it covers two adjacent cells in one of the columns it should cover only blue cells Let the of the board be the maximum number of dominoes you can place Calculate the sum of of the board over all possible ways to paint it Since it can be huge print it modulo ,Let s precompute for each value its position in permutation It s easy to do in linear time Consider some foe pair we may assume Let s store for each value the leftmost position such that is a foe pair Denote that value as Now let s iterate over the array from right to left and maintain the position of the maximal correct interval with the left end in the current position To maintain the value we should simply take the minimum with the value And finally we should increment the answer by the value ,0
148,Let s denote the function that takes a string consisting of lowercase Latin letters and dots and returns a string consisting of lowercase Latin letters as follows let be an empty string process the characters of from left to right For each character do the following if is a lowercase Latin letter append at the end of the string otherwise delete the last character from if is empty before deleting the last character the function crashes return as the result of the function You are given two strings and You have to delete the minimum possible number of characters from so that and the function does not crash Note that you aren t allowed to insert new characters into or reorder the existing ones ,To solve the problem it is enough to consider several cases if the array is already sorted the answer is if or then you can sort the array in one operation by selecting the subarray or if and you can perform the sequence of operations and and sort the array on each of them you can t do it faster since you can t move both to position and to position in only operations otherwise the array can be sorted in operations ,0
149,You are given a rooted tree consisting of vertices The vertex is the root Each vertex has an integer written on it this integer is for the vertex You are given queries to the tree The th query is represented by two vertices and To answer the query consider all vertices that lie in the subtree of or For all vertices in these two subtrees list all integers written on them and find the integer with the maximum number of occurrences If there are multiple integers with maximum number of occurrences the among them is the answer ,Polycarp has dominoes on each domino there are numbers it turns out there will be numbers in total We need to divide numbers each number from to into two sets so that all numbers in each set are different each set will consist of numbers It turns out that all numbers from to must occur exactly times no more and no less Let s imagine it all as a bipartite graph where there are vertices from to and dominoes are edges Since each number occurs exactly times then we have a lot of cycles In which the edges of each number must be included in different sets in other words the cycles must be of even length This can be checked in by a simple enumeration ,0
150,You are given an array of integers and another integer such that You have to perform operations with this array In one operation you have to choose two elements of the array let them be and they can be equal or different but remove them from the array and add to your where is the maximum integer not exceeding Initially your is After you perform exactly operations you add all the remaining elements of the array to the Calculate the minimum possible you can get ,It s kinda obvious that we have to choose the greatest elements of the array as the denominators in the operations suppose we haven t chosen one of them but have chosen a lesser element as a denominator if we swap them the total score won t decrease It is a bit harder to prove that the numerators of the fractions should be the next greatest elements the elements on positions from to in sorted order It can be proved as follows each fraction we will get in such a way rounds down to either or to and if we choose a lesser element as a numerator we can decrease a fraction from to but we ll increase the sum of elements that remain in the array so this is not optimal All that s left is to pair the numerators and denominators A fraction with numerator equal to denominator rounds down to any other fraction will round down to so our goal is to minimize the number of fractions having the numerator equal to the denominator It can be done by pairing the numbers into fractions in the following way assuming is sorted So the solution of the problem is the following sort the array then calculate ,1
151,The new generation external memory contains an array of integers This type of memory does not support changing the value of an arbitrary element Instead it allows you to cut out any segment of the given array rotate it by any offset and insert it back into the same place Technically each cyclic shift consists of two consecutive actions You may select arbitrary indices and as the boundaries of the segment Then you replace the segment with it s to the by an arbitrary offset The concept of a can be also explained by following relations the sequence is a cyclic shift of the sequence to the left by the offset and the sequence is a cyclic shift of the sequence to the left by the offset For example if then choosing and yields a segment This segment is then shifted by the offset to the and you get a segment which then takes the place of of the original elements of the segment In the end you get Sort the given array using no more than cyclic shifts of any of its segments Note that you don t need to minimize the number of cyclic shifts Any method that requires or less cyclic shifts will be accepted ,In this problem it was enough to implement an analogue of standard or Here is an example of a solution based on selection sort Let s find the minimum element in the array by simply iterating over it Let s denote its index in the array by If we apply a shift to it the following happens Once again please note that all shifts are made in the left direction so shifting by to the left will put the element that was previously at index in the first place Let us perform a similar shift for the second largest element of the array putting it in second place for the third largest element of the array putting it in third place and so on More formally let s describe the th iteration as follows At the beginning of the th iteration the first elements of the array are its minimal elements already in their correct places in sorted order During the th iteration the th largest element of the array is placed in the th place in the array Since the first minimal elements are already in their places the th largest element of the array is simply the smallest element among Let s find it by iterating over these elements and denote its index in the array by Make a shift The first elements will not change and the element from the th place in the array will move to the th It is worth noting that the output format forbids shifting segments with Regarding this case we should check the equality separately If these two indexes coincide then the th element is already in its place and no shift should be done on this iteration Let us repeat this algorithm for At each iteration the new element will be shifted into its place in sorted order and each iteration performs no more than one shift operation Thus in strictly less than shifts the array will be completely sorted The time complexity is ,1
152,Two T shirt sizes are given and The T shirt size is either a string or a string consisting of several possibly zero characters and one of the characters or For example strings could be the size of some T shirts And the strings are not sizes The letter stands for medium for small for large The letter refers to the degree of size from eXtra For example is extra extra large bigger than and smaller than You need to compare two given sizes of T shirts and The T shirts are compared as follows any small size no matter how many letters is smaller than the medium size and any large size any large size regardless of the number of letters is larger than the medium size and any small size the more letters before the smaller the size the more letters in front of the larger the size For example ,Let are the last characters of lines and respectively And are the sizes of these strings then the answer depends only on and and is uniquely defined as the inverse of to if if since the characters are in reverse order in the alphabet Then the answer is This also covers the case Then the larger the size of the string the smaller the size of the t shirt That is the answer is if and if Then the larger the size of the string the smaller the size of the t shirt That is the answer is if and if ,1
153,You are given an undirected graph consisting of vertices Initially there are no edges in the graph Also you are given queries each query either adds one undirected edge to the graph or removes it After each query you have to check if the resulting graph is bipartite that is you can paint all vertices of the graph into two colors so that there is no edge connecting two vertices of the same color ,Let s look at the answer by construction each element in the final answer was the result of replace series of elements on the corresponding segment So all we need to find is the minimal by size partition of the array on segments where each segment can be transformed in one element by series of replaces We can calculate it using standard prefix dynamic programming or is the size of such minimal partition of a prefix of length The transitions are standard let s check all segments and if it can be replaced by one element let s relax Now we need to check for all segments of can it be replaced by one element Let s calculate another using the following fact if there is a way to replace all segment as one element so the segment either has the length or it can be divided into two parts where the prefix can be replaced by one element the suffix also can be replaced by one element and these elements are equal It s exactly the transitions we need to check to calculate The resulting complexity is ,0
154,There is a game called Unique Bid Auction You can read more about it here https en wikipedia org wiki Unique bid auction though you don t have to do it to solve this problem Let s simplify this game a bit Formally there are participants the th participant chose the number The winner of the game is such a participant that the number he chose is i e nobody else chose this number except him and is i e among all unique values of the minimum one is the winning one Your task is to find the of the participant who won the game or if there is no winner Indexing is based i e the participants are numbered from to You have to answer independent test cases ,This is a simple implementation problem Let s calculate two values for each i from 1 to n cnt i the number of occurrences of i in a and idx i any position of i in a Then let s iterate through i from 1 to n and if cnt i 1 just print idx i because if it is the only such element then we found the winner If we didn t find any such element we have to print ,1
155,Polycarp wants to assemble his own keyboard Layouts with multiple rows are too complicated for him his keyboard will consist of only one row where all lowercase Latin letters will be arranged in some order Polycarp uses the same password on all websites where he is registered it is bad but he doesn t care He wants to assemble a keyboard that will allow to type this password very easily He doesn t like to move his fingers while typing the password so for each pair of adjacent characters in they should be adjacent on the keyboard For example if the password is then the layout is perfect since characters and are adjacent on the keyboard and and are adjacent on the keyboard It is guaranteed that there are no two adjacent equal characters in so for example the password cannot be two characters are adjacent Can you help Polycarp with choosing the perfect layout of the keyboard if it is possible ,The problem can be solved using a greedy algorithm We will maintain the current layout of the keyboard with letters that have already been encountered in the string and the current position on the layout If the next letter of the string is already on the layout it must be adjacent to the current one otherwise there is no answer If there was no such letter yet we can add it to the adjacent free position if both of them is occupied then there is no answer At the end you have to add letters that were not in the string ,1
156,Maksim has objects and boxes each box has size exactly Objects are numbered from to in order from left to right the size of the th object is Maksim wants to pack his objects into the boxes and he will pack objects by the following algorithm he takes one of the empty boxes he has goes from left to right through the objects and if the th object fits in the current box the remaining size of the box is greater than or equal to he puts it in the box and the remaining size of the box decreases by Otherwise he takes the new empty box and continues the process above If he has no empty boxes and there is at least one object not in some box then Maksim cannot pack the chosen set of objects Maksim wants to know the maximum number of objects he can pack by the algorithm above To reach this target Your task is to say the maximum number of objects Maksim can pack in boxes he has Each time when Maksim tries to pack the objects into the boxes he will make empty all the boxes he has before do it and the relative order of the remaining set of objects will not change ,The first solution is some kind of a straight forward understanding the problem Let s do binary search on the answer So our problem is to find the smallest such that the suffix of the array starting from the position can be packed in boxes It is easy to see that if we can do it for some then we always can do it for And to find the answer for the fixed we have to simulate the process described in the problem statement starting from the position Okay this is solution The second solution is more interesting than the first one The approach is to reverse the initial array simulate the process from the first position of reversed array and then all the objects we can pack are in the best answer and there is no better answer at all Why it works Let s take a look on the last box in the best answer if we will go from left to right in the initial array Let objects in this box be What do we see So all these objects are fit in the last box obviously Now if we will iterate over objects from right to left these objects will fit also It means that we cannot do worse by such a transform reversing at least for the last box But what will happen if we can put some of the previous objects in this box Well it will not make worse for this box but what about next boxes previous boxes in straight notation Let objects in the penultimate box be What do we see These objects are fit in this box obviously again What will happen if we will put in the last box one or more objects of this box Then the border of objects which we will put in it will not increase because we the number of object in this box So we can see that for previous boxes this condition is also satisfied So we can solve the problem with this approach Time complexity of this solution is ,1
157,You are given two integers and Your task is to calculate the sum of numbers from to including and such that each number contains different digits and print this sum modulo For example if then you have to calculate all numbers from to such that each number is formed using only one digit For the answer is ,Let s calculate the answer as the sum of suitable numbers in range minus the sum of suitable numbers in range Now our problem is to calculate the sum of suitable numbers in range The main approach for problem is digit DP Let s calculate two dynamic programmings and means that now we are at the th digit of the number at the digit corresponding to where is the decimal length of a number is a binary mask describing digits we already use and equals if the current prefix of number we trying to obtain is the same as the prefix of number otherwise equals So what means It means the count of numbers in general not numbers but their prefixes in range of length without leading zeroes corresponding to this state So what the point of this DP Its point is helping us to calculate the main DP which means the sum of numbers in general not numbers but their prefixes in range of length without leading zeroes corresponding to this state How do we calculate the answer Firstly let be the length of Let be the function calculating the sum of numbers from to containing at most different digits How to calculate it Let be the sum of numbers from to containing at most different digits and having length exactly Then seems to be pretty easy for each length from to add to the answer And the last step is to add to the answer How to calculate dynamic programmings Initially all states are zeroes excluding which is Firstly let s calculate After calculating it we can calculate in almost the same way Let s iterate over all possible lengths and over all possible masks Let the current state is Then let s iterate over next digit we will place in this number and place it If then otherwise The transition is pretty easy There is the bitwise operation For transitions are almost the same expect the restrictions on digit we place and the state we update If we now at the position with mask and then the current digit of is Then let s iterate over next digit if otherwise The transition is also easy After calculating the previous DP we can calculate All the process is the same as in the previous dynamic programming expect the value we will add in transitions In the previous DP this value was equal in the current DP this value equals to Don t forget to calculate it modulo So after calculating all the values of DPs what is the answer for It is for all masks with at most bits I m pretty sure that there is another way to avoid leading zeroes in calculating these DPs but this one is very straight forward and simple ,1
158,You are given four integers and You should build a sequence where and for each you can choose either or Your goal is to build such a sequence that for all and is maximum possible ,It s quite easy to see that ab x bmod a bmod b x bmod a bmod b What does it mean The property given in the statement holds for x if and only if it holds for x bmod ab It allows us to answer each testcase in O ab q as follows for each number from 0 to ab 1 we may check the given property before processing the queries and build an array of prefix sums on it to efficiently count the number of integers satisfying the property from the segment 0 y where y ab Then each query l r can be divided into two prefix queries 0 l 1 and 0 r To answer a prefix query 0 p in O 1 we can calculate the number of full segments of length ab inside this prefix that is lfloor frac p ab rfloor and the length of the last segment of numbers that don t belong into a full segment that is p bmod ab To handle full segments we multiply the number of integers satisfying the property on one segment by the number of such segments and to handle the last part of segment we use prefix sums ,0
159,A sequence of numbers is called if it contains all numbers from to exactly once For example the sequences and are permutations but and are not For a given number you need to make a permutation such that two requirements are satisfied at the same time For each element at least one of its neighbors has a value that differs from the value of by one That is for each element at least one of its neighboring elements standing to the left or right of must be or the permutation must have no fixed points That is for every must be satisfied Let s call the permutation that satisfies these requirements For example let Then is a permutation since to the right of is to the left of is to the right of is to the left of is for all is For a given positive integer output permutation of length or output if permutation of length does not exist ,We cannot make a funny permutation only when because one of the neighboring elements of must be equal to Any permutation made in this way will not satisfy the conditions The permutation will have a fixed point The permutation will have a fixed point The permutation will not have a neighbor equal to for For the remaining values of make the following observations For the only funny permutation is When permutations of the form will always be funny because all elements will have a neighbor equal to or and the permutation will have no fixed points and for will always be true ,1
160,Berland regional ICPC contest has just ended There were participants numbered from to who competed on a problemset of problems numbered from to Now the editorial is about to take place There are two problem authors each of them is going to tell the tutorial to of the problemset The authors choose the segment of consecutive tasks for themselves independently of each other The segments can coincide intersect or not intersect at all The th participant is interested in listening to the tutorial of all consecutive tasks from to Each participant always chooses to listen to only the problem author that tells the tutorials to the maximum number of tasks he is interested in Let this maximum number be No participant can listen to both of the authors even if their segments don t intersect The authors want to choose the segments of consecutive tasks for themselves in such a way that the sum of over all participants is maximized ,This problem has two different solutions a mincost maxflow approach and a greedy one We will tell you about the latter First of all let Then find all pairs of indices such that let the number of these pairs be It s obvious that we have to replace at least one letter in each of these pairs For each of these pairs let s replace the letter with lower with something Let s analyze the letters we are going to replace Let be the number of occurences of letter that we have to replace There are two cases There is no letter such that Then we can replace these letters without involving anything else and get an antipalindromic string with minimal possible cost There is a letter such that It s obvious that there is at most one such letter Let s replace some occurences of with other letters that are to be replaced Then we will still have some occurences of that need to be replaced Let s take one letter from each pair such that both of letters in a pair are not equal to Among these possibilities choose the required number of letters with minimum values of Then we can replace remaining occurences of with these letters ,0
161,Vova is again playing some computer game now an RPG In the game Vova s character received a quest to slay the fearsome monster called Modcrab After two hours of playing the game Vova has tracked the monster and analyzed its tactics The Modcrab has health points and an attack power of Knowing that Vova has decided to buy a lot of strong healing potions and to prepare for battle Vova s character has health points and an attack power of Also he has a large supply of healing potions each of which increases his current amount of health points by when Vova drinks a potion All potions are identical to each other It is guaranteed that The battle consists of multiple phases In the beginning of each phase Vova can either attack the monster thus reducing its health by or drink a healing potion it increases Vova s health by Then the Modcrab attacks Vova reducing his health by The battle ends when Vova s or Modcrab s health drops to or lower It is possible that the battle ends in a middle of a phase after Vova s attack Of course Vova wants to win the fight But also he wants to do it as fast as possible So he wants to make up a strategy that will allow him to win the fight after the minimum possible number of phases Help Vova to make up a strategy You may assume that Vova never runs out of healing potions and that he can always win ,A simple greedy solution works simulate the process until the Modcrab is dead and make Vova drink a potion if his current health is less than and monster s current health is greater than because in this case Vova can t finish the Modcrab in one strike but the Modcrab can win if Vova doesn t heal In any other situation Vova must attack Since all parameters are up to the number of phases won t exceed ,1
162,Consider a tournament with participants The rating of the th participant is The tournament will be organized as follows First of all organizers will assign each participant an index from to All indices will be unique Let be the participant who gets the index Then games will be held In the first game participants and will play In the second game the winner of the first game will play against In the third game the winner of the second game will play against and so on in the last game the winner of the th game will play against Monocarp wants to predict the results of all games of course he will do the prediction only after the indices of the participants are assigned He knows for sure that when two participants with ratings and play and the participant with the higher rating wins But if any of the two participants may win Among all ways to assign the indices to participants calculate the number of ways to do this so that Monocarp can predict the results of games Since the answer can be large print it modulo ,We need some sort of better criterion other than all matches can be predicted first Suppose the ratings of the participants are in the order of their indices Then if all games are predictable the th game should be won by the participant with the rating equal to and in the th game they will play against the participant with rating So in order for each game to be predictable This is the criterion we will use So we will try to count the number of orderings meeting this condition One very important observation we need to make is that if we remove several participants with the lowest ratings from the ordering that ordering still satisfies the condition for each element either the prefix before it is removed completely or the maximum on it is unchanged So this allows us to construct the correct ordering by placing the sportsmen from the maximum rating to the minimum rating and making sure that on every step the order stays correct Okay Let s reverse the ratings array and try to write the following dynamic programming is the number of correct orderings of the first sportsmen the highest rated sportsmen since we reversed the ratings array Let s try to place the next sportsman We run into the following issue for some orderings of the first sportsmen it is possible to place the next one anywhere these orderings are where the first sportsman in the ordering doesn t conflict with the sportsman we are trying to place but for other orderings some positions might be forbidden And to keep track of which positions are forbidden and for which sportsmen we probably need some additional states for the dynamic programming which we don t really want to since states is probably the most we can allow Okay so let s avoid this issue entirely We don t like the orderings where the next sportsman can t be placed anywhere so let s find a way to ignore them discard the previous definition of Now let is the number of correct orderings of the highest rated sportsmen when we place the next sportsman in case it becomes the first element and conflicts with some of the elements we haven t placed yet So this leads to the following transitions in the dynamic programming if we place the th sportsman on any position other than the first one there are ways to do it and we transition from to otherwise if we place the th sportsman on the first position let be the last sportsman conflicting with the sportsman Let s try placing all sportsmen from to before placing the sportsman They cannot be placed on the first position otherwise they will conflict either with each other or with the sportsman so the first one can be placed in ways the second one in ways and so on this product can be easily calculated in by preparing factorials and inverse factorials So then we transition from to There is a special case in our dynamic programming It should start with but what if the st sportsman conflicts with someone Then the ordering of the first sportsmen is incorrect In this case the answer is since the st and the nd sportsmen are conflicting Overall complexity of this solution is or depending on your implementation ,1
163,There are left boots and right boots Each boot has a color which is denoted as a lowercase Latin letter or a question mark Thus you are given two strings and both of length The character stands for the color of the th left boot and the character stands for the color of the th right boot A lowercase Latin letter denotes a specific color but the question mark denotes an indefinite color Two specific colors are if they are exactly the same An indefinite color is with any specific or indefinite color For example the following pairs of colors are compatible and The following pairs of colors are compatible and Compute the maximum number of pairs of boots such that there is one left and one right boot in a pair and their colors are compatible Print the maximum number of such pairs and the pairs themselves A boot can be part of at most one pair ,Let s use as usual linearity of an expected value where is an indicator function and equal to iff Adilbek will be able to solve the th crossword How to calculate If then is always On the other hand if is always Otherwise we need to calculate the needed probability To calculate we can iterate over the number of crosswords among first ones which will require extra time Obviously if then we don t have enough time to solve the th crossword also Let s denote There are ways to choose crosswords with extra time among all variants So the final formula is following The only problem is the efficiency But we can find out several interesting properties At first The other one since then And this exactly the efficient way to transform to by multiplying and adding one coefficient we can transform the prefix sum of the th row to the prefix sum of the row And to reduce the length of the prefix sum we can just subtract unnecessary coefficients In result the total complexity is maybe with extra factor because of modular arithmetic ,0
164,You are given an array consisting of integers and additionally an integer You have to choose some sequence of indices in such a way that the value of is maximized Chosen sequence can be empty Print the maximum possible value of ,Let s consider the naive solution in or Iterate over all subsets of original set calculate sums and take maximum of them modulo Now we can use meet in the middle technique to optimize it to Preprocess the first elements naively and push sums modulo to some array After this process the second half with following algorithm Take sum of the set and find the greatest total sum of current and some sum in the array As any sum of two numbers less than can go no greater than we can consider just two values the greatest number in array and the greatest number less than in the array This can be found by binary search over sorted array Overall complexity ,1
165,There is a robot in a warehouse and packages he wants to collect The warehouse can be represented as a coordinate grid Initially the robot stays at the point The th package is at the point It is guaranteed that there are no two packages at the same point It is also guaranteed that the point doesn t contain a package The robot is semi broken and only can move up and right In other words in one move the robot can go from the point to the point or to the point As we say above the robot wants to collect all packages He wants to do it with the minimum possible number of moves If there are several possible traversals the robot wants to choose the lexicographically smallest path The string of length is lexicographically less than the string of length if there is some index that for all from to and It is the standard comparison of string like in a dictionary Most programming languages compare strings in this way ,At first time limit was not that tight for the problem We didn t want any sqrt bitset or straight up solution to pass and it s close to none to pass Jury solution works faster than twice the time limit so we decided 6 seconds is alright The task is purely about implementation You renumerate numbers in permutations so that the queries are and then have the structure to make update in point and sum on rectangle Renumeration in my case was making the first permutation into identity one and changing the numbers in second appropriately You can choose the structure you want I ll tell about the one I use when the queries are offline For online the common technique is having BITs each with treap in it ordered set template from pbds is usually enough For offline you can precalculate the values to fall into each BIT beforehand and do BIT on these values inside Preprocess all the update and get queries adding into all the BITs will fall into Then sort them and leave only unique occurrences Overall complexity ,0
166,You are given two arrays and both consisting of positive greater than zero integers You are also given an integer In one move you can choose two indices and and swap and i e becomes and vice versa Note that and can be equal or different in particular swap with or swap and both are acceptable moves Your task is to find the possible sum you can obtain in the array if you can do no more than i e at most such moves swaps You have to answer independent test cases ,Let s iterate over the number that we want to multiply by How can we check that we can multiply the current number so that an AP is formed Note that those numbers that we do not touch should form an AP themselves For instance let at the current operation we want somehow multiply the number Then and Note that Thus we know what is Also we know that Let s check if is divisible by If yes then we have found the answer if not then move on to the next number We do the same for and Be careful with non positive numbers integer divisions and other edge cases ,0
167,Alice and Bob play a game Alice has cards the th of them has the integer written on it Bob has cards the th of them has the integer written on it On the first turn of the game chooses one of his her cards and puts it on the table plays it On the second turn chooses one of his her cards and plays it On the third turn chooses one of his her cards and plays it and so on the players take turns and each player has to choose one of his her cards with greater integer than the card played by the other player on the last turn If some player cannot make a turn he she loses For example if Alice has cards with numbers and Bob has cards with numbers the game may go as follows Alice can choose any of her cards She chooses the card with integer and plays it Bob can choose any of his cards with number greater than He chooses a card with integer and plays it Alice can choose any of her cards with number greater than She chooses the card with integer and plays it Bob can choose any of his cards with number greater than He chooses a card with integer and plays it Alice can choose any of her cards with number greater than but she has no such cards so she loses Both Alice and Bob play You have to answer two questions who wins if Alice is the first player who wins if Bob is the first player ,First let s solve the problem without blocked positions Let s look at the array Obviously if strictly increases then does not decrease and vice versa Now we have to find the maximum number of positions in the array that can be left unchanged And you can always choose an integer that will not break the non decreasing array for the rest of positions This problem can be solved in by analogy with the largest increasing subsequence but now you can take equal elements Now you can realize that the segments between two blocked positions do not depend on each other and the initial problem can be solved as the problem described above All that remains is to check that all blocked positions do not break the strict array increment ,0
168,Today you are going to lead a group of elven archers to defend the castle that is attacked by an army of angry orcs Three sides of the castle are protected by impassable mountains and the remaining side is occupied by a long wall that is split into sections At this moment there are exactly archers located at the th section of this wall You know that archer who stands at section can shoot orcs that attack section located at distance not exceeding that is all such sections that In particular means that archers are only capable of shooting at orcs who attack section Denote as of section the total number of archers who can shoot at the orcs attacking this section of the defense plan is the minimum value of defense level of individual wall section There is a little time left till the attack so you can t redistribute archers that are already located at the wall However there is a reserve of archers that you can distribute among wall sections in arbitrary way You would like to achieve maximum possible reliability of the defence plan ,Firstly if we may obtain reliability at least then we may obtain reliability not less than with the same number of archers So we may use binary search and check whether we may obtain reliability at least How can we check it Let s find the leftmost section such that its defense level is less than Let its index be We obviously have to add some archers controlling this section and since every section to the left of it is already controlled the best option where to add archers is the section with index After we added enough archers we move to next section such that its defense level is less than and do the same If we run out of archers without protecting all the sections then it s impossible to obtain reliability To do checking in we may use prefix sums or sliding window technique ,1
169,A permutation of length is an array which contains every integer from to inclusive and moreover each number appears exactly once For example is a permutation of length For a given number find a permutation in which absolute difference that is the absolute value of difference of any two neighboring adjacent elements is between and inclusive Formally find such permutation that for each Print any such permutation for the given integer or determine that it does not exist ,The easiest part of the solution is to notice that if the charger of power works then the charger of power also works Thus binary search is applicable to the problem is really small and only one laptop can be charged during some minute It implies that check function can work in something polynomial on by searching for the right laptop to charge during every minute I claim that the greedy algorithm works Find the laptop that gets his charge below zero the first Charge it for one minute as early as possible Repeat until you either don t have time to charge the laptop check returns false or the contest is over check returns true Why greedy works Well check any case where check returns false If some laptop runs out of power then all the minutes up to the current one are used to charge something Moreover you can free no minute of these as by doing greedy we charged all laptops as late as possible Freeing some minute will lead to other laptop dying earlier One way to implement this is the following Keep a heap of events pop its head add to it if the time is greater than the number of charges already made and push it back to heap That will simulate the entire process in Unfortunately this may be too slow on some implementations Let s try the following linear approach Maintain not the heap but such an array that th its cell contains all indices of all the laptops to run out of charge on the beginning of minute Keep an iterator to the first non empty position Pop a single index out of this vector charge it and push it to the new position You ll still make steps and on each step you ll make instant operations That will make it for this simulation I m not really sure how to build the maximal answer case however I can estimate the upper bound of binary search You can set in such a way that it charges every laptop in one minute so that it won t run out of power until the end of the contest Choose the smallest the greatest the greatest and you ll end up with total usage Thus will always be enough Overall complexity or if you are skillful enough to squeeze it D ,0
170,You are given a binary string consisting of zeros and ones Your task is to divide the given string into the number of in such a way that of the string belongs to exactly and each subsequence looks like or i e the subsequence should not contain two adjacent zeros or ones Recall that a subsequence is a sequence that can be derived from the given sequence by deleting zero or more elements without changing the order of the remaining elements For example subsequences of are but not and You have to answer independent test cases ,We create a structure that stores for each point its coordinate weight and index in the input data Sort the array by increasing weight The sum of weights of the first points will be minimal so we use them to construct a system of nested segments We save the weights of the first points in the variable and remove the remaining points from the array Now sort the points in ascending order of coordinates and form a system of nested segments such that the endpoints of th segment are and for Thus the endpoints of the first segment are and the endpoints of the th segment are and For each test case we first output then pairs of numbers the indices under which the endpoints of the current segment were written in the input data ,0
171,You are given a graph consisting of vertices and edges It is not guaranteed that the given graph is connected Some edges are already directed and you can t change their direction Other edges are undirected and you have to choose some direction for all these edges You have to direct undirected edges in such a way that the resulting graph is directed and acyclic i e the graph with all edges directed and having no directed cycles Note that you have to direct undirected edges You have to answer independent test cases ,Firstly if the graph consisting of initial vertices and only directed edges contains at least one cycle then the answer is Otherwise the answer is always Let s build it Let s build the topological sort of the graph without undirected edges Then let s check for each directed edge if it s going from left to right in order of topological sort If it isn t true then there is a cycle and the answer is Otherwise let s direct each edge from left to right in order of the topological sort ,1
172,You are given an undirected weighted graph with vertices and edges The th edge is the distance between vertices and along the edge is The graph is i e for any pair of vertices there is at least one path between them consisting only of edges of the given graph A minimum spanning tree MST in case of weights is a subset of the edges of a connected weighted undirected graph that connects all the vertices together and has minimum total cost among all such subsets total cost is the sum of costs of chosen edges You can modify the given graph The only operation you can perform is the following increase the weight of some edge by You increase the weight of each edge multiple possibly zero times Suppose that the initial MST cost is Your problem is to increase weights of some edges in such a way that the cost of MST in the obtained graph remains but MST is it means that there is only one way to choose MST in the obtained graph Your problem is to calculate the number of operations required to do it ,At first time limit was not that tight for the problem We didn t want any sqrt bitset or straight up solution to pass and it s close to none to pass Jury solution works faster than twice the time limit so we decided 6 seconds is alright The task is purely about implementation You renumerate numbers in permutations so that the queries are and then have the structure to make update in point and sum on rectangle Renumeration in my case was making the first permutation into identity one and changing the numbers in second appropriately You can choose the structure you want I ll tell about the one I use when the queries are offline For online the common technique is having BITs each with treap in it ordered set template from pbds is usually enough For offline you can precalculate the values to fall into each BIT beforehand and do BIT on these values inside Preprocess all the update and get queries adding into all the BITs will fall into Then sort them and leave only unique occurrences Overall complexity ,0
173,Monocarp has been collecting rare magazines for quite a while and now he has decided to sell them He distributed the magazines between boxes arranged in a row The th box contains magazines Some of the boxes are covered with lids others are not Suddenly it started to rain and now Monocarp has to save as many magazines from the rain as possible To do this he can move the lids between boxes as follows if the th box was covered with a lid initially he can either move the lid from the th box to the box if it exists or keep the lid on the th box You may assume that Monocarp can move the lids instantly at the same moment and no lid can be moved more than once If a box will be covered with a lid after Monocarp moves the lids the magazines in it will be safe from the rain otherwise they will soak You have to calculate the maximum number of magazines Monocarp can save from the rain ,Let s process the boxes from left to right Consider the first box If it has a lid then you can just add the number of magazines in it to the answer and forget about this box To be exact proceed to solve the problem with the first box removed If it doesn t have a lid then look at the next box If it doesn t have a lid too then this box can never be covered Remove it and proceed further If the next box has a lid then look at the next one Again if it doesn t have a lid then these two first boxes are solved independently of everything else You can cover exactly one of them Choose the bigger one and remove them both To propagate the argument let s derive a pattern First there s a box without a lid Then some number of boxes with lids in a row Then a box without a lid again Among the first box and the box with lids you can choose exactly one to not be covered However that can be any one of them The best box to be left uncovered is the one with the smallest number of magazines in it Thus the solution is the following As long as the first box has a lid keep removing the first box and adding it to the answer Then as long as there are boxes left take the first box and the largest number of consecutive boxes with lids after it that number might be zero On that segment find the minimum value and the sum Add the sum minus the minimum to the answer remove the entire segment The removals can be done explicitly with a queue or just a reversed vector or implicitly with maintaining a pointer to the first non removed box Overall complexity ,1
174,You have students under your control and you have to compose consisting of some subset of your students Each student had his own skill the th student skill is denoted by an integer different students can have the same skills So about the teams Firstly these two teams should have the same size Two more constraints The first team should consist of students with skills i e all skills in the first team are unique The second team should consist of students with skills i e all skills in the second team are equal Note that it is permissible that some student of the first team has the same skill as a student of the second team Consider some examples skills are given is not a good pair of teams because sizes should be the same is not a good pair of teams because the first team should not contain students with the same skills is not a good pair of teams because the second team should contain students with the same skills is a good pair of teams is a good pair of teams Your task is to find the maximum possible size for which it is possible to compose a valid pair of teams where each team size is skills in the first team needed to be unique skills in the second team should be the same between them A student cannot be part of more than one team You have to answer independent test cases ,The easiest way to force some gcd to be of some fixed length is to use the divisibility rules for or if the number produced by the last digits is divisible by then is also divisible by same goes for and One of the possible constructions is the following let and Since and are pairwise prime gcd is Overall complexity per testcase ,0
175,Ivan is playing a strange game He has a matrix with rows and columns Each element of the matrix is equal to either or Rows and columns are indexed Ivan can replace any number of ones in this matrix with zeroes After that his score in the game will be calculated as follows Initially Ivan s score is In each column Ivan will find the topmost that is if the current column is then he will find minimum such that If there are no s in the column this column is skipped Ivan will look at the next elements in this column starting from the element he found and count the number of s among these elements This number will be added to his score Of course Ivan wants to maximize his score in this strange game Also he doesn t want to change many elements so he will replace the minimum possible number of ones with zeroes Help him to determine the maximum possible score he can get and the minimum possible number of replacements required to achieve that score ,Let s notice that this task can be solved independently for each column total result will be the sum of results for columns The ones you should remove will always be the top ones in column It makes no profit to erase some one while there are still ones on top of it score won t become higher Go from the top of the column to the bottom and recalculate the score after removing every one Take the first position of the maximal score and update global answer with it Overall complexity can be achieved with partial sums ,1
176,Given an integer find any array of nonnegative integers less than such that the bitwise XOR of the elements on odd indices equals the bitwise XOR of the elements on even indices ,If the edges were only added and not deleted it would be a common problem that is solved with disjoint set union All you need to do in that problem is implement a DSU which maintains not only the leader in the class of some vertex but also the distance to this leader Then if we try to connect two vertices that have the same leader in DSU and the sum of distances to this leader is even then we get a cycle with odd length and graph is no longer bipartite But in this problem we need to somehow process removing edges from the graph In the algorithm I will describe below we will need to somehow remove the last added edge from DSU or even some number of last added edges How can we process that Each time we change some variable in DSU we can store an address of this variable and its previous value somewhere for example in a stack Then to remove last added edge we rollback these changes we rewrite the previous values of the variables we changed by adding the last edge Now we can add a new edge and remove last added edge All these operations cost because path compression doesn t work in intended time if we have to rollback Let s actually start solving the problem For convinience we change all information to queries like edge exists from query number till query number It s obvious that there are no more than such queries Let s use divide and conquer technique to make a function that answers whether the graph is bipartite or not after every query from some segment of queries First of all we add to DSU all the edges that are present in the whole segment and not added yet then we solve it recursively for and then we remove edges from DSU using the rollback technique described above When we arrive to some segment then after adding the edges present in this segment we can answer if the graph is bipartite after query Remember to get rid of the edges that are already added and the edges that are not present at all in the segment when you make a recursive call Of course to solve the whole problem we need to call our function from segment Time complexity is because every edge will be added only in calls of the function ,0
177,You have a large electronic screen which can display up to decimal digits The digits are displayed in the same way as on different electronic alarm clocks each place for a digit consists of segments which can be turned on and off to compose different digits The following picture describes how you can display all decimal digits As you can see different digits may require different number of segments to be turned on For example if you want to display you have to turn on segments of the screen and if you want to display all segments of some place to display a digit should be turned on You want to display a really large integer on the screen Unfortunately the screen is bugged no more than segments can be turned on simultaneously So now you wonder what is the greatest integer that can be displayed by turning on no more than segments Your program should be able to process different test cases ,Take a look at the condition for a good subset The major implication it makes is that every point even non integer of the segment 1 m should be covered by at least one segment If some point isn t then there is no way to jump across the gap it produces At the same time this condition is enough to have a path since for every half integer point 0 5 1 5 and so on there exists a segment that covers it So you can take that segment to go from 1 to 2 then from 2 to 3 and so on Thus we are asked to select a subset of segments that covers the entire segment 1 m in its union The main prerequisite to the following solution is knowing the way to maintain the union of segments For now I can tell you that there is a data structure that allows you to add a segment remove a segment and query the length of the current union Let s continue with making some observations on the cost function If you fix the minimum and the maximum value you are free to select all segments that have their value in between That allows us to transition from selecting a subset of segment to an interval if you sort the segments by their weight If you fix only minimum then the required maximum should be as small as possible However if some value suffices as a maximum then any value greater than it also suffices since it only adds extra segments to the subset This makes the function on the maximum monotonous So the binary search applicable You could iterate over the minimum and binary search the maximum However it s not too clear how to make a check function You would need to find a union of some interval of segments quickly I don t really know a way to do that so let s try something different Instead let s forget about binary search and try to reach a two pointers solution Let f x be the smallest possible maximum given the fixed minimum is x We want f x 1 to be greater than or equal than f x for two pointers to be applicable That condition indeed holds Imagine if f x 1 is smaller than f x So there exists some optimal subset for x 1 Add all segments with weight x to that subset That brings the minimum to x However it doesn t change the maximum so f x is at least equal to f x 1 what contradicts the assumption Finally the solution comes up to the following Iterate over the minimum value x while maintaining f x When going from x to x 1 keep increasing the value of f until the union of the segments is exactly m Going from x to x 1 and increasing the value of f is actually removing some segments and adding some segments to the data structure The data structure that helps us with that is a segment tree The i th leaf of the tree holds the number of segments that cover the interval i i 1 Add remove segment makes it add subtract on a range The union is full if the there are no intervals that are covered by zero segments Thus let s store the minimum of the subtree in every intermediate node If the minimum on the tree is above zero then the current subset is good Instead of applying two pointers on the values of the segments let s apply them on the sorted segments themselves That makes moving the pointer exactly one update to the segtree Overall complexity O n log n n log m ,0
178,You are given a string consisting of small english letters In one move you can replace any character of this string to the next character in alphabetical order will be replaced with will be replaced with etc You cannot replace letter with any other letter Your target is to make some number of moves not necessary minimal to get string english alphabet as a subsequence Subsequence of the string is the string that is obtained by deleting characters at some positions You need to print the string that will be obtained from the given string and will be contain english alphabet as a subsequence or say that it is impossible ,The problem can be solved by the next greedy algorithm At first we need to store the last character of the alphabet we haven t obtained for example in variable initially it will be equal to Then we will just iterate over all characters of the string from left to right and if the current character of the string is not greater than we just replace it to and increase by 1 If in any moment will be greater than we got the answer And if after iterating over the string will be not greater than the answer is 1 ,1
179,Monocarp plays a computer game There are different sets of armor and different weapons in this game If a character equips the th set of armor and wields the th weapon their power is usually equal to but some combinations of armor and weapons synergize well Formally there is a list of ordered pairs and if the pair belongs to this list the power of the character equipped with the th set of armor and wielding the th weapon is not but Initially Monocarp s character has got only the st armor set and the st weapon Monocarp can obtain a new weapon or a new set of armor in one hour If he wants to obtain the th armor set or the th weapon he must possess a combination of an armor set and a weapon that gets his power to Of course after Monocarp obtains a weapon or an armor set he can use it to obtain new armor sets or weapons but he can go with any of the older armor sets and or weapons as well Monocarp wants to obtain the th armor set the th weapon What is the minimum number of hours he has to spend on it ,First note that parts of the picture separated by are independent That is any stamps used on one part doesn t have any impact on the other since a character means no stamp has been placed on that cell So let s split the string by s for example with method in Python and consider the resulting strings containing only and Call one of these parts In the final stamp we place on we must have placed so it should have both the characters and Therefore if the string has only or only the answer is Otherwise the answer is Let s show it As we have just shown we must have next to for the string to be possible Consider the way to make The final stamp can be For the rest of the cells we can make them one by one as below so now we have made the prefix of the string before the final stamp Similarly Now we have made the prefix and the suffix by stamping one character at a time actually we stamp two characters but then cover it up with another stamp Finally we can put the final stamp to make the whole string This method easily generalizes to any string We can find the final stamp and then make the prefix and suffix one by one The solution runs in ,0
180,Little girl Tanya climbs the stairs inside a multi storey building Every time Tanya climbs a stairway she starts counting steps from to the number of steps in this stairway She speaks every number aloud For example if she climbs two stairways the first of which contains steps and the second contains steps she will pronounce the numbers You are given all the numbers pronounced by Tanya How many stairways did she climb Also output the number of steps in each stairway The given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways ,The answer contains such elements that Also add to the answer the last element ,1
181,You are given a string consisting of characters These characters are among the first lowercase letters of the Latin alphabet You have to perform operations with the string During the th operation you take the character that the th position and perform of the following actions with it swap it with the previous character in the string if it exists This operation is represented as swap it with the next character in the string if it exists This operation is represented as cyclically change it to the previous character in the alphabet becomes becomes and so on becomes the th letter of the Latin alphabet This operation is represented as cyclically change it to the next character in the alphabet becomes becomes and so on the th letter of the Latin alphabet becomes This operation is represented as do nothing This operation is represented as For example suppose the initial string is and the sequence of operations is Then the string is transformed as follows the first operation is so we change the underlined letter in to the next one in the first Latin letters which is The string is now the second operation is so we swap the underlined letter with the next one in the string The string is now the third operation is so we swap the underlined letter with the previous one in the string note that this is now the nd character of the string but it was initially the rd one so the rd operation is performed to it The resulting string is the fourth operation is so we change the underlined letter in to the previous one in the first Latin letters which is The string is now The result of performing the sequence of operations is Given the string and the value of find the lexicographically smallest string that can be obtained after applying a sequence of operations to ,Let s denote and analogically Then we can note that So we can switch to calculating and Let s be the closest from the left to element such that To calculate we will look from the other side we will look at it as the sum of lengths of segments induced by each element from Each element will add to value equal to or a piecewise linear function if we look at as a variable And is a value of a sum of linear functions induced by in a point To process it efficiently we can one by one add induced linear functions to the corresponding subsegments using BIT or Segment Tree and if we ve added functions induced by we can calculate answer for all queries which looks like To calculate we can just reverse array and all queries Result time complexity is Note that it s still works quite slow so you should use fast data structures like BIT of iterative segment tree ,0
182, You are given segments on the coordinate axis Segments can intersect lie inside each other and even coincide The th segment is and it covers all integer points such that The integer point is called if it is covered by than segments Your task is to remove the minimum number of segments so that there are no points at all ,In this problem we need to implement the same greedy solution as in the easy version but faster Firstly let s calculate for each point the number of segments covering it We can do it using standard trick with prefix sums increase decrease and build prefix sums on the array Let s maintain the set of segments that cover the current point sorted by the right endpoint We can do this with almost the same trick append to the array the index that says us that in the point the th segment is opened And add to the the index that says us that in the point the th segment is closed Note that you need to add indexed values because and are the same thing actually We can change the array to carry the number of segments covering each point using some structure but we don t need to do it Let s maintain the variable that will say us the number of segments covering the current point that was already removed Also let s carry another one array which will say us when we need to decrease the variable So we calculated the array of arrays the array and we can solve the problem now For the point let s remove and add all segments we need using the array and add to Now we know that the set of segments is valid is also valid and we can fix the current point if needed While let s repeat the following sequence of operations take the segment with the maximum right border from the set remove it increase by one and decrease by one Note that when we remove segments from the set at the beginning of the sequence of moves for the point we don t need to remove segments that we removed by fixing some previous points and we need to pay attention to it Time complexity ,1
183,Polycarp has guessed three positive integers and He keeps these numbers in secret but he writes down four numbers on a board in arbitrary order their pairwise sums three numbers and sum of all three numbers one number So there are four numbers on a board in random order and You have to guess three numbers and using given numbers Print three guessed integers in any order Pay attention that some given numbers and can be equal it is also possible that ,The core idea of the solution is the following dynamic programming is the minimum number of characters we have to delete if we considered a subsequence of first characters of and it maps to first characters of There are three obvious transitions in this dynamic programming we can go from to by skipping if we can go from to if is a dot we can go from to Unfortunately these transitions cannot fully handle the case when we want to put some character and then delete it these transitions don t allow us to do it for any character only for some specific ones in specific situations To handle it suppose we want to take the character and then delete it and we model it as follows there exists the fourth transition from to without deleting anything where is the length of the shortest substring of starting from that becomes empty if we apply the function to it This substring can be described as a regular bracket sequence where opening brackets correspond to letters and closing brackets to dots We can precalculate this substring for each in Why is this transition enough Suppose we don t want to take some letter from this shortest substring in the optimal answer since it is the shortest substring meeting these constraints the number of letters on each prefix of it excluding the substring itself is greater than the number of dots so we can instead skip the first letter and try applying this transition from so this case is handled And skipping any dots from this shortest substring is also suboptimal since we have to get rid of the character ,0
184,You are the head of a large enterprise people work at you and is odd i e is not divisible by You have to distribute salaries to your employees Initially you have dollars for it and the th employee should get a salary from to dollars You have to distribute salaries in such a way that the median salary is To find the median of a sequence of odd length you have to sort it and take the element in the middle position after sorting For example the median of the sequence is the median of the sequence is It is guaranteed that you have enough money to pay the minimum salary i e You have to answer test cases ,In this problem we have to calculate the number of positions such that if we change the type of the bracket at this position then the obtained bracket sequence will become regular Let s calculate the balance of each prefix of the bracket sequence and store it in the array Just iterate from left to right over the string and if the current bracket is opening then increase the current balance by one otherwise decrease it by one For each prefix let s also calculate whether it can be a prefix of a regular bracket sequence RBS and store it in the array The prefix of length can be the prefix of RBS if and only if the prefix of length can be the prefix of RBS and Let s calculate the same arrays for all suffixes and call they and correspondingly but now the closing bracket will increase the balance by one and the opening will decrease it by one and we consider the characters from right to left Now if we have these arrays let s iterate over all positions in the initial bracket sequence If we now at the position then let s do the following things firstly if or then skip this position Otherwise if the current bracket is opening then we have to increase the answer if and only in this case the bracket sequence will become regular And if the current bracket is closing then we have to increase the answer if ,0
185,Berland regional ICPC contest has just ended There were participants numbered from to who competed on a problemset of problems numbered from to Now the editorial is about to take place There are two problem authors each of them is going to tell the tutorial to of the problemset The authors choose the segment of consecutive tasks for themselves independently of each other The segments can coincide intersect or not intersect at all The th participant is interested in listening to the tutorial of all consecutive tasks from to Each participant always chooses to listen to only the problem author that tells the tutorials to the maximum number of tasks he is interested in Let this maximum number be No participant can listen to both of the authors even if their segments don t intersect The authors want to choose the segments of consecutive tasks for themselves in such a way that the sum of over all participants is maximized ,Consider some participant s segment and one of the author s segment How does the length of intersection change when you move from left to right It first increases until the centers of both segments coincide that s the easiest to notice on the segments of the same length and then decreases The increase is totally symmetrical to the decrease With that idea you can conclude that the author s segment whose center is the closest to the center of participant s segment has the larger intersection length Let s sort the participants segments by their center You can see that the first author will be optimal for the prefix of the segments and the second author for the remaining suffix So you can just iterate over the length of the prefix and update the answer with all options Overall complexity ,1
186,You are given an array You can perform the following operation any number of times Choose a pair of two neighboring equal elements if there is at least one such pair Replace them by one element with value After each such operation the length of the array will decrease by one and elements are renumerated accordingly What is the minimum possible length of the array you can get ,The main solution is dynamic programming let for every possible dish be the minimum cost to assemble a prefix of a dinner ending with the dish here can be a dish of any type first course second course drink or dessert Then the answer to the problem is the minimum value among all desserts The number of transitions in this dynamic programming is too big since for example when transitioning from first courses to second courses we need to check options To speed this up we need some sort of data structure built over the values of for all first courses that allows to recalculate for a second course quickly There are two main approaches to this build any version of RMQ over the values of dynamic programming for the first courses Then when we want to calculate the answer for some second course sort all types of first courses which don t go well with it and make several RMQ queries to find the minimum value over all non forbidden first courses store all values of in a data structure that supports adding an element deleting an element and finding the minimum element this DS should allow duplicate elements as well When we want to calculate the answer for some second course remove all values of corresponding to the first courses that don t go well with it from the data structure query the minimum in it and insert the removed elements back The same approach can be used to advance from second courses to drinks and from drinks to desserts you can even use the same code in a for loop with iterations so the resulting solution is actually short and simple ,0
187,Vasya has got an array consisting of integers and two integers and in addition All numbers in the array are either between and inclusive or equal to The array is good if there is no segment of consecutive numbers Vasya will replace each with some number from to inclusive in such a way that the resulting array is good Tell him the number of ways to do this replacement Since the answer may be large print it modulo ,Now we need to quickly find for a given balance value on the prefix the number of matching left boundaries The boundary is suitable if the balance on the boundary is comparable modulo to the current balance and the current balance is less than the balance on the boundary since we need the balance on the segment to be non positive That is we need to be able to find a number of numbers for each value of the balance that is not less than ours This can be done either by data structure or notice that the balance takes only different values then you can find the number of numbers not less on the prefix for ,0
188,Recall that a permutation of length is an array where each element from to occurs exactly once For a fixed positive integer let s define the cost of the permutation of length as the number of indices such that For example if and then the cost of such a permutation is because and Your task is the following one for a given value find the permutation of length and the value with maximum possible cost over all ways to choose the permutation and If there are multiple answers then print any of them ,Let s consider the following function minimum index such that there is a substring of string of length consisting of only characters and or and If this function has asymptotic then we can solve problem for Now let s precalculate two array and is equal the maximum integer such that substring consist only characters and is equal the maximum integer such that substring consist only characters and Also let s precalculate the arrays and of size contain all positions such that substring consist only characters and and or contain all positions such that substring consist only characters and and or After that let s solve problem for some Suppose that now we already processed first elements of If or then we increase the answer and change Otherwise we have to find the minimum element denote this element as in or such that If there is no such element then we found the final answer Otherwise let s increase answer and change and continue this algorithm ,0
189,You are given segments on a number line numbered from to The th segments covers all integer points from to and has a value You are asked to select a subset of these segments possibly all of them Once the subset is selected it s possible to travel between two integer points if there exists a selected segment that covers both of them A subset is good if it s possible to reach point starting from point in arbitrary number of moves The cost of the subset is the difference between the maximum and the minimum values of segments in it Find the minimum cost of a good subset In every test there exists at least one good subset ,At first it doesn t matter if some season has more than episodes so we can set Let s maintain next invariant when we proceed th season we will have only seasons containing the episodes with indices Then the number of pairs is just number of seasons with index One of the ways to maintain this invariant is the following for each number of episodes store a list with indices of seasons with exactly episodes Then after proceeding of th season just erase all seasons with exactly episodes Maintaining seasons and counting them can be done by BIT with zeros and ones Finally notice that we counted each pair twice and also counted the pairs so we must subtract the number of pairs where and divide the result by two ,0
190,Your company was appointed to lay new asphalt on the highway of length You know that every day you can either repair one unit of the highway lay new asphalt over one unit of the highway or skip repairing Skipping the repair is necessary because of the climate The climate in your region is periodical there are days when the weather is good and if you lay new asphalt these days it becomes high quality pavement after that the weather during the next days is bad and if you lay new asphalt these days it becomes low quality pavement again good days bad days and so on You can be sure that you start repairing at the start of a good season in other words days are good You don t really care about the quality of the highway you just want to make sure that will have high quality pavement For example if the then at least units of the highway should have high quality if then at least units should have high quality What is the minimum number of days is needed to finish the repair of ,There are two conditions that should be met according to the statement On the one hand we should repair the whole highway so we must spend at least days to do it On the other hand at least half of it should have high quality pavement or at least units should be laid at good days How to calculate the minimum number of days name it as for the second condition to meet Note that the first days can be represented as several maybe zero blocks of days where exactly days in each block are good and some remaining days The because will not be minimum otherwise There are plenty of ways to calculate One of them is the following Firstly let s calculate the number of cycles we need Now if we just add it since it s exactly the or But if we added to last block and should subtract it or The answer is ,1
191, You are given an sequence of form which consist of blocks of all consecutive positive integers written one after another The first block consists of all numbers from to the second one from to the third one from to the th block consists of all numbers from to So the first elements of the sequence are Elements of the sequence are numbered from one For example the st element of the sequence is the rd element of the sequence is the th element of the sequence is the th element is the th element of the sequence is Your task is to answer independent queries In the th query you are given one integer Calculate the digit at the position of the sequence ,Let s process the boxes from left to right Consider the first box If it has a lid then you can just add the number of magazines in it to the answer and forget about this box To be exact proceed to solve the problem with the first box removed If it doesn t have a lid then look at the next box If it doesn t have a lid too then this box can never be covered Remove it and proceed further If the next box has a lid then look at the next one Again if it doesn t have a lid then these two first boxes are solved independently of everything else You can cover exactly one of them Choose the bigger one and remove them both To propagate the argument let s derive a pattern First there s a box without a lid Then some number of boxes with lids in a row Then a box without a lid again Among the first box and the box with lids you can choose exactly one to not be covered However that can be any one of them The best box to be left uncovered is the one with the smallest number of magazines in it Thus the solution is the following As long as the first box has a lid keep removing the first box and adding it to the answer Then as long as there are boxes left take the first box and the largest number of consecutive boxes with lids after it that number might be zero On that segment find the minimum value and the sum Add the sum minus the minimum to the answer remove the entire segment The removals can be done explicitly with a queue or just a reversed vector or implicitly with maintaining a pointer to the first non removed box Overall complexity ,0
192,You are given one integer Recall that a permutation of length is an array consisting of distinct integers from to in arbitrary order For example is a permutation of length but is not a permutation appears twice in the array and is also not a permutation but there is in the array Your task is to find a permutation of length that there is no index such that so for all from to the condition should be satisfied You have to answer independent test cases If there are several answers you can print any It can be proven that the answer exists for each ,There are many possible solutions One of them is just to print 2 3 ldots n 1 ,1
193,There is a square field of size in which two cells are marked These cells can be in the same row or column You are to mark two more cells so that they are the corners of a rectangle with sides parallel to the coordinate axes For example if and a rectangular field looks like this there are asterisks in the marked cells Then you can mark two more cells as followsIf there are several possible solutions then print any of them ,Suppose we ve built the graph and chosen any simple cycle Due to the nature of the graph any simple cycle right part is part of one of the chains So let s for each chain calculate the longest simple path with its right part on this chain and denote it as Obviously Now let s look at chain If we go along the cycle in both ways we will step to vertices and of the previous chain If then we closed cycle and it s the only possible cycle so Otherwise we can either go from and and meet each other closing the cycle with part of the th chain between th and th vertices this part has edges and our cycle will have length But if we decide to go in different ways then we will meet the first and the last vertices of the th chain After that we ll go to the th and the th vertices of th chain and will make almost the same choice But instead of recurrently solving the same problem we can note that in fact we took a cycle that ends at the th chain erased the part between vertices and and merged it with our th chain part so the length of this merged cycle will be equal to Since we maximize we just choose what part or is longer and take it As a result we can iterate from left to right calculate all and print the maximum among them ,0
194,Polycarp wants to cook a soup To do it he needs to buy exactly liters of water There are only two types of water bottles in the nearby shop liter bottles and liter bottles There are infinitely many bottles of these two types in the shop The bottle of the first type costs burles and the bottle of the second type costs burles correspondingly Polycarp wants to spend as few money as possible Your task is to find the minimum amount of money in burles Polycarp needs to buy exactly liters of water in the nearby shop if the bottle of the first type costs burles and the bottle of the second type costs burles You also have to answer independent queries ,If there are two elements with the same value then the answer is because neither of these values is less than the other Otherwise the answer is since we can just sort the array The time complexity is or depending on the implementation ,0
195,You are given a matrix consisting of rows and columns The th cell of the th row contains an integer First you have to color each row of the matrix either red or blue in such a way that and Then you have to choose an integer and cut the colored matrix in such a way that the first columns become a separate matrix the matrix and the last columns become a separate matrix the matrix The coloring and the cut are called if two properties hold every red cell in the left matrix contains an integer greater than every blue cell in the left matrix every blue cell in the right matrix contains an integer greater than every red cell in the right matrix Find any perfect coloring and cut or report that there are none ,Imagine you fixed some cut and then colored one row red Which rows can now be colored red or blue so that the condition on the left matrix is satisfied If the row has at least one number greater or equal than the numbers in the red row then the row must be red Otherwise it can be either red or blue However imagine a weaker condition Let s look only at the first cell in each row Sort the rows by the first cell in them Similarly if a row is colored red all the rows that are further in the sorted order should also be red because they already have a greater or equal number in them It implies that after you sort the rows the only possible colorings are color some prefix of the rows in blue and the remaining suffix in red So there are possible colorings and possible cuts If we learn to check if they are perfect in we can get the solution in Turns out the condition all numbers in the submatrix should be greater than all numbers in the other submatrix is the same as the minimum in the first submatrix should be greater than the maximum in the second submatrix Thus you can first precalculate prefix and suffix minimums and maximums and check a coloring and a cut in Overall complexity per testcase ,1
196,An array is if both of the following two conditions meet there are and elements in the array equal to its minimum there are and elements in the array equal to its maximum For example the array has elements equal to its minimum st rd and th and elements equal to its maximum th and th Another example the array has elements equal to its minimum and elements equal to its maximum Your task is to calculate the possible number of elements in a array ,Note that we never have a choice in what door should we open First we open the door with the same number as the key in our hand Then the door with the same number as the key behind the first opened door Finally the door with the same number as the key behind the second opened door If any of the first and second opened doors didn t have a key behind it then it s impossible Otherwise we open every door Let be the keys behind the corresponding doors Then we should check if is not zero and is not zero Overall complexity per testcase ,0
197,Yet another round on DecoForces is coming Grandpa Maks wanted to participate in it but someone has stolen his precious sofa And how can one perform well with such a major loss Fortunately the thief had left a note for Grandpa Maks This note got Maks to the sofa storehouse Still he had no idea which sofa belongs to him as they all looked the same The storehouse is represented as matrix Every sofa takes two neighbouring by some side cells No cell is covered by more than one sofa There can be empty cells Sofa is standing to the left of sofa if there exist two such cells and that is covered by and is covered by Sofa is standing to the top of sofa if there exist two such cells and that is covered by and is covered by Right and bottom conditions are declared the same way Also some sofa can be both to the top of another sofa and to the bottom of it The same is for left and right conditions The note also stated that there are sofas to the left of Grandpa Maks s sofa to the right to the top and to the bottom Grandpa Maks asks you to help him to identify his sofa It is guaranteed that there is no more than one sofa of given conditions Output the number of Grandpa Maks s sofa If there is no such sofa that all the conditions are met for it then output ,Coordinates don t exceed so it s possible to use sweep line method to solve the problem Let s calculate value separately for each side I will show the algorithm for left side and all the others will be done similarly Let be the number of sofas which has smaller of their coordinates less than or equal to To count that let s firstly increment by one for all sofas and then proceed from left to right and do Now will represent number of sofas to the left of the current one but the sofa itself can also be counted You need to decrement the result by one if The same is for top value but with coordinates insted of For the right and bottom values you should calculate and Then take and The only thing left is to compare values of each sofa with given ones and find the suitable sofa Overall complexity ,1
198,Polycarp bought a new expensive painting and decided to show it to his friends He hung it in his room of his friends entered and exited there one by one At one moment there was no more than one person in the room In other words the first friend entered and left first then the second and so on It is known that at the beginning before visiting friends a picture hung in the room At the end after the th friend it turned out that it disappeared At what exact moment it disappeared there is no information Polycarp asked his friends one by one He asked each one if there was a picture when he entered the room Each friend answered one of three response encoded with response encoded as response is encoded with Everyone except the thief either doesn t remember or told the The thief can say anything any of the three options Polycarp cannot understand who the thief is He asks you to find out the number of those who can be considered a thief according to the answers ,Find all segments of asterisks in the string Let there be of them and the number of asterisks in them be That tells us that the th segment of asterisks can be replaced with at most letters b Notice that we can compare two strings lexicographically using just the number of letters b that replace each of segments of asterisks Let that sequence for some string be and that sequence for some string be Then if and only if That is there exists such position that The proof is trivial So we can actually look at the sequence as some kind of number in a mixed base The lowest digit can be of one of values from to The second lowest one of And so on Then comparison of two strings is the same as comparison of these two mixed base numbers Thus the task is to convert number to this mixed base Turns out it s not that hard In base for example the lowest digit can be determined as the remainder of the number of dividing by Here it will be the remainder of dividing by After that divide and floor the number and proceed to the next digit After steps are done the digits of that mixed base number tell exactly how many letters b should replace each segment of asterisks Overall complexity per testcase to recover the string to print it ,0
199,Magnus decided to play a classic chess game Though what he saw in his locker shocked him His favourite chessboard got broken into pieces each of size by is And what s even worse some squares were of wrong color th square of the th row of th piece of the board has color being black and being white Now Magnus wants to change color of some squares in such a way that he recolors minimum number of squares and obtained pieces form a valid chessboard Every square has its color different to each of the neightbouring by side squares in a valid board Its size should be by You are allowed to move pieces but ,Imagine you fixed some cut and then colored one row red Which rows can now be colored red or blue so that the condition on the left matrix is satisfied If the row has at least one number greater or equal than the numbers in the red row then the row must be red Otherwise it can be either red or blue However imagine a weaker condition Let s look only at the first cell in each row Sort the rows by the first cell in them Similarly if a row is colored red all the rows that are further in the sorted order should also be red because they already have a greater or equal number in them It implies that after you sort the rows the only possible colorings are color some prefix of the rows in blue and the remaining suffix in red So there are possible colorings and possible cuts If we learn to check if they are perfect in we can get the solution in Turns out the condition all numbers in the submatrix should be greater than all numbers in the other submatrix is the same as the minimum in the first submatrix should be greater than the maximum in the second submatrix Thus you can first precalculate prefix and suffix minimums and maximums and check a coloring and a cut in Overall complexity per testcase ,0
200, You are given a sequence consisting of positive integers Let s define a as the sequence consisting of distinct elements let these elements are and can be equal and is as follows There are integers greater than or equal to For example sequences and are but and are not Your task is to choose the maximum by length of that is a You have to answer independent test cases Recall that the sequence is a a subsequence of the sequence if can be derived from by removing zero or more elements without changing the order of the remaining elements For example if then possible subsequences are and but not and ,Let s precalculate for each number indexed the array of length where is the number of occurrences of the number on the prefix of length This can be done with easy dynamic programming just compute prefix sums Also let be and it s meaning is the number of occurrences of the number on the segment indexed Firstly let s update the answer with we can always take all occurrences of the same element as the answer Then let s iterate over all possible segments of the array Let the current segment be Consider that all occurrences of the element in the middle block belong to Then we can just take the most frequent number on this segment We also have to choose the number for the first and the last blocks It is obvious that for the number the maximum amount of such numbers we can take is So And we can update the answer with Time complexity where is the size of alphabet the maximum value of ,1
201,Given an array of length and an integer find the number of indices such that the subarray with length with length has the following property If you multiply the first element by the second element by and the st element by then this subarray is sorted in strictly increasing order More formally count the number of indices such that ,Note that is the same as since we can divide by This means that we only need to check whether for each pair of adjacent elements Let s consider as an example Note that and so if you multiply the first element by the second by and the third by the array is sorted So let s make a new array where if and otherwise Then we know that the whole chain of inequalities holds true if all values in a subarray of length in have all their values equal to For example if Say Then works since is sorted We can write this as and This is equivalent to since and since So the problem is equivalent to counting the number of subarrays of length in whose elements are all equal to There are many ways to do this For example you can compute prefix sums and then find the sum of all subarrays of length and count the number whose sum is The model solution uses a sliding window and updates the number of ones in the current subarray as we move from left to right Time complexity is ,1
202,Polycarp is playing a new computer game This game has stones in a row The stone on the position has integer power Each turn Polycarp can destroy either stone on the first position or stone on the last position in other words either the leftmost or the rightmost stone When Polycarp destroys the stone it does not exist any more Now Polycarp wants two achievements He gets them if he destroys the stone with the power and the stone with the power Help Polycarp find out what is the minimum number of moves he should make in order to achieve his goal For example if and then Polycarp could make the following moves Destroy the leftmost stone After this move Destroy the rightmost stone After this move Destroy the leftmost stone After this move Polycarp destroyed the stones with the greatest and least power so he can end the game Please note that in the example above you can complete the game in two steps For example Destroy the leftmost stone After this move Destroy the leftmost stone After this move Polycarp destroyed the stones with the greatest and least power so he can end the game ,The first solution is some kind of a straight forward understanding the problem Let s do binary search on the answer So our problem is to find the smallest such that the suffix of the array starting from the position can be packed in boxes It is easy to see that if we can do it for some then we always can do it for And to find the answer for the fixed we have to simulate the process described in the problem statement starting from the position Okay this is solution The second solution is more interesting than the first one The approach is to reverse the initial array simulate the process from the first position of reversed array and then all the objects we can pack are in the best answer and there is no better answer at all Why it works Let s take a look on the last box in the best answer if we will go from left to right in the initial array Let objects in this box be What do we see So all these objects are fit in the last box obviously Now if we will iterate over objects from right to left these objects will fit also It means that we cannot do worse by such a transform reversing at least for the last box But what will happen if we can put some of the previous objects in this box Well it will not make worse for this box but what about next boxes previous boxes in straight notation Let objects in the penultimate box be What do we see These objects are fit in this box obviously again What will happen if we will put in the last box one or more objects of this box Then the border of objects which we will put in it will not increase because we the number of object in this box So we can see that for previous boxes this condition is also satisfied So we can solve the problem with this approach Time complexity of this solution is ,0
203,In some social network there are users communicating with each other in groups of friends Let s analyze the process of distributing some news between users Initially some user receives the news from some source Then he or she sends the news to his or her friends two users are friends if there is at least one group such that both of them belong to this group Friends continue sending the news to their friends and so on The process ends when there is no pair of friends such that one of them knows the news and another one doesn t know For each user you have to determine what is the number of users that will know the news if initially only user starts distributing it ,Let s use dynamic programming to solve the problem Let be the number of correct partitions for the long integer It s easy to see that if we have two big integers without leading zeroes we know the lengths of these integers and these lengths are not equal then we can determine which integer is greater in We will calculate the answers in the following order Suppose we want to calculate Let be the minimum position such that the number meets the following condition Let be the maximum position such that the number meets the following condition Initially let s consider will be less if will be less if To determine which of the numbers and is greater let s calculate z function for the string where is any character that doesn t occur in and After calculating z function we can easily find the first non equal character in and and this character will determine which number is greater To compare and we can act the same All that s left is to set to the sum of values from to This can be done by maintaining suffix sums There is a corner case which applies when If then because we cannot afford any leading zeroes Otherwise ,0
204,HDD hard drives group data by sectors All files are split to fragments and each of them are written in some sector of hard drive Note the fragments can be written in sectors in arbitrary order One of the problems of HDD hard drives is the following the magnetic head should move from one sector to another to read some file Find the time need to read file split to fragments The th sector contains the th fragment of the file Note different sectors contains the different fragments At the start the magnetic head is in the position that contains the first fragment The file are reading in the following manner at first the first fragment is read then the magnetic head moves to the sector that contains the second fragment then the second fragment is read and so on until the th fragment is read The fragments are read in the order from the first to the th It takes time units to move the magnetic head from the sector to the sector Reading a fragment takes no time ,You are given the permutation f Let s build another permutation p in the following way pfi i So the permutation p defines the number of sector by the number of fragment The permutation p is called inverse permutation to f and denoted f 1 Now the answer to problem is Complexity O n ,1
205,A sequence of numbers is called if it contains all numbers from to exactly once For example the sequences and are permutations but and are not For a given number you need to make a permutation such that two requirements are satisfied at the same time For each element at least one of its neighbors has a value that differs from the value of by one That is for each element at least one of its neighboring elements standing to the left or right of must be or the permutation must have no fixed points That is for every must be satisfied Let s call the permutation that satisfies these requirements For example let Then is a permutation since to the right of is to the left of is to the right of is to the left of is for all is For a given positive integer output permutation of length or output if permutation of length does not exist ,At first time limit was not that tight for the problem We didn t want any sqrt bitset or straight up solution to pass and it s close to none to pass Jury solution works faster than twice the time limit so we decided 6 seconds is alright The task is purely about implementation You renumerate numbers in permutations so that the queries are and then have the structure to make update in point and sum on rectangle Renumeration in my case was making the first permutation into identity one and changing the numbers in second appropriately You can choose the structure you want I ll tell about the one I use when the queries are offline For online the common technique is having BITs each with treap in it ordered set template from pbds is usually enough For offline you can precalculate the values to fall into each BIT beforehand and do BIT on these values inside Preprocess all the update and get queries adding into all the BITs will fall into Then sort them and leave only unique occurrences Overall complexity ,0
206,There are products in the shop The price of the th product is The owner of the shop wants to equalize the prices of all products However he wants to change prices smoothly In fact the owner of the shop can change the price of some product in such a way that the difference between the old price of this product and the new price is at most In other words the condition should be satisfied is the absolute value of He can change the price for each product Note that he can leave the old prices for some products The new price of each product should be positive i e should be satisfied for all from to Your task is to find out the possible price of productts with the restriction that for all products the condiion should be satisfied where is the old price of the product and is the same new price of all products or report that it is impossible to find such price You should answer independent queries ,It is very intuitive that the maximum price we can obtain is where is the minimum value in the array For this price we should check that we can change prices of all products to it It can be done very easily we can just check if each segment covers the point But this is not necessary because if we can change the price of the maximum to this value then we can change each price in the segment to this value So we just need to check that and if it is then print otherwise print ,1
207,Polycarp has guessed three positive integers and He keeps these numbers in secret but he writes down four numbers on a board in arbitrary order their pairwise sums three numbers and sum of all three numbers one number So there are four numbers on a board in random order and You have to guess three numbers and using given numbers Print three guessed integers in any order Pay attention that some given numbers and can be equal it is also possible that ,Let and Then we can construct the following answer and Because all numbers in the answer are positive we can assume that the maximum element of is So let s sort the input array consisting of four elements and just print and ,1
208,You are given a string consisting of letters each letter is either or The letters in the string are numbered from to is a continuous substring of letters from index to of the string inclusive A string is called balanced if the number of letters in it is equal to the number of letters For example strings and are balanced and strings and are not Find any non empty balanced substring of string Print its and If there is no such substring then print ,At first let s decrease all elements by one and solve the problem in indexation The first observation is that we can solve the problem independently for each column Consider the column It consists of elements Now consider some element We don t need to replace it with some other number in only one case if we shift the column such that will coincide with the corresponding number of the required matrix Obviously there is only one cyclic shift of the column that can rid us of replacing So the idea is the following let s calculate for each cyclic shift the number of elements we don t need to replace if we use this cyclic shift Let for the th cyclic shift indexed it be Then the answer for this column can be taken as How to calculate for the element the corresponding cyclic shift Firstly if is modulo operation then there is no such cyclic shift Otherwise let If then there is such cyclic shift can be greater than or equal to because can be up to and the number of such cyclic shift is So let s increase and continue After considering all elements of this column take the answer by the formula above and go to the next column Time complexity ,0
209,Alice got an array of length as a birthday present once again This is the third year in a row And what is more disappointing it is overwhelmengly boring filled entirely with zeros Bob decided to apply some changes to the array to cheer up Alice Bob has chosen changes of the following form For some integer numbers and he chooses an arbitrary position and for every adds to the value of the th cell is the distance between positions and i e where is an absolute value of For example if Alice currently has an array and Bob chooses position for and then the array will become Note that Bob can t choose position outside of the array that is smaller than or greater than Alice will be the happiest when the elements of the array are as big as possible Bob claimed that the arithmetic mean value of the elements will work fine as a metric What is the maximum arithmetic mean value Bob can achieve ,Judging by constraints you can guess that the greedy approach is the right one Firstly let s transition from maximizing the arithmetic mean to the sum it s the same thing generally Secondly notice that each is being added to each element regardless of the chosen position Finally take a look at a function total sum obtained by applying change with to position and notice that it is non strictly convex Its maximum or minimum values can always be found in one of these positions method of rounding doesn t matter and Thus the solution will look like this for positive you apply the change to position and for non positive to position The impact of the change can be calculated with the formula of the sum of arithmetic progression Also you should either do all of your calculations in long double 10 byte type or maintain sum in long long you can estimate it with so it fits and divide it by in the end then double will work Overall complexity ,1
210,There is a grid consisting of rows and columns The rows are numbered from to from top to bottom The columns are numbered from to from left to right The robot starts in a cell In one second it can perform either of two actions move into a cell adjacent by a side up right down or left remain in the same cell The robot is not allowed to move outside the grid Initially all cells except for the cell are locked Each cell contains a value the moment that this cell gets unlocked The robot can only move into a cell if at least seconds have passed before the move The robot should visit all cells cell is considered entered at the start It can finish in any cell What is the fastest the robot can achieve that ,At first notice that if there exists a value for the second shop then the value divisible by also exists For any you can round it up to the nearest multiple of That won t change the price for the second shop and only increase the price for the first shop You can also guess that if there exists a value for the first shop then the value with modulo also exists exactly donut on top of some number of full boxes Following the same logic the second shop needs an entire new box and the first shop needs only an extra donut So let s take a look at the smallest values of two kinds this value is valid for the second shop if one box is cheaper than donuts in the first shop Otherwise no matter how many boxes will you take they will never be cheaper than the corresponding number of donuts this value is valid for the first shop if one donut is cheaper than one box in the second shop Apply the same idea otherwise no value for the first shop is valid Overall complexity per testcase ,0
211,You are given a graph consisting of vertices and edges It is not guaranteed that the given graph is connected Some edges are already directed and you can t change their direction Other edges are undirected and you have to choose some direction for all these edges You have to direct undirected edges in such a way that the resulting graph is directed and acyclic i e the graph with all edges directed and having no directed cycles Note that you have to direct undirected edges You have to answer independent test cases ,Let be the answer for the prefix of consisting of first characters How can we update from Suppose that we try to represent the substring from index to index indexed by writing it as some other string times Then this string has to be the smallest period of the substring and where is the length of the smallest period The smallest period of some string can be calculated as follows compute prefix function for and if is divisible by is the last value of prefix function then the length of the smallest period is if not then the length of the smallest period is This allows us to write a solution with complexity To improve it to we can use the fact that when we compute prefix function for some string we compute it for every prefix of this string So to obtain all values of we need in our solution we only need to compute prefix functions for every suffix of ,0
212,You are given a permutation of length Also you are given foe pairs Your task is to count the number of different intervals that do not contain any foe pairs So you shouldn t count intervals that contain at least one foe pair in it the positions and order of the values from the foe pair are not important Consider some example and foe pairs are The interval is incorrect because it contains a foe pair The interval is also incorrect because it contains two foe pairs and But the interval is correct because it doesn t contain any foe pair ,Let s precompute for each value its position in permutation It s easy to do in linear time Consider some foe pair we may assume Let s store for each value the leftmost position such that is a foe pair Denote that value as Now let s iterate over the array from right to left and maintain the position of the maximal correct interval with the left end in the current position To maintain the value we should simply take the minimum with the value And finally we should increment the answer by the value ,1
213,You are given a bracket sequence consisting of opening and closing brackets A bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters and between the original characters of the sequence For example bracket sequences are regular the resulting expressions are and and are not You can change the type of some bracket It means that if then you can change it to and vice versa Your task is to calculate the number of positions such that if you change the type of the th bracket then the resulting bracket sequence becomes ,Let s declare a function which takes number as a string and erases minimal number of digits in substring from nd to last character to obtain beautiful number Note that if the answer for given string exists then this function will erase no more than digits If the number is divisible by then sum of its digits is also divisible by So here are the only options for the function Sum of digits is already equal to modulo Thus you don t have to erase any digits There exists such a digit that equals sum modulo Then you just have to erase this digit All of the digits are neither divisible by nor equal to sum modulo So two of such digits will sum up to number which equals sum modulo Let positions of non zero numbers be Then you can easily see that its enough to check only three function outputs on substrings We imply that all digits to the left of the taken non zero digit are erased As we can erase no more than digits these options will cover all the cases If there exists no answer for any of substrings than you need to check if the number contains it will be answer in that case If there is no then answer is Otherwise the answer is the function output of maximal length Overall complexity ,0
214,Polycarp likes to play with numbers He takes some integer number writes it down on the board and then performs with it operations of the two kinds divide the number by must be divisible by multiply the number by After each operation Polycarp writes down the result on the board and replaces by the result So there will be numbers on the board after all You are given a sequence of length the numbers that Polycarp wrote down This sequence is given in arbitrary order i e the order of the sequence can mismatch the order of the numbers written on the board Your problem is to rearrange reorder elements of this sequence in such a way that it can match possible Polycarp s game in the order of the numbers written on the board I e each next number will be exactly two times of the previous number or exactly one third of previous number It is guaranteed that the answer exists ,First observe that each of the players has only m options for their path which column to go down in Let s consider a Bob s response to a strategy chosen by Alice The easiest way to approach that is to look at the picture of the Alice s path The path clearly separates the field into two independent pieces suffix of the first row and the prefix of the second row Bob can t grab the coins from both of them at once However he can grab either of them fully So the optimal path for him will be one of these two options You can precalculate some prefix sums and become able to get the Bob s score given the Alice s path Alice has m possibly paths so you can iterate over them and choose the minimum answer However prefix sums are not required since you can quickly recalculate both needed sums while iterating over the Alice s column to go down in Overall complexity O m per testcase ,0
215,You are given segments on a number line numbered from to The th segments covers all integer points from to and has a value You are asked to select a subset of these segments possibly all of them Once the subset is selected it s possible to travel between two integer points if there exists a selected segment that covers both of them A subset is good if it s possible to reach point starting from point in arbitrary number of moves The cost of the subset is the difference between the maximum and the minimum values of segments in it Find the minimum cost of a good subset In every test there exists at least one good subset ,Take a look at the condition for a good subset The major implication it makes is that every point even non integer of the segment 1 m should be covered by at least one segment If some point isn t then there is no way to jump across the gap it produces At the same time this condition is enough to have a path since for every half integer point 0 5 1 5 and so on there exists a segment that covers it So you can take that segment to go from 1 to 2 then from 2 to 3 and so on Thus we are asked to select a subset of segments that covers the entire segment 1 m in its union The main prerequisite to the following solution is knowing the way to maintain the union of segments For now I can tell you that there is a data structure that allows you to add a segment remove a segment and query the length of the current union Let s continue with making some observations on the cost function If you fix the minimum and the maximum value you are free to select all segments that have their value in between That allows us to transition from selecting a subset of segment to an interval if you sort the segments by their weight If you fix only minimum then the required maximum should be as small as possible However if some value suffices as a maximum then any value greater than it also suffices since it only adds extra segments to the subset This makes the function on the maximum monotonous So the binary search applicable You could iterate over the minimum and binary search the maximum However it s not too clear how to make a check function You would need to find a union of some interval of segments quickly I don t really know a way to do that so let s try something different Instead let s forget about binary search and try to reach a two pointers solution Let f x be the smallest possible maximum given the fixed minimum is x We want f x 1 to be greater than or equal than f x for two pointers to be applicable That condition indeed holds Imagine if f x 1 is smaller than f x So there exists some optimal subset for x 1 Add all segments with weight x to that subset That brings the minimum to x However it doesn t change the maximum so f x is at least equal to f x 1 what contradicts the assumption Finally the solution comes up to the following Iterate over the minimum value x while maintaining f x When going from x to x 1 keep increasing the value of f until the union of the segments is exactly m Going from x to x 1 and increasing the value of f is actually removing some segments and adding some segments to the data structure The data structure that helps us with that is a segment tree The i th leaf of the tree holds the number of segments that cover the interval i i 1 Add remove segment makes it add subtract on a range The union is full if the there are no intervals that are covered by zero segments Thus let s store the minimum of the subtree in every intermediate node If the minimum on the tree is above zero then the current subset is good Instead of applying two pointers on the values of the segments let s apply them on the sorted segments themselves That makes moving the pointer exactly one update to the segtree Overall complexity O n log n n log m ,1
216,You are given points on a line with their coordinates Find the point so the sum of distances to the given points is minimal ,Let s consider each kilometer of the journey separatedly and calculate the expected value of its difficulty and then use linearity of expectation to obtain the answer The difficulty of each kilometer depends on the rest site right before it or if there were no rest sites on the distance from Moscow to this kilometer So when considering the difficulty of th kilometer one indexed we may obtain a formula The denominator of the last summand is because it represents the situation where the last rest was in Moscow and its probability is exactly We can actually rewrite this as follows thus calculating all that we need in linear time ,0
217,A permutation of size is an array of size such that each integer from to occurs exactly once in this array An inversion in a permutation is a pair of indices such that and For example a permutation contains inversions You are given a permutation of size However the numbers on some positions are replaced by Let the valid permutation be such a replacement of in this sequence back to numbers from to in such a way that the resulting sequence is a permutation of size The given sequence was turned into a valid permutation randomly with the equal probability of getting each valid permutation Calculate the expected total number of inversions in the resulting valid permutation It can be shown that it is in the form of where and are non negative integers and Report the value of ,Let s break the problem into four general cases Case 1 Inversions between two unknown numbers Each pair of numbers can either be or inversion or not and the number of permutations for both cases is the same Thus the expected value of that is Case 2 and 3 Inversions between the known and unknown number Let s check the case with left number being unknown and right being known The opposite will be done similarly For each known number calculate the number of unknowns to the left of it and the total number of unknowns greater than it Then you ll need to put a greater number out of all possible to make an inversion Add to the answer Case 4 Inversions between two known numbers Just calculate that number ignoring all and add it to answer Overall complexity for the lase case all others are done in ,1
218,Mikhail walks on a Cartesian plane He starts at the point and in one move he can go to any of eight adjacent points For example if Mikhail is currently at the point he can go to any of the following points in one move If Mikhail goes from the point to the point in one move and and then such a move is called a Mikhail has For the th query Mikhail s target is to go to the point from the point in moves Among all possible movements he want to choose one with the maximum number of Your task is to find the maximum number of or find that it is impossible to go from the point to the point in moves Note that Mikhail visit any point any number of times even the destination point ,There are several cases in this problem If then let s swap them Let be the modulo operator Firstly if then let s decrease and by one Otherwise if let s decrease by one and by two Now if then the answer is otherwise the answer is You can get more clear description of these cases if you will draw some cases on the paper ,1
219,Let s analyze a program written on some strange programming language The variables in this language have names consisting of to characters and each character is a lowercase or an uppercase Latin letter or a digit There is an extra constraint that the first character should not be a digit There are four types of operations in the program each denoted by one of the characters or Each line of the program has one of the following formats where and are valid variable names where and are valid variable names and op is an operation character The program is executed line by line and the result of execution is stored in a variable having the name If is never assigned in the program then the result will be equal to the value of before running the program Two programs are called equivalent if no matter which operations do characters and denote but obviously performing the same operation on the same arguments gives the same result and which values do variables have before execution of program the value of after running the first program is equal to the value of after running the second program the programs are executed independently You are given a program consisting of lines Your task is to write a program consisting of minimum possible number of lines that is equivalent to the program you are given ,Because if we write down all characters of in order of both permutations and this string will be sorted it is obvious that these two strings are equal Let s try the maximum possible number of distinct characters and then replace extra characters with How to find the maximum number of distinct characters Let s iterate over all values of and in order from left to right If we staying at the position now let s add to the set the value and to the set the value And when these sets become equal the first time let s say that the block of positions such that values are in the set right now have the same letter and then clear both sets We can see that this segment of positions is the minimum by inclusion set that can contain equal letters We don t need to compare sets naively and clear them naively you can see implementation details in author s solution If the number of such segments is less than then the answer is otherwise the answer is and we can fill the string with letters in order of these segments if the segment is then all characters of with indices has the same letter the first segment has the letter the second one has the letter and so on all segments after th has the letter Time complexity ,0
220,The game of Berland poker is played with a deck of cards of which are jokers players play this game is divisible by At the beginning of the game each player takes cards from the deck so each card is taken by exactly one player The player who has the maximum number of jokers is the winner and he gets the number of points equal to where is the number of jokers in the winner s hand and is the maximum number of jokers among all other players If there are two or more players with maximum number of jokers all of them are winners and they get points Here are some examples If one player gets jokers and plain card and another player gets jokers and plain cards then the first player is the winner and gets points Two players get plain cards and the other two players get jokers so both of them are winners and get points If the first player gets jokers the second player gets joker and plain cards and the third player gets jokers and plain card then the first player is the winner and he gets point Since there are no jokers everyone gets jokers everyone is a winner and everyone gets points Given and calculate the maximum number of points a player can get for winning the game ,In the constraints the problem can be solved by brute force we will go through the value for the height for the first place and then select suitable values for and Since we divide the remaining blocks equally between and If it turns out that then we try to decrease by and increase by 1 If we get the right answer output the heights and stop the process We will go through the value of in order of increasing ,0
221,You have letters letters letters You want to build a string of length from them obviously you cannot use the th letter more than times A string is called if there are no palindromic contiguous substrings of odd length greater than in it For example the string is not beautiful it has several palindromic substrings of odd length greater than for example Another example the string is Calculate the number of different strings you can build and print the answer modulo ,Write down all the numbers which appear exactly once let there be of them If is even put the first of them into the first multiset and put the other into the second multiset All the other numbers which appear more than once also go into the first multiset The only nice numbers will be the initial thus the answer is valid If is odd and there is no number to appear more than twice then the answer is as all the numbers to appear exactly twice don t change the difference of the amounts of the nice numbers at all If there is a number to appear more than twice let it be then let s firstly add of the numbers to appear exactly once to the first multiset add others of them to the second multiset Then the first occurrence of goes to the second multiset and all the other numbers go to the first multiset It s easy to notice that multisets will contain equal number of the nice numbers after all the partitioning ,0
222,Let be a string of lowercase Latin letters Its price is the sum of the indices of letters an integer between 1 and 26 that are included in it For example the price of the string is The string and the integer are given Remove the minimal number of letters from so that its price becomes less than or equal to and print the resulting string Note that the resulting string may be empty You can delete arbitrary letters they do not have to go in a row If the price of a given string is less than or equal to then nothing needs to be deleted and must be output Note that when you delete a letter from the order of the remaining letters is preserved For example if you delete the letter from the string you get ,The main idea is that it is always better to remove the most expensive symbol To do this quickly we will count all the symbols and remove them from the most expensive to the cheapest counting how many times we have removed each During the output we will skip the characters the number of times that we deleted ,1
223, There are kids each of them is reading a unique book At the end of any day the th kid will give his book to the th kid in case of the kid will give his book to himself It is guaranteed that all values of are distinct integers from to i e is a permutation The sequence doesn t change from day to day it is fixed For example if and then at the end of the first day the book of the st kid will belong to the th kid the nd kid will belong to the th kid and so on At the end of the second day the book of the st kid will belong to the th kid the nd kid will belong to the th kid and so on Your task is to determine the number of the day the book of the th child is returned back to him for the first time for every from to Consider the following example The book of the st kid will be passed to the following kids after the st day it will belong to the th kid after the nd day it will belong to the rd kid after the rd day it will belong to the nd kid after the th day it will belong to the st kid So after the fourth day the book of the first kid will return to its owner The book of the fourth kid will return to him for the first time after exactly one day You have to answer independent queries ,In this problem you just need to implement what is written in the problem statement For the kid the following pseudocode will calculate the answer indices of the array and its values are indexed pos p i ans 1while pos i ans 1 pos p pos ,1
224,You are given an array consisting of integers Your problem is to find such pair of indices that is minimum possible is the least common multiple of and minimum positive number such that both and are divisors of this number ,I ve heard about some very easy solutions with time complexity where is the maximum value of but I will describe my solution with time complexity where is the maximum number of divisors of A very good upper bound approximation of the number of divisors of is so my solution works in Firstly let s talk about the idea The main idea is the following for each number from to we want to find two minimum numbers in the array which are divisible by this number Then we can find the answer among all such divisors that have at least two multiples in the array Let s write a function which will try to add the number to all its divisors The easiest way to do it is iterate over all divisors in time and add it somehow But it is too slow Let s improve it somehow How can we skip numbers that aren t divisors of Let s build an Eratosthenes sieve I highly recommended one with time complexity because the sieve with time complexity is about twice slower on such constraints which will maintain the minimum divisor for each number from to the linear sieve builds this array automatically in its implementation Then we can factorize the number in and iterate over all its divisors using simple recursive function And the last thing I should notice this solution can give TLE and require some constant optimizations I recommended to use pair of integers or arrays of size two for each divisor and to add numbers using a few statements ,1
225,Consider some set of distinct characters and some string consisting of exactly characters where each character is present in You are given an array of integers You are allowed to perform the following move on the string Choose some valid and set Take the first characters of Take the last characters of Substitute the first characters of with the reversed Substitute the last characters of with the reversed For example let s take a look at and Reversed Thus the resulting is The move can be performed arbitrary number of times possibly zero Any can be selected multiple times over these moves Let s call some strings and equal if and only if there exists such a sequence of moves to transmute string to string For the above example strings and are equal Also note that this implies The task is simple Count the number of distinct strings The answer can be huge enough so calculate it modulo ,Let s take a look at any operation You can notice that each letter can only go from position to indexed Then doing some operation twice is the same as doing that operation zero times Now consider some set of operations sorted in increasing order Actually they do the following altogether Replace segment with the reversed segment and vice versa Then replace segment with the reversed segment and vice versa And continue until you reach the first pair Segment might also be included in the answer when the parity is right Moreover every subset of segments is achievable So for each segment you can either swap it or not Let s translate it to math language Let be the number of such pairs of strings and that Why is there such an order You want to consider only unique strings thus you need to pick exactly one of equal strings from each component Let it be the smallest one Then for each segment of the set you have pairs to choose from where is the length of that segment And that part of the formula is However the part covered by zero segments is left There are possible strings up there is actually a number of all pairs of strings of length plus the number of all pairs of equal strings of length divided by Overall complexity ,1
226,The Dogeforces company has employees Each employee except for lower level employees has at least subordinates Lower level employees have no subordinates Each employee except for the head of the company has exactly one direct supervisor The head of the company is a direct or indirect supervisor of all employees It is known that in Dogeforces each supervisor receives a salary strictly more than all his subordinates The full structure of the company is a secret but you know the number of lower level employees and for each pair of lower level employees the salary of their common supervisor is known if there are several such supervisors then the supervisor with the minimum salary You have to restore the structure of the company ,We can solve the problem recursively from the root to the leaves Let s maintain a list of leaf indices for the current subtree If the list size is equal to then we can stop our recursion Otherwise we have to find the value of the root of the current subtree and split all leaves between child nodes The root value is the maximum value of among all pairs belonging to a subtree since the current root has at least child nodes there is a pair of leaves for which the current root is the least common ancestor If the value of the least common ancestor of the leaves and is less than the value of the current root then and belong to the same child of the root Using this fact we can split all the leaves between the child nodes and then restore the subtrees for them recursively ,1
227,Monocarp plays a computer game called Goblins and Gnomes In this game he manages a large underground city of gnomes and defends it from hordes of goblins The city consists of halls and one directional tunnels connecting them The structure of tunnels has the following property if a goblin leaves any hall he cannot return to that hall The city will be attacked by waves of goblins during the th wave goblins attack the city Monocarp s goal is to pass all waves The th wave goes as follows firstly goblins appear in some halls of the city and pillage them Then goblins start moving along the tunnels pillaging all the halls in their path Goblins are very greedy and cunning so they choose their paths so that no two goblins pass through the same hall Among all possible attack plans they choose a plan which allows them to After goblins are done pillaging they leave the city If all halls are pillaged during the wave Monocarp loses the game Otherwise the city is restored If some hall is pillaged during a wave goblins are still interested in pillaging it during the next waves Before each wave Monocarp can spend some time preparing to it Monocarp doesn t have any strict time limits on his preparations he decides when to call each wave by himself but the longer he prepares for a wave the fewer points he gets for passing it If Monocarp prepares for the th wave for minutes then he gets points for passing it obviously if he doesn t lose in the process While preparing for a wave Monocarp can block tunnels He can spend one minute to If Monocarp blocks a tunnel while preparing for a wave it stays blocked during the next waves as well Help Monocarp to defend against all waves of goblins and get the maximum possible amount of points ,First of all let s try to solve the following problem given a DAG cover its vertices with the minimum number of vertex disjoint paths Solving this problem allows us to calculate the number of goblins that can pillage all of the halls when the tunnel network is fixed This problem is a fairly classical one since the number of vertices in each path is greater than the number of arcs in it exactly by we should take the maximum possible number of arcs into our paths So we can reduce this problem to bipartite maximum matching build a bipartite graph where each part consists of vertices and for every directed arc in the original graph connect the vertex of the left part to the vertex in the right part of the bipartite graph The maximum matching in this graph allows us to pick the maximum number of arcs into the paths of the original problem the matching ensures that each vertex has at most one chosen ingoing arc and at most one chosen outgoing arc so the paths are vertex disjoint Okay now we at least can check if the goblin wave can pillage all of the halls Let s say that the minimum number of goblins required to pillage the original city is Obviously in order to pass the th wave and waves after it we have to increase this number In one minute Monocarp can block all of the tunnels leading to some hall or out of some hall and in terms of our reduction to the bipartite matching problem it means that we remove all edges connected to some vertex of the bipartite graph Obviously in one minute we can increase by at most since is equal to the difference between and the maximum matching size It turns out that it s always possible to choose a vertex that belongs to all maximum matchings in the bipartite graph note that it doesn t work in non bipartite graphs but in our problem it doesn t matter For the proof of this fact you can check the last paragraph of the editorial So each minute Monocarp prepares for a wave he increases the maximum number of goblins he can repel by Now the solution splits into two much easier parts The first part is finding a sequence in which Monocarp blocks the tunnels so that each his action reduces the size of the maximum matching by Since the constraints are small even a naive approach in always iterate on the vertex we try to remove from the graph and check that removing it is possible by running Kuhn s algorithm is fast enough The second part is to choose when Monocarp calls waves of goblins and when he prepares for them this can be easily done with dynamic programming let be the maximum Monocarp s score if he has already passed waves and the current size of the maximum matching is The most naive implementation of this dynamic programming runs in so the whole solution works in We can improve it to though it is not needed under these constraints Instead of finding the vertices to remove from the bipartite graph one by one let s find all of them at once in Recall that the size of maximum matching in a bipartite graph is equal to the size of its minimum vertex cover and the minimum vertex cover can be reconstructed after finding the maximum matching If we remove a vertex from the minimum vertex cover the size of the minimum vertex cover of the remaining graph is reduced by so the size of the maximum matching is reduced by as well It means that we can always choose to remove a vertex from the minimum vertex cover we found By the way it also proves that it s always possible to remove a vertex from a bipartite graph so the size of the maximum matching decreases by obviously if it s not already ,1
228,Polycarp has of red and of blue candies Using them he wants to make gift sets Each gift set contains either red candies and blue candies or blue candies and red candies Any candy can belong to at most one gift set Help Polycarp to find the largest number of gift sets he can create For example if and then Polycarp can make three gift sets In the first set there will be red candies and blue candies In the second set there will be blue candies and red candies In the third set will be blue candies and red candies Note that in this example there is one red candy that Polycarp does not use in any gift set ,In this problem we can use a binary search for the answer If we can make sets then we can make sets So we need to come up with the following test whether we can make sets knowing the parameters Let otherwise we will swap them If the answer is Otherwise let s say we want to make sets of the first kind Then we get a system of inequalities Let s express from here We need to check whether these four equations have an intersection in integers If there is then the division into gifts exists ,1
229,Monocarp has been collecting rare magazines for quite a while and now he has decided to sell them He distributed the magazines between boxes arranged in a row The th box contains magazines Some of the boxes are covered with lids others are not Suddenly it started to rain and now Monocarp has to save as many magazines from the rain as possible To do this he can move the lids between boxes as follows if the th box was covered with a lid initially he can either move the lid from the th box to the box if it exists or keep the lid on the th box You may assume that Monocarp can move the lids instantly at the same moment and no lid can be moved more than once If a box will be covered with a lid after Monocarp moves the lids the magazines in it will be safe from the rain otherwise they will soak You have to calculate the maximum number of magazines Monocarp can save from the rain ,First of all let s try to find the best strategy to play minions All minions should be summoned if someone is not summoned summoning and deleting it won t make the answer worse the resulting number of minions should be exactly if it is less then we didn t need to delete the last deleted minion Furthermore if some minion should be deleted we can delete it just after it is summoned All these greedy ideas lead to the following structure of the answer we choose minions and summon them in some order we choose minions which will be summoned and instantly deleted we summon the remaining minion Let s analyze how these minions affect the answer The first minion has power and does not give bonus to anyone the second one has power and gives bonus to one minion and so on the th minion from the first group adds to the answer Minions from the second group buff minions each so they add to the answer and the last minion adds Let s unite the first group and the last minion then we will have two groups of minions those which are destroyed the second group and those which are not destroyed the first group From there we will have two possible ways to finish the solution there are minions and positions for them and for each pair minion position we may calculate the value this pair adds to the answer After that we should assign each monster a position in such a way that each position is chosen exactly once and the sum of values is maximized It can be done with mincost flows or Hungarian algorithm the minions from the first group should be played in non descending order of their Let s sort all minions by and write the following dynamic programming is the maximum answer if we considered first minions and of them were assigned to the first group Since the minions are sorted by whenever we add a minion to the first group it should add exactly to the answer and increase by and if a minion is added to the second group the answer is increased by ,0
230,You are given an integer and a string that consists only of characters a a lowercase Latin letter and an asterisk Each asterisk should be replaced with several from to inclusive lowercase Latin letters b Different asterisk can be replaced with different counts of letter b The result of the replacement is called a Two strings and are different if they either have different lengths or there exists such a position that A string is lexicographically smaller than a string if and only if one of the following holds is a prefix of but in the first position where and differ the string has a letter that appears earlier in the alphabet than the corresponding letter in Now consider all different BA strings and find the th lexicographically smallest of them ,Find all segments of asterisks in the string Let there be of them and the number of asterisks in them be That tells us that the th segment of asterisks can be replaced with at most letters b Notice that we can compare two strings lexicographically using just the number of letters b that replace each of segments of asterisks Let that sequence for some string be and that sequence for some string be Then if and only if That is there exists such position that The proof is trivial So we can actually look at the sequence as some kind of number in a mixed base The lowest digit can be of one of values from to The second lowest one of And so on Then comparison of two strings is the same as comparison of these two mixed base numbers Thus the task is to convert number to this mixed base Turns out it s not that hard In base for example the lowest digit can be determined as the remainder of the number of dividing by Here it will be the remainder of dividing by After that divide and floor the number and proceed to the next digit After steps are done the digits of that mixed base number tell exactly how many letters b should replace each segment of asterisks Overall complexity per testcase to recover the string to print it ,1
231,PizzaForces is Petya s favorite pizzeria PizzaForces makes and sells pizzas of three sizes small pizzas consist of slices medium ones consist of slices and large pizzas consist of slices each Baking them takes and minutes respectively Petya s birthday is today and of his friends will come so he decided to make an order from his favorite pizzeria Petya wants to order so much pizza that each of his friends gets at least one slice of pizza The cooking time of the order is the total baking time of all the pizzas in the order Your task is to determine the minimum number of minutes that is needed to make pizzas containing at least slices in total For example if friends come to Petya s birthday he has to order pizzas containing at least slices in total He can order two small pizzas containing exactly slices and the time to bake them is minutes if friends come to Petya s birthday he has to order pizzas containing at least slices in total He can order a small pizza and a large pizza containing slices and the time to bake them is minutes if friends come to Petya s birthday he has to order pizzas containing at least slices in total He can order small pizzas medium pizzas and large pizzas in total they contain slices and the total time to bake them is minutes if only one friend comes to Petya s birthday he can order a small pizza and the time to bake it is minutes ,At first let s calculate the matrix of size Let will denote the maximum length of the prefix of which equals to the suffix of the prefix of of length with the additional character if and otherwise In other words is denote which maximum length of the prefix of we can reach if now we have the prefix of of length and want to add the character if and otherwise and only one possible move is to remove characters from the beginning of this prefix with an additional character This matrix can be easily calculated in without any dynamic programming It can be also calculated in using prefix function and dynamic programming Now let s calculate the following dynamic programming It means that now we have gained characters of the regular bracket sequence the balance of this sequence is the last characters of the gained prefix is the prefix of of length and equals to if we obtain the full string at least once and otherwise The stored value of the is the number of ways to reach this state Initially all other values equal The following recurrence works try to add to the current prefix character if the current balance is less than then we will move to the state is the length of and is operation if at least one is true then the result is true Let s add to the number of ways to reach the destination state the number of ways to reach the current state The same with the character Try to add to the current prefix character if the current balance is greater than then we will move to the state Also add to the number of ways to reach the destination state the number of ways to reach the current state After calculating this dynamic programming the answer is Time complexity is ,0
232,Santa Claus has received letters from different kids throughout this year Of course each kid wants to get some presents from Santa in particular the th kid asked Santa to give them one of different items as a present Some items could have been asked by multiple kids Santa is really busy so he wants the New Year Bot to choose the presents for all children Unfortunately the Bot s algorithm of choosing presents is bugged To choose a present for some kid the Bot does the following choose one kid equiprobably among all kids choose some item equiprobably among all items kid wants choose a kid who will receive the present equipropably among all kids this choice is independent of choosing and the resulting triple is called of the Bot If kid listed item as an item they want to receive then the decision Otherwise the Bot s choice is Santa is aware of the bug but he can t estimate if this bug is really severe To do so he wants to know the probability that one decision generated according to the aforementioned algorithm is Can you help him ,First of all how to deal with the fractions modulo 998244353 According to Fermat s little theorem x phi m equiv 1 mod m if x is coprime with m So the inverse element for the denominator y is y phi 998244353 1 y 998244351 taken modulo 998244353 A cool property of fractions taken modulo 998244353 or any other number such that denominator is coprime with it is that if we want to add two fractions together and calculate the result modulo some number we can convert these fractions beforehand and then just add them as integer numbers The same works with subtracting multiplying dividing and exponentiating fractions Okay now for the solution itself We know that there are at most 10 6 possible pairs of x y we can iterate on these pairs calculate the probability that the fixed pair is included in the robot s decision that probability is frac 1 x cdot k x and calculate the probability that x y extends to a valid triple it is equal to frac cnt y z where cnt y is the number of kids who want item y Multiplying these two probabilities we get the probability that x y is chosen produces a valid decision since these events are independent and we sum up these values over all possible pairs x y ,1
233,In some social network there are users communicating with each other in groups of friends Let s analyze the process of distributing some news between users Initially some user receives the news from some source Then he or she sends the news to his or her friends two users are friends if there is at least one group such that both of them belong to this group Friends continue sending the news to their friends and so on The process ends when there is no pair of friends such that one of them knows the news and another one doesn t know For each user you have to determine what is the number of users that will know the news if initially only user starts distributing it ,The first intention after reading the problem is to reformulate it in graph theory terms Let people be vertices edge between two vertices and exists if and have some group in common Basically if person starts distributing the news everyone in his connectivity component recieves it Thus the task is to calculate the number of vertices of each vertex component As of now the graph can have up to edges consider the case where everyone is in the same group Let s reduce the number of edges without changing connectivity components For each group you know for sure that people in it are in the same component Let s connect not just every pair of vertices in it but every pair of neighbouring ones in each group It s easy to see that they are still in the same component This graph will have edges which is a much smaller number You can use dfs or dsu to find the components and their sizes Overall complexity ,1
234,You are participating in Yet Another Tournament There are participants you and other opponents numbered from to Each two participants will play against each other exactly once If the opponent plays against the opponent he wins if and only if When the opponent plays against you everything becomes a little bit complicated In order to get a win against opponent you need to prepare for the match for at least minutes otherwise you lose to that opponent You have minutes in total to prepare for matches but you can prepare for only one match at one moment In other words if you want to win against opponents you need to spend minutes for preparation and if this number is greater than you cannot achieve a win against all of these opponents at the same time The final place of each contestant is equal to the number of contestants with strictly more wins For example if contestants have wins each contestant has wins and contestants have win each then the first participants will get the st place the fourth one gets the th place and two last ones get the th place Calculate the minimum possible place lower is better you can achieve if you can t prepare for the matches more than minutes in total ,Suppose at the end you won matches what can be your final place Look at each opponent with indexed Since the th opponent indexed won games against the other opponents even if they win against you they ll gain wins in total and can t affect your place since your place is decided by only opponents who won strictly more matches than you From the other side let s look at each opponent with indexed Even if they lose to you they still have wins you have only so all of them have strictly more wins than you As a result there is only one opponent whose match against you can affect your final place if you won against them your place will be otherwise your place will be Now let s compare your possible places if you win games with places for winning only games wins gives you places or while winning leads you to places or that objectively worse In other words it s always optimal to win as many matches as possible How to win the most number of games It s to choose the easiest opponents Let s sort array and find the maximum prefix with So we found maximum number of games we can win The last is to check can we get place or only If contains among smallest values then we ll take place Otherwise let s try to insert in this set i e let s erase the biggest among them and insert If the sum is still lower or equal to it s success and we get place Otherwise our place is The total complexity is because of sorting ,1
235,Alice and Bob are playing a game on a matrix consisting of rows and columns The cell in the th row in the th column contains coins in it Initially both Alice and Bob are standing in a cell They are going to perform a sequence of moves to reach a cell The possible moves are Move right from some cell to Move down from some cell to First Alice makes until she reaches She collects the coins in all cells she visit including the starting cell When Alice finishes Bob starts his journey He also performs the moves to reach and collects the coins in all cells that he visited The score of the game is the total number of coins Bob collects Alice wants to minimize the score Bob wants to maximize the score What will the score of the game be if both players play optimally ,First note that parts of the picture separated by are independent That is any stamps used on one part doesn t have any impact on the other since a character means no stamp has been placed on that cell So let s split the string by s for example with method in Python and consider the resulting strings containing only and Call one of these parts In the final stamp we place on we must have placed so it should have both the characters and Therefore if the string has only or only the answer is Otherwise the answer is Let s show it As we have just shown we must have next to for the string to be possible Consider the way to make The final stamp can be For the rest of the cells we can make them one by one as below so now we have made the prefix of the string before the final stamp Similarly Now we have made the prefix and the suffix by stamping one character at a time actually we stamp two characters but then cover it up with another stamp Finally we can put the final stamp to make the whole string This method easily generalizes to any string We can find the final stamp and then make the prefix and suffix one by one The solution runs in ,0
236,Polycarp was given a row of tiles Each tile contains one lowercase letter of the Latin alphabet The entire sequence of tiles forms the string In other words you are given a string consisting of lowercase Latin letters Initially Polycarp is on the tile of the row and wants to get to the tile by jumping on the tiles Jumping from th tile to th tile has a cost equal to where is the index of the letter in the alphabet for example Polycarp wants to get to the th tile for the minimum total cost but at the same time make number of jumps In other words among all possible ways to get to the last tile for the total cost he will choose the one with the number of jumps Polycarp can visit each tile Polycarp asks you to help print the sequence of indices of string on which he should jump ,After sorting we can observe that if the answer is then the area of each rectangle is Then we just need to check for each from to that and and If all conditions are satisfied for all then the answer is Otherwise the answer is ,0
237,You are given one dimensional segments each segment is denoted by two integers its endpoints Let s define the function as the number of segments covering point a segment covers the point if where is the left endpoint and is the right endpoint of the segment An integer point is called if it belongs to more segments than any other integer point i e is true for any other integer point You are given an integer Your task is to determine whether it is possible to remove some possibly zero segments so that the given point becomes ,Let s think how a reduction changes the length of There are two cases If two adjacent letters sum up to or greater then the length doesn t change Otherwise the length decreases by one Obviously if there exists a reduction that doesn t change the length then it s better to use it Which among such reduction should you choose Well notice that such a reduction always makes the number strictly smaller easy to see with some case analysis Thus the logical conclusion is to leave the longest possible prefix of untouched So the rightmost such reduction will change the number as little as possible If all reductions decrease the length then a similar argument can be applied The sum will be a single digit but a digit that is greater than or equal to the left one of the adjacent pair If it was just greater it s easy to see that the leftmost such reduction will make the number the largest possible The equal case adds more case analysis on top of the proof but the conclusion remains the same the leftmost reduction is the best one As an implementation note since all the reductions are of the same type the leftmost reduction always includes the first and the second digits Overall complexity per testcase ,0
238,There are segments for You should divide all segments into two groups in such way that there is no pair of segments from different groups which have at least one common point or say that it s impossible to do it Each segment should belong to exactly one group To optimize testing process you will be given multitest ,There are two main approaches to this problem Let s analyze how the binary representation of changes after the operation If there are no zeroes at the end of it appending just reverses the binary representation if there are any trailing zeroes we remove them and reverse the binary representation If we append we just reverse the binary representation and add at the beginning No matter which action we choose on the first step the resulting binary representation will have at its beginning and at its end so no bits can be removed from it no zero from the resulting binary representation can become leading It means that every number we can obtain from will have the following form several ones maybe none then then several ones again maybe none where is one of the following four strings the binary representation of after appending in the first operation the binary representation of after appending in the first operation one of the aforementioned representations but reversed We can check that meets one of these four templates but since we only considered the case when we apply at least one operation we also have to verify if Run something like implicit BFS or DFS to generate all possible values you can obtain pruning when the length of the binary representation we get becomes too large say greater than Why does this work fast As we have shown in our first approach the numbers we can get from have a very specific form and if we limit their lengths to we will consider only about different numbers Note that if you try this approach you have to store the obtained numbers in some associative data structure I use a set of strings in my solution ,0
239,The leader of some very secretive organization has decided to invite all other members to a meeting All members of the organization live in the same town which can be represented as crossroads connected by two directional streets The meeting will be held in the leader s house near the crossroad There are members of the organization invited to the meeting th of them lives near the crossroad All members of the organization receive the message about the meeting at the same moment and start moving to the location where the meeting is held In the beginning of each minute each person is located at some crossroad He or she can either wait a minute at this crossroad or spend a minute to walk from the current crossroad along some street to another crossroad obviously it is possible to start walking along the street only if it begins or ends at the current crossroad In the beginning of the first minute each person is at the crossroad where he or she lives As soon as a person reaches the crossroad number he or she immediately comes to the leader s house and attends the meeting Obviously the leader wants all other members of the organization to come up as early as possible But since the organization is very secretive the leader does not want to attract much attention Let s denote the of the leader as follows initially the discontent is whenever a person reaches the crossroad number the discontent of the leader increases by where is some fixed constant and is the number of minutes it took the person to reach the crossroad number whenever members of the organization walk is added to the discontent where is some fixed constant This is not cumulative for example if two persons are walking along the same street in the same direction at the same moment then is added to the discontent not Before sending a message about the meeting the leader can tell each member of the organization which path they should choose and where they should wait Help the leader to establish a plan for every member of the organization so they all reach the crossroad and the discontent is minimized ,First of all one crucial observation is that no person should come to the meeting later than minutes after receiving the message the length of any simple path in the graph won t exceed and even if all organization members should choose the same path we can easily make them walk alone if the first person starts as soon as he receives the message the second person waits one minute the third person waits two minutes and so on Let s model the problem using mincost flows First of all we need to expand our graph let s create time layer of the graph where th layer represents the state of the graph after minutes have passed The members of the organization represent the flow in this graph We should add a directed edge from the source to every crossroad where some person lives with capacity equal to the number of persons living near that crossroad of course this edge should lead into th time layer since everyone starts moving immediately To model that some person can wait without moving we can connect consecutive time layers for every vertex representing some crossroad in time layer let s add a directed edge with infinite capacity to the vertex representing the same crossroad in the layer To model that people can walk along the street for every street and every layer let s add several edges going from crossroad in the layer to crossroad in the layer the costs and the capacities of these edges will be discussed later And to model that people can attend the meeting for each layer let s add a directed edge from the vertex representing crossroad in that layer to the sink the capacity should be infinite the cost should be equal to Okay if we find a way to model the increase of discontent from the companies of people going along the same street at the same moment then the minimum cost of the maximum flow in this network is the answer maximization of the flow ensures that all people attend the meeting and minimization of the cost ensures that the discontent is minimized To model the increase of discontent from the companies of people let s convert each edge of the original graph into a large set of edges for each layer let s add edges with capacity from the crossroad in the layer to the crossroad in the layer The first edge should have the cost equal to the second edge equal to the third and so on so if we choose minimum cost edges between this pair of nodes their total cost will be equal to Don t forget that each edge in the original graph is undirected so we should do the same for the node representing in layer and the node representing in layer Okay now we have a network with vertices and edges and we have to find the minimum cost flow in it and the total flow does not exceed Strangely enough we could not construct a test where the basic implementation of Ford Bellman algorithm with a queue runs for a long time but perhaps it s possible to fail it But if you are not sure about its complexity you can improve it with the following two optimizations use Dijkstra with potentials instead of Ford Bellman with queue compress all edges that connect the same nodes of the network into one edge with varying cost ,1
240,You are given four integers and You should build a sequence where and for each you can choose either or Your goal is to build such a sequence that for all and is maximum possible ,Strategy is quite easy we go from to and if we take this variant we set otherwise we set Note that all are in range so there won t be any overflow underflow It s also not hard to prove that this strategy maximizes the sum By contradiction suppose the optimal answer has some index where but Let s find first position where and swap operations between and As a result all from were increased while remained the same i e there is no violation of the rules and the total sum increased contradiction ,1
241,You are given a correct solution of the sudoku puzzle If you don t know what is the sudoku you can read about it here The picture showing the correct sudoku solution Blocks are bordered with bold black color Your task is to change elements of this field i e choose some and change the number at the position to any other number in range to make it The is the field in which Any number in this field is in range each row contains at least two equal elements each column contains at least two equal elements each block you can read what is the block in the link above contains at least two equal elements It is guaranteed that the answer exists You have to answer independent test cases ,To solve the problem we need to find the character with the highest alphabetical order in our string since Atilla will need at least that alphabet size and won t need more To do this iterate through the string and find the character with the highest alphabetical order Output the maximum alphabetical order found The solution can be done in ,0
242,It all started with a black and white picture that can be represented as an matrix such that all its elements are either or The rows are numbered from to the columns are numbered from to Several operations were performed on the picture possibly zero each of one of the two kinds choose a cell such that it s not on the border neither row or nor column or and it s surrounded by four cells of the opposite color four zeros if it s a one and vice versa and paint it the opposite color itself make a copy of the current picture Note that the order of operations could be arbitrary they were not necessarily alternating You are presented with the outcome all copies that were made Additionally you are given the initial picture However all pictures are shuffled Restore the sequence of the operations If there are multiple answers print any of them The tests are constructed from the real sequence of operations i e at least one answer always exists ,Find all segments of asterisks in the string Let there be of them and the number of asterisks in them be That tells us that the th segment of asterisks can be replaced with at most letters b Notice that we can compare two strings lexicographically using just the number of letters b that replace each of segments of asterisks Let that sequence for some string be and that sequence for some string be Then if and only if That is there exists such position that The proof is trivial So we can actually look at the sequence as some kind of number in a mixed base The lowest digit can be of one of values from to The second lowest one of And so on Then comparison of two strings is the same as comparison of these two mixed base numbers Thus the task is to convert number to this mixed base Turns out it s not that hard In base for example the lowest digit can be determined as the remainder of the number of dividing by Here it will be the remainder of dividing by After that divide and floor the number and proceed to the next digit After steps are done the digits of that mixed base number tell exactly how many letters b should replace each segment of asterisks Overall complexity per testcase to recover the string to print it ,0
243,There are well known formulas Also mathematicians found similar formulas for higher degrees Find the value of the sum modulo so you should find the remainder after dividing the answer by the value ,Statement the function of the sum is a polynomial of degree over variable This statement can be proved by induction to make step you should take the derivative Denote the value of the sum for We can easily calculate the values of for from to in time If then we already have the answer Otherwise let s use Lagrange polynomial to get the value of the sum for the given value The Largange polynomial have the following form In our case and To calculate in a linear time we should use that for all It s help us because with that property we can recalculate the inner product for from the inner product for simply by multiplying by two values and dividing by two values So we can calculate the sum in linear time over ,1
244,There are robots driving along an OX axis There are also two walls one is at coordinate and one is at coordinate The th robot starts at an integer coordinate and moves either left towards the or right with the speed of unit per second No two robots start at the same coordinate Whenever a robot reaches a wall it turns around instantly and continues his ride in the opposite direction with the same speed Whenever several robots meet at the same coordinate they collide and explode into dust Once a robot has exploded it doesn t collide with any other robot Note that if several robots meet at a non integer coordinate nothing happens For each robot find out if it ever explodes and print the time of explosion if it happens and otherwise ,Let the number of students with the skill is and the number of different skills is Then the size of the first team can not exceed and the size of the second team can not exceed So the answer is not greater than the minimum of these two values Moreover let s take a look at the skill with a maximum value of Then there are two cases all students with this skill go to the second team then the sizes of teams are at most and correspondingly Otherwise at least one student with this skill goes to the first team and the sizes are at most and correspondingly So the answer is Time complexity ,0
245,The Dogeforces company has employees Each employee except for lower level employees has at least subordinates Lower level employees have no subordinates Each employee except for the head of the company has exactly one direct supervisor The head of the company is a direct or indirect supervisor of all employees It is known that in Dogeforces each supervisor receives a salary strictly more than all his subordinates The full structure of the company is a secret but you know the number of lower level employees and for each pair of lower level employees the salary of their common supervisor is known if there are several such supervisors then the supervisor with the minimum salary You have to restore the structure of the company ,There are many possible solutions One of them is just to print 2 3 ldots n 1 ,0
246,You wanted to write a text consisting of lowercase Latin letters But instead you have written a text consisting of lowercase Latin letters and now you want to fix it by obtaining the text from the text Initially the cursor of your text editor is at the end of the text after its last character In one move you can do one of the following actions press the left button so the cursor is moved to the left by one position or does nothing if it is pointing at the beginning of the text i e before its first character press the right button so the cursor is moved to the right by one position or does nothing if it is pointing at the end of the text i e after its last character press the home button so the cursor is moved to the beginning of the text before the first character of the text press the end button so the cursor is moved to the end of the text after the last character of the text press the backspace button so the character before the cursor is removed from the text if there is no such character nothing happens Your task is to calculate the minimum number of moves required to obtain the text from the text using the given set of actions or determine it is impossible to obtain the text from the text You have to answer independent test cases ,If the answer is we can t get so we can move by to the right and by to the left If or the answer is obviously Otherwise the answer is always We can t get the answer less than this value because we need at least moves to get to the point greater than or equal to and we can always get this answer by the recurrence ,0
247,A string of length is called if it can be obtained using the following algorithm first write an empty string to i e perform the assignment then perform the next step times at the th step take th lowercase letter of the Latin alphabet and write it either to the left of the string or to the right of the string i e perform the assignment or where is the th letter of the Latin alphabet In other words iterate over the first letters of the Latin alphabet starting from and etc Each time we prepend a letter to the left of the string or append a letter to the right of the string Strings that can be obtained in that way are alphabetical For example the following strings are alphabetical and The following strings alphabetical and From the given string determine if it is alphabetical ,For a start let s find the position of the letter in string If this position does not exist then the answer would be Suppose that this position exists and equals Let s create two pointers and Initially We will try to build string using the algorithm from the statement Suppose that we have built substring in iterations Consider the next letter of the Latin alphabet Let s look at cases find position of the letter in if it does not exist then if then make an assignment and process the next letter if then make an assignment and process the next letter otherwise string is not alphabetical and the answer is So if we have built the string in iteration then string is alphabetical and the answer is ,1
248,We call two numbers and if they have the same parity the same remainder when divided by or if For example in each of the pairs the numbers are similar to each other and in the pairs they are not You are given an array of is even positive integers Check if there is such a partition of the array into pairs that each element of the array belongs to exactly one pair and the numbers in each pair are similar to each other For example for the array there is a partition into pairs and The numbers in the first pair are similar because they differ by one and in the second pair because they are both even ,Take a look at the condition for a good subset The major implication it makes is that every point even non integer of the segment 1 m should be covered by at least one segment If some point isn t then there is no way to jump across the gap it produces At the same time this condition is enough to have a path since for every half integer point 0 5 1 5 and so on there exists a segment that covers it So you can take that segment to go from 1 to 2 then from 2 to 3 and so on Thus we are asked to select a subset of segments that covers the entire segment 1 m in its union The main prerequisite to the following solution is knowing the way to maintain the union of segments For now I can tell you that there is a data structure that allows you to add a segment remove a segment and query the length of the current union Let s continue with making some observations on the cost function If you fix the minimum and the maximum value you are free to select all segments that have their value in between That allows us to transition from selecting a subset of segment to an interval if you sort the segments by their weight If you fix only minimum then the required maximum should be as small as possible However if some value suffices as a maximum then any value greater than it also suffices since it only adds extra segments to the subset This makes the function on the maximum monotonous So the binary search applicable You could iterate over the minimum and binary search the maximum However it s not too clear how to make a check function You would need to find a union of some interval of segments quickly I don t really know a way to do that so let s try something different Instead let s forget about binary search and try to reach a two pointers solution Let f x be the smallest possible maximum given the fixed minimum is x We want f x 1 to be greater than or equal than f x for two pointers to be applicable That condition indeed holds Imagine if f x 1 is smaller than f x So there exists some optimal subset for x 1 Add all segments with weight x to that subset That brings the minimum to x However it doesn t change the maximum so f x is at least equal to f x 1 what contradicts the assumption Finally the solution comes up to the following Iterate over the minimum value x while maintaining f x When going from x to x 1 keep increasing the value of f until the union of the segments is exactly m Going from x to x 1 and increasing the value of f is actually removing some segments and adding some segments to the data structure The data structure that helps us with that is a segment tree The i th leaf of the tree holds the number of segments that cover the interval i i 1 Add remove segment makes it add subtract on a range The union is full if the there are no intervals that are covered by zero segments Thus let s store the minimum of the subtree in every intermediate node If the minimum on the tree is above zero then the current subset is good Instead of applying two pointers on the values of the segments let s apply them on the sorted segments themselves That makes moving the pointer exactly one update to the segtree Overall complexity O n log n n log m ,0
249,You are given a permutation A permutation of length is a sequence such that each integer between and occurs exactly once in the sequence Find the number of pairs of indices such that the value of the median of is exactly the given number The median of a sequence is the value of the element which is in the middle of the sequence after sorting it in non decreasing order If the length of the sequence is even the left of two middle elements is used For example if then its median is since after sorting the sequence it will look like and the left of two middle elements is equal to The median of equals since after sorting the value will be in the middle of the sequence Write a program to find the number of pairs of indices such that the value of the median of is exactly the given number ,Consider how each sort of tea affects the tasters The th sort makes testers for some drink to their limit and the th taster drink the remaining tea Sometimes there is no such th taster but we ll explore the general case Let s add the remaining tea straight to the th taster answer And for each taster from to we ll add into the value denoting how many times they drank at their limit If we have these calculated we can obtain the answer by adding and In order to find we can use prefix sums Build over the sequence Now you want to find the largest such that Rewrite it as You can do this with a binary search In particular with an upper bound call The amount of the remaining tea can also be calculated from prefix sums To add on a range you can use a technique called delta encoding Add to Subtract from After everything is added propagate this values via a prefix sum This way if both and happened non strictly to the left or strictly to the right of it doesn t affect at all the segment either closes before or opens after Otherwise it adds exactly to Overall complexity per testcase ,0
250,For a sequence of strings let s define the function as the number of different strings that are subsequences of string i e the number of such strings for an empty sequence is You are given a sequence of strings Every string in this sequence consists of lowercase Latin letters and is i e each string begins with several maybe zero characters then several maybe zero characters ends with several maybe zero characters For each of subsequences of calculate the value of the function modulo ,Let s precompute for each value its position in permutation It s easy to do in linear time Consider some foe pair we may assume Let s store for each value the leftmost position such that is a foe pair Denote that value as Now let s iterate over the array from right to left and maintain the position of the maximal correct interval with the left end in the current position To maintain the value we should simply take the minimum with the value And finally we should increment the answer by the value ,0
251,You are given an unweighted tree with vertices Then following operations are applied to the tree A single operation consists of the following steps choose two leaves add the length of the simple path between them to the answer remove one of the chosen leaves from the tree Initial answer before applying operations is Obviously after such operations the tree will consist of a single vertex Calculate the maximal possible answer you can achieve and construct a sequence of operations that allows you to achieve this answer ,The solution is to choose some diameter of given tree then delete all the leaves which don t belong to diameter iteratively and then delete the diameter I e while tree includes vertices aside from the ones forming diameter we choose some leaf increase answer by the length of the path between this leaf and farthest endpoint of the diameter from this leaf and delete this leaf Then while tree consists of more than one vertex we choose two endpoints of diameter increase answer by the length of the path between it and delete any of them At first we need to prove that we can choose any diameter It can be proved by next fact we can find the diameter by two graph traversals DFS BFS we need to find farthest vertex and then again find farthest vertex from found farthest vertex given path is a diameter of the tree It means that for each vertex that doesn t belongs to the diameter we will add maximal possible path length by the algorithm described above And finally obviously that at some moment we need to delete the diameter and there is no way to do this better than we do it in described solution ,1
252,Petya is a math teacher of his students has written a test consisting of questions For each student it is known which questions he has answered correctly and which he has not If the student answers the th question correctly he gets points otherwise he gets points Moreover the points for the questions are distributed in such a way that the array is a permutation of numbers from to For the th student Petya knows that he expects to get points for the test Petya wonders how unexpected the results could be Petya believes that the of the results for students is equal to where is the number of points that the th student has got for the test Your task is to help Petya find such a permutation for which the of the results is maximum possible If there are multiple answers print any of them ,Note that there are only two ways to fix the result of the operation of taking an absolute value in the expression or Since the value of is small enough that we can iterate over all options and choose the one for which the sum is maximum For each student let s fix with which sign their total points will contribute to the answer then will contribute with the opposite sign Now for the question we can calculate the coefficient with which will contribute to the answer It remains to choose such a permutation that the sum is the maximum possible From here we can see that if for some and then must holds otherwise we can swap and and the answer will increase This means that we can sort all questions in ascending order by the value in the array and assign the value in the array to the th question in ascending order For some of options the permutations we found may be illegal because it can happen that we consider the case that some evaluates as but in the best permutation we found for that option it evaluates as We can just ignore it because this will never be the case with the option giving the highest possible surprise value if this thing happened for some option to choose the signs of then if we flip the signs for the students such that the conditions on them are not met in the optimal permutation we ll get a combination of signs that yields a higher surprise value ,1
253,One day early in the morning you decided to buy yourself a bag of chips in the nearby store The store has chips of different flavors A bag of the th flavor costs burles The store may run out of some flavors so you ll decide which one to buy after arriving there But there are two major flaws in this plan you have only coins of and burles since it s morning the store will ask you to pay in exact change i e if you choose the th flavor you ll have to pay burles Coins are heavy so you d like to take the least possible number of coins in total That s why you are wondering what is the minimum total number of coins you should take with you so you can buy a bag of chips of any flavor in exact change ,We can notice that the answer is the number of zeros between the leftmost occurrence of and the rightmost occurrence of Why is it true Let s take the leftmost maximum by inclusion segment of and just shift it right We can see that using this algorithm we will do exactly described amount of moves and there is no way improve the answer ,0
254,You might have remembered Theatre square from the problem 1A Now it s finally getting repaved The square still has a rectangular shape of meters However the picture is about to get more complicated now Let be the th square in the th row of the pavement You are given the picture of the squares if then the th square in the th row should be if then the th square in the th row should be The black squares are paved already You have to pave the white squares There are two options for pavement tiles tiles each tile costs burles and covers exactly square tiles each tile costs burles and covers exactly adjacent squares of the What is the smallest total price of the tiles needed to cover all the white squares ,Let s introduce the dynamics if on the prefix the answer is Then in this sequence the numbers corresponding to the sizes of the segments from the partition into subsegments will be called A number at position in the sequence if it is is either to the right or to the left of the segment If it is to the left of the segment it can only be interesting if Then If it is on the right side of the segment then if then The answer for the whole sequence is if ,0
255,Monocarp and Polycarp are playing a computer game This game features bosses for the playing to kill numbered from to They will fight boss the following way Monocarp makes attempts to kill the boss Polycarp makes attempts to kill the boss Monocarp makes attempts to kill the boss Polycarp makes attempts to kill the boss Monocarp kills the th boss on th attempt Polycarp kills the th boss on th attempt After one of them kills the th boss they move on to the st boss The attempt counters reset for both of them Once one of them kills the th boss the game ends Find all values of from to such that Monocarp kills ,Consider some value of When is it included in the answer When Monocarp spends a lower or an equal amount of blocks of attempts than Polycarp for killing every boss Formally for all from to Let s reverse this condition is not in the answer if there exists such from to that So there exists at least one value between and Let s call it Now it s I set the and signs arbitrarily just so that it shows that such a value exists You can t put both or both because that will accept values or at least values respectively Would be cool if we could multiply everything by and it still worked Is it completely impossible though Take a look at What it says is that there exists a multiple of between and A multiple of is a number that s the last in each block of attempts the block of value that are rounded up the same Turns out this is what we are looking for already Right after the multiple of the new block starts Thus we are wrong we our signs It should be is in the block after so it requires more blocks of attempts So for to not be included in the answer there should exist at least one such that there exists a multiple of in the half interval That is pretty easy to implement For each calculate the number of half intervals that cover I think this is called delta encoding Iterate over all half intervals and make two updates for each one increment by on position and decrement by on position Then make a prefix sum over these updates Now the value in the th position tells you the number of half intervals that cover To check a particular value of iterate over all multiples of and check that none are covered by half intervals It s known that the total number of multiples over all numbers from to is Overall complexity per testcase ,1
256,Let s denote a step ladder as the following structure exactly wooden planks of which two planks of length the base of the ladder planks of length the steps of the ladder Note that neither the base planks nor the steps planks are required to be equal For example ladders and are correct step ladders and ladder is a correct step ladder On the first picture the lengths of planks are for the base and for the step On the second picture lengths are for the base and for the step On the third picture lengths are for the base and for the steps You have planks The length of the th planks is You don t have a saw so you can t cut the planks you have Though you have a hammer and nails so you can assemble the improvised ladder from the planks The question is what is the maximum number such that you can choose some subset of the given planks and assemble a step ladder using them ,It is obvious that if there is a pair of points and such that and then the answer is It means that if the answer is then there is some ordering of points such that and because we can only move right or up But what is this ordering it is just sorted order of points firstly by then by So we can sort all points check if this ordering is valid and traverse among all these points For each from to firstly do moves to the right then do moves to the up because this order minimizing the answer lexicographically Time complexity or ,0
257,Alice is a beginner composer and now she is ready to create another masterpiece And not even the single one but two at the same time Alice has a sheet with notes written on it She wants to take two such non empty non intersecting subsequences that both of them form a and sum of their lengths is maximal Subsequence forms a melody when each two adjacent notes either differs by or are congruent modulo You should write a program which will calculate maximum sum of lengths of such two non empty non intersecting subsequences that both of them form a melody ,There are exactly games in the tournament each game has only two possible outcomes So it s possible to bruteforce all possible ways the tournament could go if is not large In fact this solution is fast enough when so if we somehow can handle the case we will have a working solution To handle let s divide the teams into two groups teams from to and teams from to There will be exactly matches in each group and the winners of these two groups will play in the finals The number of possible ways the games in a group can go is just so let s try to bruteforce all possible results in each group and somehow merge them into the results of the whole tournament The main idea is to rewrite as where and find all possible values for and and choose a pair of values that yields exactly the given value of We will handle two separate cases the winner of the first group wins the whole tournament or the winner of the second group wins the whole tournament Suppose we are handling the first case the second is symmetrical By choosing the results of matches in the first group we determine the places of the teams from the first group the winner of the first group gets place the team eliminated in the last match of the first group gets place and so on It means that by choosing one of the possible results in the first group we can calculate Let s bruteforce these combinations of results in the first group and store them in some data structure that allows to check whether some value of is achievable in the model solution it s a which maps reachable values of to combinations of results that yield these values Then by choosing the results of matches in the second group we can calculate so the remaining part of the solution is to bruteforce all possible results in the second group calculate for them and check that such that can be achieved by choosing the results in the first group Don t forget to also handle the case when the team which wins in the first group loses in the finals it is almost the same but the winner in the first group gets place and the winner in the second group gets place The technique I ve described here instead of bruteforcing all possible variants split the thing we try to bruteforce into two parts bruteforce them separatedly and then try to merge the parts is called and can be used to solve a large variety of problems ,0
258,There is a bookshelf which can fit books The th position of bookshelf is if there is a book on this position and otherwise It is guaranteed that there is on the bookshelf In one move you can choose some contiguous segment consisting of books i e for each from to the condition holds and Shift it to the right by move the book at index to for all This move can be done only if and there is no book at the position Shift it to the left by move the book at index to for all This move can be done only if and there is no book at the position Your task is to find the number of moves required to collect all the books on the shelf as a consecutive segment i e the segment without any gaps For example for there is a gap between books when and for there are no gaps between books and for there are also no gaps between books You have to answer independent test cases ,We can notice that the answer is the number of zeros between the leftmost occurrence of and the rightmost occurrence of Why is it true Let s take the leftmost maximum by inclusion segment of and just shift it right We can see that using this algorithm we will do exactly described amount of moves and there is no way improve the answer ,1
259,You are given a tree of vertices and edges The th vertex has an initial weight Let the from vertex to vertex be the number of edges on the path from to Note that and Let the distance from to be Note that and if Analogically to usual distance let s define the of vertex as the greatest weighted distance from to any other vertex including itself or Finally let s define the of the tree as the minimum eccentricity of any vertex or You need to perform queries of the following form assign After performing each query print the radius of the current tree ,Firstly let s define the weight of path as On contrary to weighted distances and also Now let s define the diameter of a tree as path with maximum It s okay if diameter may be explicit case The useful part of such definition is next our diameter still holds most properties of the usual diameter Let s look at two of them There is a vertex on diameter path with and It s easy to prove after noting the fact that and otherwise you could choose diameter or For any vertex eccentricity In other words either or has the maximum distance from You can also prove it by contradiction It also means that The two properties above give us an easy way to calculate the radius just maintain diameter and the answer is a half of it Now let s look how the diameter changes when we change the weight If it s quite easy The only paths that change weights are the paths ending at Denote such path as and note that either or In other words there will be only three candidates for a new diameter path with path with path with The only thing you need to calculate fast enough is the two distances and And since your task is to calculate Finally how to handle decreasing s Let s get rid of them using DCP dynamic connectivity problem technique Keep track of each value each possible value for some vertex will be active on some segment of queries Since there are only queries there will be exactly such segments for all vertices in total Now all queries becomes assign on some segment of queries Note that in that case the previous value of was so you are dealing with only increasing value queries Finally to handle all range queries efficiently you build a Segment Tree on queries set all queries and then traverse your Segment Tree while maintaining the current diameter in order to calculate answers for all queries Each of queries transforms in queries to segment tree vertices and preforming each query asks you to calculate two times If you use the usual binary lifting then your complexity becomes what is okay But if you use Sparse Table on Euler tour you can take in and your complexity will be ,1
260,In this problem we will consider undirected graphs consisting of vertices with weighted edges The weight of each edge is an integer from to An undirected graph is considered if the sum of weights of all edges incident to vertex is equal to the weight of MST in the graph MST is the minimum spanning tree a tree consisting of edges of the graph which connects all vertices and has the minimum sum of weights among all such trees the weight of MST is the sum of weights of all edges in it Calculate the number of graphs having exactly vertices and the weights of edges from to Since the answer might be large print it modulo ,Let s precalculate for each number indexed the array of length where is the number of occurrences of the number on the prefix of length This can be done with easy dynamic programming just compute prefix sums Also let be and it s meaning is the number of occurrences of the number on the segment indexed Firstly let s update the answer with we can always take all occurrences of the same element as the answer Then let s iterate over all possible segments of the array Let the current segment be Consider that all occurrences of the element in the middle block belong to Then we can just take the most frequent number on this segment We also have to choose the number for the first and the last blocks It is obvious that for the number the maximum amount of such numbers we can take is So And we can update the answer with Time complexity where is the size of alphabet the maximum value of ,0
261,Polycarp analyzes the prices of the new berPhone At his disposal are the prices for last days where is the price of berPhone on the day Polycarp considers the price on the day to be bad if later that is a day with a greater number berPhone was sold at a lower price For example if and then the number of days with a bad price is these are days and Print the number of days with a bad price You have to answer independent data sets ,Find all segments of asterisks in the string Let there be of them and the number of asterisks in them be That tells us that the th segment of asterisks can be replaced with at most letters b Notice that we can compare two strings lexicographically using just the number of letters b that replace each of segments of asterisks Let that sequence for some string be and that sequence for some string be Then if and only if That is there exists such position that The proof is trivial So we can actually look at the sequence as some kind of number in a mixed base The lowest digit can be of one of values from to The second lowest one of And so on Then comparison of two strings is the same as comparison of these two mixed base numbers Thus the task is to convert number to this mixed base Turns out it s not that hard In base for example the lowest digit can be determined as the remainder of the number of dividing by Here it will be the remainder of dividing by After that divide and floor the number and proceed to the next digit After steps are done the digits of that mixed base number tell exactly how many letters b should replace each segment of asterisks Overall complexity per testcase to recover the string to print it ,0
262,Recall that a permutation of length is an array where each element from to occurs exactly once For a fixed positive integer let s define the cost of the permutation of length as the number of indices such that For example if and then the cost of such a permutation is because and Your task is the following one for a given value find the permutation of length and the value with maximum possible cost over all ways to choose the permutation and If there are multiple answers then print any of them ,Let s notice that for a fixed value of the answer the cost of permutation does not exceed because only numbers from to can have a pair It turns out that it is always possible to construct a permutation with the cost of exactly It is enough to consider the number chains of the form where It is not difficult to understand that each number is included in exactly one such chain Therefore if we append the chains one after another then in such a permutation the answer will be equal to because all numbers will have a pair except the last element in the chain The number of chains is equal to which means the cost of the permutation is equal to By choosing the permutation will have the maximum possible cost ,1
263,A tea manufacturer decided to conduct a massive tea tasting sorts of tea will be tasted by tasters Both the sorts of tea and the tasters are numbered from to The manufacturer prepared milliliters of the th sort of tea The th taster can drink milliliters of tea at once The tasting will be conducted in steps During the first step the th taster tastes the th sort of tea The th taster drinks tea how much is available of the th sort and how much the th taster can drink also decreases by this amount Then all tasters move to the previous sort of tea Thus during the second step the th taster tastes the st sort of tea The th taster drinks tea The st person ends the tasting During the third step the th taster tastes the nd sort of tea The nd taster ends the tasting This goes on until everyone ends the tasting Take a look at the tasting process for In the left row there are the current amounts of each sort of tea In the right column there are current amounts of tea each taster has drunk in total The arrow tells which taster each tea goes to on the current step The number on the arrow is the amount minimum of how much is available of the sort of tea and how much the taster can drink For each taster print how many milliliters of tea he she will drink in total ,If Polycarp buys packages of shovels and gets exactly shovels in total then that is and are divisors of Then the problem reduces to the following you need to find the maximum divisor of the number not greater than To do this iterate over all the numbers from to inclusive and check whether is divisible by If so then and are both divisors of and you can use them to try to improve the answer ,0
264,There are well known formulas Also mathematicians found similar formulas for higher degrees Find the value of the sum modulo so you should find the remainder after dividing the answer by the value ,At first consider we process the only day In this case just iterate over hours and maintain the length of the current rest block i e if the element equals then increase if the element equals then reset to The maximum intermediate value of is the answer In case of multiple days consider the given sequence as a cyclic sequence Concatenate the sequence twice and solve the previous case Sure not it is no necessary to concatenate it in explicit way just use instead of and process ,0
265,We call an array if we can erase not more than one element from it so that the array becomes strictly increasing that is every element is striclty greater than every element before it You are given an array consisting of elements You are allowed to replace any element with any integer number and you may do so any number of times you need What is the minimum number of replacements you have to perform in order to make the array ,If the problem was to make the array strictly increasing then we could use the following approach for every element subtract its index from it find the longest non decreasing subsequence and change every element not belonging to this sequence In this problem we can use a similar technique Let s iterate on the element we will remove after changing everything we need let s call it For every we will subtract from and for every we will subtract from Let s maintain the longest non decreasing subsequence ending in every element on prefix and the longest non decreasing subsequence starting in every element on suffix this can be done by a lot of different techniques for example two segment trees and rollbacking which is used in our model solution Then we need to somehow merge these sequences The easiest way to do it is to consider only the subsequence ending in element since if we will need to consider the subsequence ending in some index less than we would check this possibility choosing other value of and use some data structure BIT segment tree or something similar to find the longest subsequence that can be appended to the one we fixed After checking if we need to delete element we add it to the data structure on prefix remove element from the data structure on suffix check if we have to remove element and so on Model solution https pastebin com BiaFgYx6,1
266,Polycarp was recently given a set of number even dominoes Each domino contains two integers from to Can he divide all the dominoes into two sets so that all the numbers on the dominoes of each set are different Each domino must go into exactly one of the two sets For example if he has dominoes and then Polycarp will be able to divide them into two sets in the required way The first set can include the first and third dominoes and and the second set the second and fourth ones and ,Polycarp has dominoes on each domino there are numbers it turns out there will be numbers in total We need to divide numbers each number from to into two sets so that all numbers in each set are different each set will consist of numbers It turns out that all numbers from to must occur exactly times no more and no less Let s imagine it all as a bipartite graph where there are vertices from to and dominoes are edges Since each number occurs exactly times then we have a lot of cycles In which the edges of each number must be included in different sets in other words the cycles must be of even length This can be checked in by a simple enumeration ,1
267,You are given an array with integers and queries Each query is described by two integers Let s define the function The function is defined for only For each query print the maximal value of the function over all ,f two asterisks are in the same row then it is enough to select any other row and place two asterisks in the same columns in it If two asterisks are in the same column then you can do the same If none of the above conditions are met and the asterisks are at positions x1 y1 x2 y2 then you can place two more asterisks at positions x1 y2 x2 y1 ,0
268,Polycarp has invited friends to celebrate the New Year During the celebration he decided to take a group photo of all his friends Each friend can stand or lie on the side Each friend is characterized by two values their height and their width On the photo the th friend will occupy a rectangle if they are standing or if they are lying on the side The th friend can be placed in front of the th friend on the photo if his rectangle is lower and narrower than the rectangle of the th friend Formally of the following conditions must be fulfilled both friends are standing or both are lying one of the friends is standing and the other is lying For example if and then the first friend can be placed in front of the second and one of the them is standing and the other one is lying the third friend can be placed in front of the second and both friends are standing or both are lying In other cases the person in the foreground will overlap the person in the background Help Polycarp for each find any such that the th friend can be located in front of the th friend i e at least one of the conditions above is fulfilled Please note that you do not need to find the arrangement of all people for a group photo You just need to find for each friend any other friend who can be located in front of him Think about it as you need to solve separate independent subproblems ,Note that the first two characters of match the first two characters of The third character of the string again matches the second character of since it is the first character in the second substring which contains the second and the third character of The fourth character matches with the third character of It is easy to notice that such a pattern continues further That is the string consists of the first character and all characters at even positions in ,0
269,Ivan is playing yet another roguelike computer game He controls a single hero in the game The hero has equipment slots There is a list of items for the th slot the th of them increases the hero strength by The items for each slot are pairwise distinct and are listed in the increasing order of their strength increase So For each slot Ivan chooses exactly one item Let the chosen item for the th slot be the th item in the corresponding list The sequence of choices is called The strength of a build is the sum of the strength increases of the items in it Some builds are banned from the game There is a list of pairwise distinct banned builds It s guaranteed that there s at least one build that s not banned What is the build with the maximum strength that is not banned from the game If there are multiple builds with maximum strength print any of them ,Consider the bruteforce solution You start with a build that contains the most powerful item for each slot In one move you swap an item in some slot for the one that is the previous one by power If a build is not banned update the answer with its total power banned builds can be stored in a set maybe hashset if you hash carefully enough Notice that if you reach some unbanned build in this bruteforce it never makes sense to go further The answer is already updated with this one and all the lower ones have smaller power If you code that bruteforce in a smart way or just add memorization you won t visit any build twice How many states will you visit though Since you can only proceed if you are standing in a banned build you will check around builds You can code it like that and get accepted However there s another way that s easier to code in my opinion The optimal answer can be one of only two types Either it contains the last item of each slot Or it s some banned build with one item swapped with the previous one It s easy to see from the solution above So you can check the first type then iterate over the banned build and try swapping each slot in it checking if the resulting build is banned or not Overall complexity or ,1
270,You are given sequences of integers The length of the th sequence equals to You have to choose exactly two sequences and such that you can remove exactly one element in each of them in such a way that the sum of the changed sequence its length will be equal to equals to the sum of the changed sequence its length will be equal to Note that it s to remove exactly one element in each of the two chosen sequences Assume that the sum of the empty of the length equals sequence is ,Formally the problem asks you to remove the shortest cycle from the robot s path Because the endpoint of the path cannot be changed the number of s should be equal to the number of s and the same with and How to find the shortest cycle Let s create the associative array for C which will say for each point of the path the maximum number of operations such that if we apply first operations we will stay at this point Initially this array will contain only the point with the value Let s go over all characters of in order from left to right Let the current point be we applied first operations indexed If this point is in the array already let s try to update the answer with the value and left and right borders with values and correspondingly Then let s assign and continue If there were no updates of the answer the answer is Otherwise you can print any substring you found Time complexity per test case ,0
271,You are given a bracket sequence not necessarily a regular one A bracket sequence is a string containing only characters and A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters and between the original characters of the sequence For example bracket sequences and are regular the resulting expressions are and and and are not Your problem is to calculate the number of regular bracket sequences of length containing the given bracket sequence as a substring consecutive sequence of characters modulo ,Let s root the tree by some vertex The edge where is the parent of is now nice if and only if the subtree of contains either all red vertices of the tree and no blue vertices or all blue vertices of the tree and no red vertices That s because removing that edge splits the tree into the subtree of and the component of every other vertex Thus the task is to calculate the number of red and blue vertices in each subtree with dfs and check a couple of conditions Overall complexity ,0
272,Vlad like everyone else loves to sleep very much Every day Vlad has to do things each at a certain time For each of these things he has an alarm clock set the th of them is triggered on hours minutes every day Vlad uses the hour time format so after comes and after comes This time Vlad went to bed at hours minutes and asks you to answer how much he will be able to sleep until the next alarm clock If any alarm clock rings at the time when he went to bed then he will sleep for a period of time of length ,Notice that the robots that start at even coordinates can never collide with the robots that start at odd coordinates You can see that if a robot starts at an even coordinate it ll be at an even coordinate on an even second and at an odd coordinate on an odd second Thus we ll solve the even and the odd cases separately Sort the robots by their starting coordinate Apparently that step was an inconvenience for some of you There is a common trick that can help you to implement that Create a separate array of integer indices and sort them with a comparator that looks up the value by indices provided to tell the order This gives you the order of elements and doesn t require you to modify the original data in any way Consider the task without reflections of the wall Take a look at the first robot If it goes to the left then nothing ever happens to it Otherwise remember that it goes to the right Look at the next one If it goes to the left then it can collide with the first one if that went to the right Otherwise remember that it also goes to the right Now for the third one If this one goes to the left who does it collide with Obviously the rightmost alive robot that goes to the right So the idea is to keep a stack of the alive robots If a robot goes to the left then check if the stack is empty If it isn t then the top of the stack robot is the one who will collide with it Pop it from the stack since it explodes If a robot goes to the right simply push it to the stack The time of the collision is just the distance between the robots divided by If there are robots left in the stack after every robot is processed then they all go to the right together so they never collide What changes when the reflections are introduced Almost nothing actually Well now if the stack is empty and a robot goes to the left then it behaves as a one going to the right You can reflect the part of the way from its start to the wall Just say that instead of starting at some going to the left it starts at going to the right Since there s no one alive to the left of him initially that will change nothing That should be used for computing the collision time However the final robots in the stack also act differently First the top of the stack robots reflects off the wall and collides with the second on the stack one Then the third and the fourth and so on So you can pop them in pairs until or are left The coordinate reflection trick can be used here as well Imagine that the top of the stack starts at and goes to the left instead of starting in going to the right For the same reason it changes nothing Overall complexity ,0
273,You have wooden staves The th stave has length You have to assemble barrels consisting of staves each you can use any staves to construct a barrel Each stave must belong to exactly one barrel Let volume of barrel be equal to the length of the stave in it You want to assemble exactly barrels with the maximal total sum of volumes But you have to make them so a difference between volumes of any pair of the resulting barrels must not exceed i e for any and Print maximal total sum of volumes of barrels or if it s impossible to satisfy the condition above ,The answer can be calculated by easy formula where is divided by rounded down and is modulo ,0
274,An integer array is being transformed into an array of lowercase English letters using the following prodecure While there is at least one number in the array Choose any number from the array and any letter of the English alphabet Replace all occurrences of number with the letter For example if we initially had an array then we could transform it the following way Choose the number and the letter After that Choose the number and the letter After that Choose the number and the letter After that Choose the number and the letter After that After the transformation all letters are united into a string in our example we get the string Having the array and the string determine if the string could be got from the array after the described transformation ,Let s note that if then must be equal to since we must change the same value to the same letter If we check this for all pairs of and and find no such contradictions then the answer is otherwise We got the solution for for one test case ,1
275,Polycarp has to solve exactly problems to improve his programming skill before an important programming competition But this competition will be held very soon most precisely it will start in days It means that Polycarp has exactly days for training Polycarp doesn t want to procrastinate so he wants to solve at least one problem during each of days He also doesn t want to overwork so if he solves problems during some day he should solve no more than problems during the next day And at last he wants to improve his skill so if he solves problems during some day he should solve at least problem during the next day More formally let be the array of numbers of problems solved by Polycarp The th element of this array is the number of problems Polycarp solves during the th day of his training Then the following conditions must be satisfied sum of all for from to should be should be for each from to the condition should be satisfied for each from to Your problem is to find array of length satisfying the conditions above or say that it is impossible to do it ,In this problem you should simply do what was written in the problem statement There are no tricks ,0
276,Limak is a grizzly bear He is big and dreadful You were chilling in the forest when you suddenly met him It s very unfortunate for you He will eat all your cookies unless you can demonstrate your mathematical skills To test you Limak is going to give you a puzzle to solve It s a well known fact that Limak as every bear owns a set of numbers You know some information about the set The elements of the set are distinct positive integers The number of elements in the set is The number is divisible by All elements are between and inclusive bears don t know numbers greater than For each in the set contains exactly elements that give remainder when divided by That is there are elements divisible by elements of the form elements of the form and so on Limak smiles mysteriously and gives you hints about his set The th hint is the following sentence If you only look at elements that are between and inclusive you will find exactly such elements in my set In a moment Limak will tell you the actual puzzle but something doesn t seem right That smile was very strange You start to think about a possible reason Maybe Limak cheated you Or is he a fair grizzly bear Given and hints check whether Limak can be fair i e there exists at least one set satisfying the given conditions If it s possible then print Otherwise print ,At the beginning to make things simpler we should add a query hint with and then sort queries by Sorted queries hints divide interval into disjoint intervals For each interval we know how many elements should be there Let s build a graph and find a max flow there The answer is YES only if the flow is The first group contains vertices representing possible remainders The second group contains vertices representing intervals Each vertex from should be connected with the source by an edge with capacity Each vertex from should be connected with the sink by an edge with capacity equal to the size of the interval Between each vertex from and from should be an edge with capacity equal to the number of numbers in the interval giving remainder when divided by You can also use see that it s similar to finding matching In fact we can use the Hall s marriage theorem For each of sets of vertices from sets of remainders iterate over intervals and count how many numbers we can take from with remainders from the fixed set of remainders ,1
277,You are given an undirected connected graph some vertices of which contain tokens and or bonuses Consider a game involving one player you You can move tokens according to the following rules At the beginning of the game you can make exactly one turn move any token to any adjacent vertex If the movement of the token ended on the bonus then you are allowed to make another turn with any token You can use different bonuses in any order The same bonus can be used an unlimited number of times Bonuses do not move during the game There can be several tokens in one vertex at the same time but initially there is no more than one token in each vertex The vertex with number is the finish vertex and your task is to determine whether it is possible to hit it with any token by making turns with the tiles according to the rules described above If a token is initially located at the vertex of then the game is considered already won For example for a given graph you can reach the finish line with a chip from the th vertex by making the following sequence of turns Move from the th vertex to the th Move from the th vertex to the th Move from the th vertex to the th Move from the th vertex to the th Move from the th vertex to the nd Move from the th vertex to the th Move from the nd vertex to the st vertex which is the finish ,Let s calculate the shortest paths to the finish along the vertices containing bonuses We will try to reach the finish line with the chip that is closest to it and mark it If there is none we lose Other chips will give her extra moves Find all connected components from vertices containing bonuses Then for each component we find all the tokens that are not selected located at the vertex of this component and at the vertices adjacent to at least one vertex of this component Consider the size of the connectivity component If it is equal to then the chip located in the neighboring vertex gives an additional move Otherwise the chip located at the top of the component or at the neighboring vertex as well as the selected chip will be able to move indefinitely in turn which gives us a victory Otherwise you need to count the number of extra moves and compare it with the shortest distance to the finish line ,1
278, A subsequence is a string that can be derived from another string by deleting some or no symbols without changing the order of the remaining symbols Characters to be deleted are not required to go successively there can be any gaps between them For example for the string the following strings are subsequences and empty string But the following strings are not subsequences and You are given a string consisting of lowercase Latin letters In one move you can take subsequence of the given string and add it to the set The set can t contain duplicates This move costs where is the length of the added subsequence i e the price equals to the number of the deleted characters Your task is to find out the minimum possible total cost to obtain a set of size or report that it is impossible to do so ,This problem can be reduced to one of well known flow problems Projects and Instruments In this problem we have a set of projects we can do each with its cost and a set of instruments each also having some cost Each project depends on some instruments and each instrument can be used any number of times We have to choose a subset of projects and a subset of instruments so that if a project is chosen all instruments that this project depends on are also chosen and we have to maximize the difference between the sum of costs of chosen projects and the sum of costs of chosen instruments The problem about projects and instruments can be solved with the following flow network for each project create a vertex and add a directed edge from the source to this vertex with capacity equal to the cost of this project for each instrument create a vertex and add a directed edge from this vertex to the sink with capacity equal to the cost of this instrument for each project create edges with infinite capacity from the vertex denoting this project to all vertices denoting the required instruments for this project Let s analyze an cut between the source and the sink in this vertex and construct some answer based on this cut as follows if a project vertex belongs to then we take this project if an instrument vertex belongs to then we take this instrument all other projects and instruments are discarded If an edge between some project and some instrument is cut then it means that the answer is incorrect we try to take a project requiring some instrument we don t take and the cut value is infinite Otherwise the value of the cut is equal to the total cost of taken instruments and discarded projects and we need to minimize it So the minimum cut in this network denotes the best answer Reducing the given problem to this problem is easy edges of the given graph are projects vertices of the given graph are instruments Regarding implementation any flow algorithm using capacity scaling should be sufficient It seems that Dinic also passes even though its complexity is ,0
279,You are given two integers and and queries The th query consists of two numbers and and the answer to it is the number of integers such that and Calculate the answer for each query Recall that is the remainder of the division of by For example ,Let s design a naive solution first For each of the given triples we have two options either write the string on the tree in the order from to or in reverse order Some options conflict with each other So we can treat this problem as an instance of 2 SAT create a variable for each of the given strings which is true if the string is not reversed and false if it is reversed find all conflicting pairs of options and then run the usual algorithm for solving 2 SAT Unfortunately the number of conflicting pairs can be up to so we need to improve this solution Let s introduce a variable for each vertex of the tree which will define the character we write on it At first it looks like we can t use these variables in 2 SAT since the number of possible characters is not But if a vertex is covered by at least one path in a triple then there are only two possible characters we can write in this vertex either the character which will land on this position if we write the string from to or the character on the opposite position in the string And obviously if a vertex is not covered by any triple we can write any character on it Okay now for each vertex we have two options for a character and Let the variable be true if we write on vertex and false if we write Also for each triple let s introduce a variable which is true if the string is written from to and false if it is written in reversed order If the vertex is the th one on the path from to then we should add the following constraints in our 2 SAT if we need a constraint NOT OR NOT if we need a constraint OR NOT if we need a constraint NOT OR if we need a constraint OR Thus we add at most constraints in our 2 SAT The only thing we haven t discussed is how to actually restore each path from to this can be done either with any fast algorithm that finds LCA or by searching for LCA naively by ascending from one of those vertices until we arrive at the ancestor of another vertex this approach will visit at most vertices Overall this solution runs in ,0
280,Polycarp plays a computer game In this game the players summon armies of magical minions which then fight each other Polycarp can summon different minions The initial power level of the th minion is and when it is summoned all previously summoned minions power levels are increased by The minions can be summoned in any order Unfortunately Polycarp cannot have more than minions under his control To get rid of unwanted minions after summoning them he may destroy them Each minion can be summoned and destroyed only once Polycarp s goal is to summon the strongest possible army Formally he wants to maximize the sum of power levels of all minions under his control those which are summoned and not destroyed Help Polycarp to make up a plan of actions to summon the strongest possible army ,First of all let s try to find the best strategy to play minions All minions should be summoned if someone is not summoned summoning and deleting it won t make the answer worse the resulting number of minions should be exactly if it is less then we didn t need to delete the last deleted minion Furthermore if some minion should be deleted we can delete it just after it is summoned All these greedy ideas lead to the following structure of the answer we choose minions and summon them in some order we choose minions which will be summoned and instantly deleted we summon the remaining minion Let s analyze how these minions affect the answer The first minion has power and does not give bonus to anyone the second one has power and gives bonus to one minion and so on the th minion from the first group adds to the answer Minions from the second group buff minions each so they add to the answer and the last minion adds Let s unite the first group and the last minion then we will have two groups of minions those which are destroyed the second group and those which are not destroyed the first group From there we will have two possible ways to finish the solution there are minions and positions for them and for each pair minion position we may calculate the value this pair adds to the answer After that we should assign each monster a position in such a way that each position is chosen exactly once and the sum of values is maximized It can be done with mincost flows or Hungarian algorithm the minions from the first group should be played in non descending order of their Let s sort all minions by and write the following dynamic programming is the maximum answer if we considered first minions and of them were assigned to the first group Since the minions are sorted by whenever we add a minion to the first group it should add exactly to the answer and increase by and if a minion is added to the second group the answer is increased by ,1
281, towns are arranged in a circle sequentially The towns are numbered from to in clockwise order In the th town there lives a singer with a repertoire of minutes for each Each singer visited all towns in clockwise order starting with the town he lives in and gave exactly one concert in each town In addition in each town the th singer got inspired and came up with a song that lasts minutes The song was added to his repertoire so that he could perform it in the rest of the cities Hence for the th singer the concert in the th town will last minutes in the th town the concert will last minutes in the th town the duration of the concert will be in the town minutes You are given an array of integer numbers where is the total duration of concerts in the th town Reconstruct any correct sequence of integers or say that it is impossible ,Among two armor sets one with the greater index is always better The same can be said about two different weapons So it is always optimal to use and obtain the best possible weapon or armor This observation allows us to model this problem with dynamic programming or shortest paths let be the minimum time in which Monocarp can obtain the armor and the weapon and in each transition we either get the best weapon we can or the best armor we can Similarly we can build a graph where the vertices represent these pairs and the edges represent getting the best possible weapon armor and find the shortest path from to using BFS Unfortunately it is But we can modify the BFS in the following fashion let s analyze each layer of BFS a layer is a set of vertices with the same distance from the origin In each layer there might be some redundant vertices if two vertices and belong to the same layer and then the vertex is redundant If we filter each layer removing all redundant vertices from it and continuing BFS only from non redundant ones the solution will be fast enough To prove it let s analyze the constraints on the answer Suppose The answer can be bounded as since we can reach the pair in steps using something similar to Fibonacci sequence building and then go from to in steps And the number of non redundant states on each layer is not greater than because of two states with the same weapon or the same armor set at least one is redundant So if we don t continue BFS from redundant vertices it will visit at most vertices There might be another logarithm in the asymptotic complexity of the solution if you use something like a set to store all combinations that synergize well but this implementation is still fast enough ,0
282,Let s call two numbers if their binary representations contain the same number of digits equal to For example and are similar binary representations are and and are similar binary representations are and and are not similar binary representations are and and are similar binary representations are and You are given an array of integers You may choose a non negative integer and then get another array of integers where denotes bitwise XOR Is it possible to obtain an array where all numbers are similar to each other ,Iterating over all possible values of and checking them may be too slow though heavily optimized brute force is difficult to eliminate in this problem so we need to speed this approach up The resulting number consists of bits Let s use the classical meet in the middle trick try all combinations of lowest bits try all combinations of highest bits and somehow merge the results When we fix a combination of lowest bits we fix lowest bits in every Suppose that there are ones among lowest bits of Analogically when we fix a combination of highest bits we fix highest bits in every Suppose that there are ones among highest bits of We want to find a combination of lowest and highest bits such that is the same for each Let s represent each combination of lowest bits with an dimensional vector with coordinates Let s also represent each combination of highest bits with an dimensional vector with coordinates We want to find a combination of lowest bits and a combination of highest bits such that their vectors are opposite We can do so for example by precalculating all vectors for all combinations of lowest bits storing them in a map or a trie iterating on a combination of highest bits and searching for the opposite vector in the map trie ,1
283,We call an array if we can erase not more than one element from it so that the array becomes strictly increasing that is every element is striclty greater than every element before it You are given an array consisting of elements You are allowed to replace any element with any integer number and you may do so any number of times you need What is the minimum number of replacements you have to perform in order to make the array ,Firstly let s calculate for each from to two following values and means the maximum length of the increasing sequence starting in the position and means the maximum length of the increasing sequence ending in the position Initially all values are the element itself The array can be calculated in order from right to left with the following condition if then otherwise it still remain The same with the array but we have to calculate its values in order from left to right and if then otherwise it still remain Having these arrays we can calculate the answer The initial answer if we don t remove any element is the maximum value of the array And if we remove the th element where then we can update the answer with the value if Time complexity ,0
284,Vasya has a multiset consisting of integer numbers Vasya calls some number nice if it appears in the multiset exactly once For example multiset contains nice numbers and Vasya wants to split multiset into two multisets and in such a way that the quantity of nice numbers in multiset would be the same as the quantity of nice numbers in multiset the quantity of numbers to appear exactly once in multiset and the quantity of numbers to appear exactly once in multiset ,Let s look at the answer Let s see how many commands the robot can execute Since the robot breaks goes outside the field if any command causes it to break it either leads to its total shift relative to of exactly to the left or exactly to the right or similarly of exactly up or exactly down Denote by and the sum of the maximum positive right down and maximum negative left up shifts in the corresponding direction By adding up the above constraints we get the fact that the robot will not fall off the board only if and Note that the reverse is also true if both these conditions are satisfied then starting from the point where is the maximum shift along the direction the robot will not pass any of the board s edges Thus it is sufficient to find the number of commands which when executed hold the following invariant The horizontal shift can be calculated as the difference between the number of letters and the number of letters encountered Similarly the vertical shift as the difference of the numbers of and Let s iterate over the sequence of commands maintaining relevant values of for all After executing each command if the robot goes farther in some direction than ever before we update the corresponding Either we reach the end of or we meet a command after which either becomes equal to or becomes equal to and the robot breaks so the previous command was the last one successfully executed The possible answer is where the values are calculated one command before the robot broke ,0
285,Given an integer find any array of nonnegative integers less than such that the bitwise XOR of the elements on odd indices equals the bitwise XOR of the elements on even indices ,There are a lot of solutions to this problem Here I will describe one of them First we observe that having the XOR of even indexed numbers and odd indexed numbers equal is equivalent to having the XOR of all the elements equal to 0 Let s note with the XOR of all odd indexed numbers and the xor of all even indexed numbers Notice that the XOR of all the array equals if and only if a b So how do we generate such an array with XOR of all elements Our first instinct might be to arbitrarily generate the first numbers then set the last element as the XOR of the first ensuring that the total XOR is However we might have problems with the condition that all elements must be distinct Let s arbitrarily set the first so that they don t have the highest bit set and then the th number can be just The last number can be the XOR of the first XOR the th number you will be sure that the last number has not occurred in the first elements because they don t have the highest bit set while the last number must have the highest bit set But how do we know that the th number and the th number will not be equal This occurs only if the total XOR of the first numbers equals To fix this we can just choose a different arbitrary number in one of the spots For example my solution checks if the XOR of the numbers is If it is not great We can use the simple solution without any changes However if the XOR is I use the numbers in their place These two sequences have different XORs so it ensures that one of them always works ,1
286,Mishka started participating in a programming contest There are problems in the contest Mishka s problem solving skill is equal to Mishka arranges all problems from the contest into a list Because of his weird principles Mishka only solves problems from one of the ends of the list Every time he chooses which end left or right he will solve the next problem from Thus each problem Mishka solves is either the leftmost or the rightmost problem in the list Mishka cannot solve a problem with difficulty greater than When Mishka solves the problem it disappears from the list so the length of the list decreases by Mishka stops when he is unable to solve any problem from any end of the list How many problems can Mishka solve ,You can iterate over all the elements of the array from left to right Count the number of problems Mishka will solve from the left end of the list and break if he cannot solve the next one Let s denote the number of problems Mishka will solve from the left end of the list by Do the same thing independently from right to left Denote the number of problems Mishka will solve from the right end of the list by Then the answer is Time complexity ,1
287,You are given a circular array with elements The elements are numbered from some element with values from to in clockwise order The th cell contains the value The robot Simba is in cell Each moment of time the robot is in some of the cells at the begin he is in In one turn the robot can write out the number written in current cell or move to the adjacent cell in clockwise or counterclockwise direction To write out the number from the cell Simba doesn t spend any time but to move to adjacent cell Simba spends one unit of time Simba wants to write the number from each cell one time so the numbers will be written in a non decreasing order Find the least number of time units to write out all numbers ,We can process the cases of zero or one swap in time Consider the case with two swaps Note we can assume that two swaps will lead to move two elements from to and vice versa in other case it is similar to the case with one swap Let s iterate over all the pairs of the values in and store them in some data structure in C we can user map Now let s iterate over all the pairs and find in out data structure the value closest to the value and update the answer by the value Required sum we can find using binary search by data structure map in C has lower bound function ,0
288,You are given a permutation of length Also you are given foe pairs Your task is to count the number of different intervals that do not contain any foe pairs So you shouldn t count intervals that contain at least one foe pair in it the positions and order of the values from the foe pair are not important Consider some example and foe pairs are The interval is incorrect because it contains a foe pair The interval is also incorrect because it contains two foe pairs and But the interval is correct because it doesn t contain any foe pair ,The key idea of the task is to prove that there is an optimal answer where the chosen elements in has a period equal to Let s work with instead of Firstly let s prove that if we ve chosen correct set in interval then if we take all then set will be corect as well By contradiction suppose we have then or contradiction It means that if we take the correct set in interval we can create a periodic answer by copying this interval several times Next let s prove that there is an optimal periodic answer Let s look at any optimal answer and its indicator vector binary vector of length where iff is in the set Let Let s split the vector in intervals The st rd th segments have length and nd th segments have length If we choose any two consecutive segments its total length will be equal to and we can use it to make periodic answer by replacing all length segments with the chosen one and segments with the other one We can prove that we can always find such two consecutive segments that the induced answer will be greater or equal to the initial one If we create vector where is equal to the sum of in the th segment then the task is equivalent to finding and such that replacing all by and all by won t decrease array sum The proof is down below Now since the answer is periodical taking element is equivalent to taking all elements so for each we can calc the number of integers with the same remainder And for each we either take it or not So we can write where is the maximum sum if we processed elements and last elements are described by mask We start with and when look at the th element either take it if we can or skip it Time complexity is Let s prove that for any array we can find pair such that replacing all with and all with won t decrease the total sum Let s define and Let s make array where and The meaning behind is how changes the total sum if we replace corresponding elements by Note that finding a good pair is equivalent to finding Also note that and analogically Let s prove by contradiction suppose that for any Let s look at But from the other side we know that so otherwise will be negative In the same way since then Analogically we can prove that each but contradiction So there is always a pair i e a pair ,0
289,You are given an array consisting of integers You want to split it into exactly such that each subsegment has odd sum i e for each subsegment the sum of all elements that belong to this subsegment is odd It is impossible to rearrange shuffle the elements of a given array Each of the elements of the array must belong to exactly one of the subsegments Let s see some examples of dividing the array of length into subsegments not necessarily with odd sums is the initial array then all possible ways to divide it into non empty non intersecting subsegments are described below Of course it can be impossible to divide the initial array into exactly subsegments in such a way that each of them will have odd sum of elements In this case print Otherwise print and possible division of the array See the output format for the detailed explanation You have to answer independent queries ,Firstly let be the number of odd elements in the array Note that even elements are don t matter at all because they cannot change the parity of the sum If then it is obviously impossible to split the given array into subsegments with odd sum And if then it is impossible to split the array into subsegments with odd sum also because at least one of segments will have even number of odd elements so will have odd sum In other cases the answer is always and you can print leftmost positions of odd elements and as right borders of segments it means that when you find one odd element you end one segment Because now the last segment will have odd number of odd elements so it will have odd sum also ,1
290,You are given four integer values and Check if there exists a string that contains letters letters letters no other letters exactly pairs of adjacent equal letters exactly such positions that the th letter is equal to the th one ,Let s start with a simple assumption For some fixed values the values of that the answers exist for make up a range So there s the smallest possible number of adjacent equal pairs one can construct and the largest one everything in between exists as well The largest number is simple put all A s then all B s then all C s So this value is The smallest number is trickier Let s instead investigate when it s equal to WLOG assume Imagine the following construction There are letters C which separate blocks of letters A and B There are if you consider the ones to the sides of all letters C but we want the smallest value so we shouldn t consider them such blocks thus it s possible that each block contains no more than one letter A and no more than one letter B So letters A and B will never produce adjacent pairs If there are empty blocks then there are adjacent letters C So the condition to still have no empty blocks is to have at least letters A and B in total If then any extra letter C can only be put adjacent to another letter C thus producing an extra pair at least one extra pair but since we are examining the lower bound we can always do exactly one That means that the lower bound is Now for the proof of the fact that every value in between is also achievable Since we have a construction for let s try modifying it Let s reduce the test to the following way While decrease the count of the letter that appears the most by and decrease by Now build the string for with the reduced values After that put the letters back placing them next to the last occurrence of the same letter there is at least one occurrence of each letter the proof is trivial That increases by and the count of this letter by Thus we ll return to the initial test Overall complexity per testcase ,1
291,You are given four different integer points and on grid In one step you can choose one of the points and move it in one of four directions by one In other words if you have chosen point you can move it to or Your goal to move points in such a way that they will form a square with sides parallel to and axes a square with side is allowed What is the minimum number of steps you need to make such a square ,Use greedy approach in this problem At first match such pairs that colors are exactly the same and they are specific not indefinite After it match each indefinite colored left boot if any with any specific colored right boot Possibly some indefinite colored left boots stay unmatched Similarly match each indefinite colored right boot if any with any specific colored left boot And finally match indefinite colored left and right boots if any ,0
292,Monocarp is playing a game Assimilation IV In this game he manages a great empire builds cities and conquers new lands Monocarp s empire has cities In order to conquer new lands he plans to build The game is turn based and since Monocarp is still amateur he builds exactly one Monument per turn Monocarp has points on the map he d like to control using the constructed Monuments For each point he knows the distance between it and each city Monuments work in the following way when built in some city a Monument controls all points at distance at most to this city Next turn the Monument controls all points at distance at most the turn after at distance at most and so on Monocarp will build Monuments in turns and his empire will conquer all points that are controlled by at least one Monument Monocarp can t figure out any strategy so during each turn he will choose a city for a Monument randomly among all remaining cities cities without Monuments Monocarp wants to know how many points among of them he will conquer at the end of turn number Help him to calculate the expected number of conquered points ,Let be the indicator function equal to if the th point is controlled by any city and otherwise Then the expected number of controlled points can be written as by linearity of expected value The expected value of the indicator function is equal to the probability of this function equal to In other words for each point we need to calculate the probability of this point being controlled by any city Let s instead calculate the probability of point not being controlled by any city Suppose the distance between point and some city is equal to If we build a Monument in city at step zero indexed then the point will be controlled by city But building the Monument at any step greater or equal than is fine Let s for each turn calculate the number of cities that you can build Monument in starting this turn as Our task is to calculate the number of permutations that are consistent with array At first turn we can choose one of cities at second turn we have choices at third step choices and so on Using this idea it s not hard to calculate the number of good permutations and then the initial probablity The expected value ,1
293,New Year is coming Vasya has prepared a New Year s verse and wants to recite it in front of Santa Claus Vasya s verse contains parts It takes seconds to recite the th part Vasya can t change the order of parts in the verse firstly he recites the part which takes seconds secondly the part which takes seconds and so on After reciting the verse Vasya will get the number of presents equal to the number of parts he fully recited Vasya can skip at most one part of the verse while reciting it if he skips more than one part then Santa will definitely notice it Santa will listen to Vasya s verse for no more than seconds For example if and Vasya skips the first part of verse then he gets two presents Note that it is possible to recite the whole verse if there is enough time Determine which part Vasya needs to skip to obtain the maximum possible number of gifts If Vasya shouldn t skip anything print If there are multiple answers print any of them You have to process test cases ,We can solve the problem recursively from the root to the leaves Let s maintain a list of leaf indices for the current subtree If the list size is equal to then we can stop our recursion Otherwise we have to find the value of the root of the current subtree and split all leaves between child nodes The root value is the maximum value of among all pairs belonging to a subtree since the current root has at least child nodes there is a pair of leaves for which the current root is the least common ancestor If the value of the least common ancestor of the leaves and is less than the value of the current root then and belong to the same child of the root Using this fact we can split all the leaves between the child nodes and then restore the subtrees for them recursively ,0
294,Polycarp was given a row of tiles Each tile contains one lowercase letter of the Latin alphabet The entire sequence of tiles forms the string In other words you are given a string consisting of lowercase Latin letters Initially Polycarp is on the tile of the row and wants to get to the tile by jumping on the tiles Jumping from th tile to th tile has a cost equal to where is the index of the letter in the alphabet for example Polycarp wants to get to the th tile for the minimum total cost but at the same time make number of jumps In other words among all possible ways to get to the last tile for the total cost he will choose the one with the number of jumps Polycarp can visit each tile Polycarp asks you to help print the sequence of indices of string on which he should jump ,It s worth knowing that ways like and have the same cost That is first you need to understand the letter on the first tile and the last one conditionally the letters and Then you just need to find all such tiles on which the letters are between the letters and inclusive We go through each letter from to and for each letter we visit every tile that has a given letter but we must not forget to start exactly at tile and end at tile ,1
295,Little girl Tanya is learning how to decrease a number by one but she does it wrong with a number consisting of two or more digits Tanya subtracts one from a number by the following algorithm if the last digit of the number is non zero she decreases the number by one if the last digit of the number is zero she divides the number by 10 i e removes the last digit You are given an integer number Tanya will subtract one from it times Your task is to print the result after all subtractions It is guaranteed that the result will be positive integer number ,In this problem you just need to simulate the process described in the statement i e times repeat the following operation if then else and print the result ,1
296,You are given a weighted tree undirected connected graph with no cycles loops or multiple edges with vertices The edge has weight Also each vertex has its own value assigned to it Let s call a path starting in vertex and ending in vertex where each edge can appear no more than twice regardless of direction a Vertices can appear in the 2 path multiple times even start and end vertices For some 2 path profit where is the number of times edge appears in That is vertices are counted once but edges are counted the number of times they appear in You are about to answer queries Each query is a pair of vertices For each query find 2 path from to with maximal profit ,Let s solve this task in several steps Step 1 Calculate for each vertex Let be maximal profit of some 2 path starting at and finishing at If vertex is a root of the tree then equivalent to where maximal profit of 2 path when we can go only in subtree of The can be calculated with next approach To calculate we can use next technique Let s manage next invariant when processing vertex all its neighbours even parent will hold as if its parent Then After that we can proceed with each child of but before moving to it we must change value since we must keep invariant true To keep it true it s enough to set Also let s memorize value as Step 2 Processing queries Let simple path be If then answer is Otherwise each edge on this simple path must be used exactly once But while travelling from to using this simple path at each vertex we can go somewhere and return to the only condition is not use edges from simple path And we can do it using precalculated values and So if we want to find max profit of 2 path with prohibited edges so we can use value Finally to process queries let s find divide it on two queries Now we can handle all queries offline travelling on tree in dfs order Let s manage some data structure on current path from current vertex to the root this DS can be based on array of depths Then when we come to vertex just add value to DS in position and erase it before exit Each query becomes a query of sum to some subsegment in DS don t forget carefully handle value in lca And before moving from to you need subtract from current value of here you can at once subtract weight of edge Don t forget to return each change in DS when it needed As we can see DS is just a BIT with sum on segment and change in position Result complexity is Fast IO are welcome ,1
297,There are cities and roads in Berland Each road connects a pair of cities The roads in Berland are one way What is the minimum number of new roads that need to be built to make all the cities reachable from the capital New roads will also be one way ,This problem is almost equivalent to the following count the number of sources the vertices with indegree equal to in the given graph s condensation Thus there exist solutions with complexity However the constraints in the problem are small so solutions with complexity also pass One of these solutions is the following first let s mark all the vertices reachable from as using a simple DFS Then for each bad vertex count the number of vertices reachable from it also can be done by simple DFS Let this number be Now iterate over all bad vertices in non increasing order of For the current bad vertex if it is still not marked as run a DFS from it marking all the reachable vertices as and increase the answer by in fact we are implicitly adding the edge It can be proved that this solution gives an optimal answer ,1
298,Let be an array of integers Let s define as a minimal size of a partition of into subsegments such that all elements in each subsegment are equal For example using next partition Now you don t have any exact values of but you know that can be any integer value from uniformly at random All are independent Calculate expected value of or It s guaranteed that the expected value can be represented as rational fraction where so print the value ,As usual with tasks on an expected value let s denote as indicator function if and otherwise Then we can note that Now we can make some transformations Now we d like to make some casework if and aren t consecutive then and are independent that s why if then need further investigation For the simplicity let s transform segment to by increasing Let s denote as the probability that and Let s denote In result The final observation is the following is equal to the probability that and and can be calculated by inclusion exclusion principle where In result and can be calculated in time ,1
299,Authors guessed an array consisting of integers each integer is not less than and not greater than You don t know the array but you know the array which is formed from it with the following sequence of operations Firstly let the array be equal to the array Secondly for each from to if is a number then one integer is appended to array where is an infinite sequence of prime numbers otherwise if is not a number the greatest divisor of which is not equal to is appended to Then the obtained array of length is shuffled and given to you in the input Here means the th prime number The first prime the second one is and so on Your task is to recover suitable array that forms the given array It is guaranteed that the answer exists so the array is obtained from some suitable array If there are multiple answers you can print any ,Firstly let s generate first primes It can be done in almost naively just check all elements in range It also can be done with Eratosthenes sieve in or We also can calculate for each number in this range the maximum its divisor non equal to it if this number is not a prime And in other case we can calculate the index of this prime Using all this information we can restore the array Let s maintain a multiset a set in which multiple copies of the same element are allowed of all elements in While it is not empty let s take the maximum element from this set If it is prime we can check it using the information calculated earlier then it is some Let s find the index of this prime using calculated information remove this element and push in and continue Otherwise this element is not a prime and then it is some Let s remove it and its maximum divisor non equal to it from the multiset push in and continue ,1
300,A positive integer number is written on a blackboard It consists of not more than digits You have to transform it into a number by erasing some of the digits and you want to erase as few digits as possible The number is called beautiful if it consists of at least one digit doesn t have leading zeroes and is a multiple of For example are beautiful numbers and are not Write a program which for the given will find a beautiful number such that can be transformed into this number by erasing as few digits as possible You can erase an arbitraty set of digits For example they don t have to go one after another in the number If it s impossible to obtain a beautiful number print If there are multiple answers print any of them ,Let s declare a function which takes number as a string and erases minimal number of digits in substring from nd to last character to obtain beautiful number Note that if the answer for given string exists then this function will erase no more than digits If the number is divisible by then sum of its digits is also divisible by So here are the only options for the function Sum of digits is already equal to modulo Thus you don t have to erase any digits There exists such a digit that equals sum modulo Then you just have to erase this digit All of the digits are neither divisible by nor equal to sum modulo So two of such digits will sum up to number which equals sum modulo Let positions of non zero numbers be Then you can easily see that its enough to check only three function outputs on substrings We imply that all digits to the left of the taken non zero digit are erased As we can erase no more than digits these options will cover all the cases If there exists no answer for any of substrings than you need to check if the number contains it will be answer in that case If there is no then answer is Otherwise the answer is the function output of maximal length Overall complexity ,1
301,Polycarp got the following problem given a grid strip of size some cells of it are blocked You need to check if it is possible to tile all free cells using the and tiles dominoes For example if and the strip looks like this black cells are blocked Then it can be tiled for example using two vertical and two horizontal tiles as in the picture below different tiles are marked by different colors And if and the strip looks like this It is impossible to tile free cells Polycarp easily solved this task and received his New Year s gift Can you solve it ,Let s prove that division possible if and only if union of all segments has two and more segments If the union have at least two segments then we can choose one of them and put all segments it contains in one group and other segments to another group On the other hand if we can divide all segments in two groups in such way that there are no pair from different group which intersects then union of segments from the first group doesn t intersect union of segments from another and union of unions consists of several non intersecting components How can it help If union of segments consits of several segments then exists such that for any segment either or and both parts are non empty Moreover equals to one of It leads us straight to one of possible solutions sort all segments by in increasing order and for each we should check that suffix minimum If we ve found such then all prefix goes to one group and suffix to another ,0
302,Taisia has six sided dice Each face of the die is marked with a number from to each number from to is used once Taisia rolls all dice at the same time and gets a sequence of values where is the value on the upper face of the th dice The sum of this sequence is equal to Suddenly Taisia s pet cat steals exactly dice with value and calculates the sum of the values on the remaining dice which is equal to You only know the number of dice and the values of Restore a possible sequence that fulfills the constraints ,Any non empty balanced string contains at least one letter and at least one letter That implies that there s an adjacent to a somewhere in that string Both strings and are balanced Thus any balanced string contains a balanced substring of length So the solution is to check all pairs of adjacent letters If there exists a pair of different ones print it Overall complexity per testcase ,0
303,You are standing at the point on a coordinate line Your goal is to reach the point In one minute you can move by or by to the left or to the right i e if your current coordinate is it can become or Note that the new coordinate can become negative Your task is to find the number of minutes required to get from the point to the point You have to answer independent test cases ,If the answer is we can t get so we can move by to the right and by to the left If or the answer is obviously Otherwise the answer is always We can t get the answer less than this value because we need at least moves to get to the point greater than or equal to and we can always get this answer by the recurrence ,1
304,There are robots driving along an OX axis There are also two walls one is at coordinate and one is at coordinate The th robot starts at an integer coordinate and moves either left towards the or right with the speed of unit per second No two robots start at the same coordinate Whenever a robot reaches a wall it turns around instantly and continues his ride in the opposite direction with the same speed Whenever several robots meet at the same coordinate they collide and explode into dust Once a robot has exploded it doesn t collide with any other robot Note that if several robots meet at a non integer coordinate nothing happens For each robot find out if it ever explodes and print the time of explosion if it happens and otherwise ,Notice that the robots that start at even coordinates can never collide with the robots that start at odd coordinates You can see that if a robot starts at an even coordinate it ll be at an even coordinate on an even second and at an odd coordinate on an odd second Thus we ll solve the even and the odd cases separately Sort the robots by their starting coordinate Apparently that step was an inconvenience for some of you There is a common trick that can help you to implement that Create a separate array of integer indices and sort them with a comparator that looks up the value by indices provided to tell the order This gives you the order of elements and doesn t require you to modify the original data in any way Consider the task without reflections of the wall Take a look at the first robot If it goes to the left then nothing ever happens to it Otherwise remember that it goes to the right Look at the next one If it goes to the left then it can collide with the first one if that went to the right Otherwise remember that it also goes to the right Now for the third one If this one goes to the left who does it collide with Obviously the rightmost alive robot that goes to the right So the idea is to keep a stack of the alive robots If a robot goes to the left then check if the stack is empty If it isn t then the top of the stack robot is the one who will collide with it Pop it from the stack since it explodes If a robot goes to the right simply push it to the stack The time of the collision is just the distance between the robots divided by If there are robots left in the stack after every robot is processed then they all go to the right together so they never collide What changes when the reflections are introduced Almost nothing actually Well now if the stack is empty and a robot goes to the left then it behaves as a one going to the right You can reflect the part of the way from its start to the wall Just say that instead of starting at some going to the left it starts at going to the right Since there s no one alive to the left of him initially that will change nothing That should be used for computing the collision time However the final robots in the stack also act differently First the top of the stack robots reflects off the wall and collides with the second on the stack one Then the third and the fourth and so on So you can pop them in pairs until or are left The coordinate reflection trick can be used here as well Imagine that the top of the stack starts at and goes to the left instead of starting in going to the right For the same reason it changes nothing Overall complexity ,1
305,You are given an array consisting of integers You can remove element from this array Thus the final length of the array is or Your task is to calculate the maximum possible length of the contiguous subarray of the remaining array Recall that the contiguous subarray with indices from to is The subarray is called strictly increasing if ,First of all let s try to solve the following problem given a DAG cover its vertices with the minimum number of vertex disjoint paths Solving this problem allows us to calculate the number of goblins that can pillage all of the halls when the tunnel network is fixed This problem is a fairly classical one since the number of vertices in each path is greater than the number of arcs in it exactly by we should take the maximum possible number of arcs into our paths So we can reduce this problem to bipartite maximum matching build a bipartite graph where each part consists of vertices and for every directed arc in the original graph connect the vertex of the left part to the vertex in the right part of the bipartite graph The maximum matching in this graph allows us to pick the maximum number of arcs into the paths of the original problem the matching ensures that each vertex has at most one chosen ingoing arc and at most one chosen outgoing arc so the paths are vertex disjoint Okay now we at least can check if the goblin wave can pillage all of the halls Let s say that the minimum number of goblins required to pillage the original city is Obviously in order to pass the th wave and waves after it we have to increase this number In one minute Monocarp can block all of the tunnels leading to some hall or out of some hall and in terms of our reduction to the bipartite matching problem it means that we remove all edges connected to some vertex of the bipartite graph Obviously in one minute we can increase by at most since is equal to the difference between and the maximum matching size It turns out that it s always possible to choose a vertex that belongs to all maximum matchings in the bipartite graph note that it doesn t work in non bipartite graphs but in our problem it doesn t matter For the proof of this fact you can check the last paragraph of the editorial So each minute Monocarp prepares for a wave he increases the maximum number of goblins he can repel by Now the solution splits into two much easier parts The first part is finding a sequence in which Monocarp blocks the tunnels so that each his action reduces the size of the maximum matching by Since the constraints are small even a naive approach in always iterate on the vertex we try to remove from the graph and check that removing it is possible by running Kuhn s algorithm is fast enough The second part is to choose when Monocarp calls waves of goblins and when he prepares for them this can be easily done with dynamic programming let be the maximum Monocarp s score if he has already passed waves and the current size of the maximum matching is The most naive implementation of this dynamic programming runs in so the whole solution works in We can improve it to though it is not needed under these constraints Instead of finding the vertices to remove from the bipartite graph one by one let s find all of them at once in Recall that the size of maximum matching in a bipartite graph is equal to the size of its minimum vertex cover and the minimum vertex cover can be reconstructed after finding the maximum matching If we remove a vertex from the minimum vertex cover the size of the minimum vertex cover of the remaining graph is reduced by so the size of the maximum matching is reduced by as well It means that we can always choose to remove a vertex from the minimum vertex cover we found By the way it also proves that it s always possible to remove a vertex from a bipartite graph so the size of the maximum matching decreases by obviously if it s not already ,0
306,The sequence is sent over the network as follows sequence is split into segments each element of the sequence belongs to exactly one segment each segment is a group of consecutive elements of sequence for each segment its length is written next to it either to the left of it or to the right of it the resulting sequence is sent over the network For example we needed to send the sequence Suppose it was split into segments as follows Then we could have the following sequences If a different segmentation had been used the sent sequence might have been different The sequence is given Could the sequence be sent over the network In other words is there such a sequence that converting to send it over the network could result in a sequence ,The first solution is some kind of a straight forward understanding the problem Let s do binary search on the answer So our problem is to find the smallest such that the suffix of the array starting from the position can be packed in boxes It is easy to see that if we can do it for some then we always can do it for And to find the answer for the fixed we have to simulate the process described in the problem statement starting from the position Okay this is solution The second solution is more interesting than the first one The approach is to reverse the initial array simulate the process from the first position of reversed array and then all the objects we can pack are in the best answer and there is no better answer at all Why it works Let s take a look on the last box in the best answer if we will go from left to right in the initial array Let objects in this box be What do we see So all these objects are fit in the last box obviously Now if we will iterate over objects from right to left these objects will fit also It means that we cannot do worse by such a transform reversing at least for the last box But what will happen if we can put some of the previous objects in this box Well it will not make worse for this box but what about next boxes previous boxes in straight notation Let objects in the penultimate box be What do we see These objects are fit in this box obviously again What will happen if we will put in the last box one or more objects of this box Then the border of objects which we will put in it will not increase because we the number of object in this box So we can see that for previous boxes this condition is also satisfied So we can solve the problem with this approach Time complexity of this solution is ,0
307,Magnus decided to play a classic chess game Though what he saw in his locker shocked him His favourite chessboard got broken into pieces each of size by is And what s even worse some squares were of wrong color th square of the th row of th piece of the board has color being black and being white Now Magnus wants to change color of some squares in such a way that he recolors minimum number of squares and obtained pieces form a valid chessboard Every square has its color different to each of the neightbouring by side squares in a valid board Its size should be by You are allowed to move pieces but ,Since is odd exactly pieces of the board will have upper left corner colored black and exactly white Let s check every option to choose two pieces of the board so their upper left corners will be painted white when we assemble the board calculate the number of board cells that have to be recolored and find the minimum of this value among all possible choices ,1
308,There are programmers that you want to split into several non empty teams The skill of the th programmer is You want to assemble the maximum number of teams from them There is a restriction for each team the number of programmers in the team multiplied by the minimum skill among all programmers in the team must be at least Each programmer should belong to at most one team Some programmers may be left without a team Calculate the maximum number of teams that you can assemble ,The problem can be solved using a greedy algorithm We will maintain the current layout of the keyboard with letters that have already been encountered in the string and the current position on the layout If the next letter of the string is already on the layout it must be adjacent to the current one otherwise there is no answer If there was no such letter yet we can add it to the adjacent free position if both of them is occupied then there is no answer At the end you have to add letters that were not in the string ,0
309,You are given integers A sequence of integers is called a if for every the number of ones in the binary representation of the number s is a multiple of and for all The symbol is used for the binary exclusive or operation How many of length exist Output the answer modulo ,Let be the number of xor sequences of length with the last element equal to Let be equal to one if contains the number of ones in binary presentation that is multiple of three Otherwise let be equal to zero Consider a vectors and a matrix Easy to see that So Let s use the associative property of matrix multiplication at first let s calculate with binary matrix exponentiation and then multiply it to the vector ,1
310,Igor is a post graduate student of chemistry faculty in Berland State University BerSU He needs to conduct a complicated experiment to write his thesis but laboratory of BerSU doesn t contain all the materials required for this experiment Fortunately chemical laws allow material transformations yes chemistry in Berland differs from ours But the rules of transformation are a bit strange Berland chemists are aware of materials numbered in the order they were discovered Each material can be transformed into some other material or vice versa Formally for each there exist two numbers and that denote a possible transformation kilograms of material can be transformed into kilogram of material and kilogram of material can be transformed into kilogram of material Chemical processing equipment in BerSU allows only such transformation that the amount of resulting material is For each Igor knows that the experiment requires kilograms of material and the laboratory contains kilograms of this material Is it possible to conduct an experiment after transforming some materials or none ,First Consider the sum If we substitute the formula of then for every the coefficient at will be equal to so we can find the sum of all is equal to If the sum of isn t divisible by then the answer is Now let s consider the difference between two neighboring towns so If the value of we found isn t a positive integer then the answer if Otherwise we can find a single value of for every It s easy to see that these values are correct Overall complexity per testcase ,0
311,You are given a rooted tree consisting of vertices numbered from to The root is vertex There is also a string denoting the color of each vertex if then vertex is black and if then vertex is white A subtree of the tree is called balanced if the number of white vertices equals the number of black vertices Count the number of balanced subtrees A is a connected undirected graph without cycles A is a tree with a selected vertex which is called the In this problem all trees have root The tree is specified by an array of parents containing numbers is the parent of the vertex with the number for all The parent of a vertex is a vertex that is the next vertex on a simple path from to the root The of a vertex is the set of all vertices that pass through on a simple path to the root For example in the picture below is in the subtree of because the simple path passes through Note that a vertex is included in its subtree and the subtree of the root is the entire tree The picture shows the tree for and The subtree at the vertex is balanced ,Coordinates don t exceed so it s possible to use sweep line method to solve the problem Let s calculate value separately for each side I will show the algorithm for left side and all the others will be done similarly Let be the number of sofas which has smaller of their coordinates less than or equal to To count that let s firstly increment by one for all sofas and then proceed from left to right and do Now will represent number of sofas to the left of the current one but the sofa itself can also be counted You need to decrement the result by one if The same is for top value but with coordinates insted of For the right and bottom values you should calculate and Then take and The only thing left is to compare values of each sofa with given ones and find the suitable sofa Overall complexity ,0
312,One very important person has a piece of paper in the form of a rectangle Also he has seals Each seal leaves an impression on the paper in the form of a rectangle of the size Each impression must be parallel to the sides of the piece of paper but seal can be rotated by 90 degrees A very important person wants to choose two different seals and put them two impressions Each of the selected seals puts exactly one impression Impressions should not overlap but they can touch sides and the total area occupied by them should be the largest possible What is the largest area that can be occupied by two seals ,If you can place two rectangles in some way without rotations then it s always possible to move one of them to the top left corner and stick the other either to the bottom of the first and push it all the way to the left or to the right of it and push it all the way to the top Now let s try all possible reorderings and rotations for every pair of seals If there is at least one correct reordering then update the answer Overall complexity ,1
313,You are given an array of integers and a set of distinct integers from to In one operation you may choose two integers and can be any integer and assign This operation can be done only if does not belong to the set Calculate the minimum number of operations you should perform so the array is increasing that is or report that it is impossible ,First let s solve the problem without blocked positions Let s look at the array Obviously if strictly increases then does not decrease and vice versa Now we have to find the maximum number of positions in the array that can be left unchanged And you can always choose an integer that will not break the non decreasing array for the rest of positions This problem can be solved in by analogy with the largest increasing subsequence but now you can take equal elements Now you can realize that the segments between two blocked positions do not depend on each other and the initial problem can be solved as the problem described above All that remains is to check that all blocked positions do not break the strict array increment ,1
314, Let s call a positive integer if its decimal representation without leading zeroes contains even number of digits and there exists a permutation of this representation which is palindromic For example is a beautiful number since it contains digits and there exists a palindromic permutation Given a positive integer find the largest beautiful number which is less than ,Let s look at the answer Let s see how many commands the robot can execute Since the robot breaks goes outside the field if any command causes it to break it either leads to its total shift relative to of exactly to the left or exactly to the right or similarly of exactly up or exactly down Denote by and the sum of the maximum positive right down and maximum negative left up shifts in the corresponding direction By adding up the above constraints we get the fact that the robot will not fall off the board only if and Note that the reverse is also true if both these conditions are satisfied then starting from the point where is the maximum shift along the direction the robot will not pass any of the board s edges Thus it is sufficient to find the number of commands which when executed hold the following invariant The horizontal shift can be calculated as the difference between the number of letters and the number of letters encountered Similarly the vertical shift as the difference of the numbers of and Let s iterate over the sequence of commands maintaining relevant values of for all After executing each command if the robot goes farther in some direction than ever before we update the corresponding Either we reach the end of or we meet a command after which either becomes equal to or becomes equal to and the robot breaks so the previous command was the last one successfully executed The possible answer is where the values are calculated one command before the robot broke ,0
315,Vlad came home and found out that someone had reconfigured the old thermostat to the temperature of The thermostat can only be set to a temperature from to inclusive the temperature cannot change by less than Formally in one operation you can reconfigure the thermostat from temperature to temperature if and You are given and Find the minimum number of operations required to get temperature from temperature or say that it is impossible ,First let s consider the cases when the answer exists If then the thermostat is already set up and the answer is else if then it is enough to reconfigure the thermostat in operation else if exist such temperature that and then you can configure the thermostat in operations If such exists between and we can chose one of bounds or we need to make operations if times if we cannot reconfigure through one of the boundaries as above but we can through both or If we can t get the temperature in one of these ways the answer is ,1
316,You are given points on a line with their coordinates Find the point so the sum of distances to the given points is minimal ,The function of the total distance is monotonic between any pair of adjacent points from the input so the answer is always in some of the given points We can use that observation to solve the problem by calculating the total distance for each point from the input and finding the optimal point The other solution uses the observation that the answer is always is the middle point by index in the sorted list of the given points The last fact is also can be easily proven ,1
317,There is a grid consisting of rows and columns The rows are numbered from to from top to bottom The columns are numbered from to from left to right The robot starts in a cell In one second it can perform either of two actions move into a cell adjacent by a side up right down or left remain in the same cell The robot is not allowed to move outside the grid Initially all cells except for the cell are locked Each cell contains a value the moment that this cell gets unlocked The robot can only move into a cell if at least seconds have passed before the move The robot should visit all cells cell is considered entered at the start It can finish in any cell What is the fastest the robot can achieve that ,Let s first consider the possible paths across the grid that visit all cells You can immediately think of two of them The first one is go right to the wall turn into the other row and return Let s call it a hook The second one is go down go right go up go right and so on Let s call it a snake Turns out these two are basically the two extremes of all paths You can start with a snake and turn into a hook when you wish You can see that once you move right twice in a row you can only continue with a hook And as long as you didn t move right twice you are just doing a snake Let s fix some path across the grid What will its minimum time be Calculate it iteratively If you want to enter the next cell and it s still locked wait until it isn t So there are some seconds of waiting possibly zero before each cell However why not instead do the following Let s calculate the sum of waiting time required and wait for that amount of seconds before starting to move All cells will be visited at the same time as before or even later Thus they will surely be unlocked if they were in the original plan So the goal is to calculate the minimum amount of time required to wait in the start then add the movement time to it Once again the path is fixed Let the th cell of the path be If you start after waiting for seconds then you reach the th cell at time is indexed Thus the th cell should have If all cells satisfy this condition then the path can be done after waiting for seconds at the start Let s rewrite it into So the condition tells us that should be greater or equal than this value for all cells In other words should be greater or equal than the maximum of the values over all cells Study the formula Imagine we have some path with a known length and want to append a cell to it That s pretty simple Just update the maximum with the value with the corresponding cell and increase the length What if we wanted to prepend a cell to it Turns out it s not that hard as well Every cell in the path gets its value increased by From the formula you can see that this actually decreases the value of each cell by So the maximum decreases by as well The only thing left is to update the maximum with the value of the new first cell Well and increase the length again Finally let s learn how to choose the best path We can iterate over the length of the snake part The hook part is determined uniquely It s easy to maintain the maximum on the snake Just append the new cell to the path How to glue up the hook part to that Well actually realize that the formula allows us to glue up two paths into one Let path have length and maximum and path have length and maximum To make path start after path we just decrease its maximum by The resulting path has length and maximum Let s look closer into what the hooks look like They start in some column traverse all the way right then left up to the same column If the snake part took both cells in its last column then that s it Otherwise the hook has to take the final cell in the last column column If we manage to precalculate something for hooks that start in some column and end in column then we will be able to use that Appending the final cell is not a hard task since we know its index in the path Let be the waiting time required for a hook that starts in cell and ends in a cell as if the path started with the hook cell is the first one can be calculated from Prepend it with a cell and append it with a cell The only thing left is to find the best answer I found the most convenient to start with a snake of length only cell and progress it two steps at the time update the answer progress the snake to the other cell of the current column update the answer progress the snake into the next column Overall complexity per testcase ,1
318,You want to type the string consisting of lowercase Latin letters using your favorite text editor Notepad Notepad supports two kinds of operations append any letter of the string copy a substring of an already typed string and paste this substring of the string Can you type string in than operations ,Let be the indicator function equal to if the th point is controlled by any city and otherwise Then the expected number of controlled points can be written as by linearity of expected value The expected value of the indicator function is equal to the probability of this function equal to In other words for each point we need to calculate the probability of this point being controlled by any city Let s instead calculate the probability of point not being controlled by any city Suppose the distance between point and some city is equal to If we build a Monument in city at step zero indexed then the point will be controlled by city But building the Monument at any step greater or equal than is fine Let s for each turn calculate the number of cities that you can build Monument in starting this turn as Our task is to calculate the number of permutations that are consistent with array At first turn we can choose one of cities at second turn we have choices at third step choices and so on Using this idea it s not hard to calculate the number of good permutations and then the initial probablity The expected value ,0
319,One day early in the morning you decided to buy yourself a bag of chips in the nearby store The store has chips of different flavors A bag of the th flavor costs burles The store may run out of some flavors so you ll decide which one to buy after arriving there But there are two major flaws in this plan you have only coins of and burles since it s morning the store will ask you to pay in exact change i e if you choose the th flavor you ll have to pay burles Coins are heavy so you d like to take the least possible number of coins in total That s why you are wondering what is the minimum total number of coins you should take with you so you can buy a bag of chips of any flavor in exact change ,Let s define then it should be obvious that we need at least coins to buy a bag of chips of cost Now it s not hard to prove that coins is always enough to buy a bag of chips of any cost Proof if we ll take coins of value coin and coin if we ll take coins and two coins if we ll take coins one coin and two coins So the question is how to decide is coins enough The solution is to note that there is no need to take more than coins and more than coins so we can just brute force the number of coins we ll take and the number of coins we ll take Then the number of coins and we can check is it possible to pay exactly using at most and coins respectively There exists casework solution as well but it s quite tricky so brute force is preferable The main problem for case work is the case since there are two different ways to take coins either coins and coin or coins and two coins In the first way you can t gather exactly and in the second one you can gather neither nor ,1
320,A string of length is called iff is even and for each Ivan has a string consisting of lowercase Latin letters is even He wants to form some string that will be an permutation of Also Ivan has denoted the of index as and the of as the sum of among all indices such that Help Ivan to determine maximum possible of he can get ,We will use binary search to solve the problem Suppose we want to know if the answer is not less than Each array can be represented by a bit mask where the th bit is if the th element of the array is not less than or if the th element is less than If we want to verify that the answer is not less than we have to choose two arrays such that bitwise OR of their masks is Checking all pairs of arrays is too slow Instead we can treat the arrays represented by the same masks as equal so we will have no more than distinct arrays and we can iterate over pairs Overall the solution works in ,0
321,There are communication towers numbered from to and bidirectional wires between them Each tower has a certain set of frequencies that it accepts the th of them accepts frequencies from to Let s say that a tower is accessible from a tower if there exists a frequency and a sequence of towers where consecutive towers in the sequence are directly connected by a wire and each of them accepts frequency Note that accessibility is not transitive i e if is accessible from and is accessible from then may not be accessible from Your task is to determine the towers that are accessible from the st tower ,First let s note that we will have a transition from to only once otherwise it turns out that first the picture disappeared then it appeared and disappeared back but we can consider that a friend in the middle who answered lied to us but this is not true because even before him the picture disappeared So we need to find this transition Since we can also meet we find the index of the leftmost in case of absence we take and mark it as and the index of rightmost in case of absence we take and mark as Answer the number of indices between them inclusive because only they could lie There could not be a thief to the left of since either the friend under the index lied or the picture was not stolen before There could not be a thief to the right of since either the painting had already been stolen in the presence of s friend or it was he who lied ,0
322,You are given a bracket sequence consisting of opening and closing brackets A bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters and between the original characters of the sequence For example bracket sequences are regular the resulting expressions are and and are not You can change the type of some bracket It means that if then you can change it to and vice versa Your task is to calculate the number of positions such that if you change the type of the th bracket then the resulting bracket sequence becomes ,In this problem we have to calculate the number of positions such that if we change the type of the bracket at this position then the obtained bracket sequence will become regular Let s calculate the balance of each prefix of the bracket sequence and store it in the array Just iterate from left to right over the string and if the current bracket is opening then increase the current balance by one otherwise decrease it by one For each prefix let s also calculate whether it can be a prefix of a regular bracket sequence RBS and store it in the array The prefix of length can be the prefix of RBS if and only if the prefix of length can be the prefix of RBS and Let s calculate the same arrays for all suffixes and call they and correspondingly but now the closing bracket will increase the balance by one and the opening will decrease it by one and we consider the characters from right to left Now if we have these arrays let s iterate over all positions in the initial bracket sequence If we now at the position then let s do the following things firstly if or then skip this position Otherwise if the current bracket is opening then we have to increase the answer if and only in this case the bracket sequence will become regular And if the current bracket is closing then we have to increase the answer if ,1
323,Let s denote a step ladder as the following structure exactly wooden planks of which two planks of length the base of the ladder planks of length the steps of the ladder Note that neither the base planks nor the steps planks are required to be equal For example ladders and are correct step ladders and ladder is a correct step ladder On the first picture the lengths of planks are for the base and for the step On the second picture lengths are for the base and for the step On the third picture lengths are for the base and for the steps You have planks The length of the th planks is You don t have a saw so you can t cut the planks you have Though you have a hammer and nails so you can assemble the improvised ladder from the planks The question is what is the maximum number such that you can choose some subset of the given planks and assemble a step ladder using them ,Since all planks have length at least 1 so we can take any n 2 planks as steps So all we need is to maximize the length of base planks We can take the first and second maximum as base then the answer is minimum among second maximum 1 and n 2 ,1
324,Berland SU holds yet another training contest for its students today students came each of them brought his laptop However it turned out that everyone has forgot their chargers Let students be numbered from to Laptop of the th student has charge at the beginning of the contest and it uses of charge per minute i e if the laptop has charge at the beginning of some minute it becomes charge at the beginning of the next minute The whole contest lasts for minutes Polycarp the coach of Berland SU decided to buy a charger so that all the students would be able to successfully finish the contest He buys the charger at the same moment the contest starts Polycarp can choose to buy the charger with any non negative zero or positive integer power output The power output is chosen before the purchase it can t be changed afterwards Let the chosen power output be from the minute contest starts to the last minute of the contest he can plug the charger into any of the student s laptops and use it for some number of minutes If the laptop is using charge per minute then it will become per minute while the charger is plugged in Negative power usage rate means that the laptop s charge is increasing The charge of any laptop isn t limited it can become infinitely large The charger can be plugged in no more than one laptop at the same time The student successfully finishes the contest if the charge of his laptop never is below zero at the beginning of some minute from the minute contest starts to the last minute of the contest zero charge is allowed The charge of the laptop of the minute the contest ends doesn t matter Help Polycarp to determine the minimal possible power output the charger should have so that all the students are able to successfully finish the contest Also report if no such charger exists ,In terms of preorder strings the operation swap two children of some vertex means swap two substrings of equal length in some specific location This operation can be inverted by applying it an additional time so for every positive integer all of the strings of length are split into equivalence classes in such a way that two strings from the same class can be transformed into each other and two strings from different classes cannot For each vertex the set of its possible preorder strings is one of these classes Let s calculate the answer for the problem recursively let be the number of preorder strings for the vertex For a leaf the number of its preorder strings is For a vertex with children and one of the two holds if the equivalence class for vertex is different from the equivalence class for vertex then we have to pick a string from the class of vertex pick a string from the class of vertex and choose the order in which we take them So if the equivalence class for is the same as the equivalence class for then swapping and doesn t do anything so we pick a string from the equivalence class of and then a string from the equivalence class of So The only thing we don t know is how to determine if two vertices represent the same equivalence class The model solution uses hashing for this but there s a much simpler method for each vertex let be the lexicographically smallest string that can be a preorder string of If a vertex has children and then and we can calculate these strings recursively since the total length is each of characters will be present in strings ,0
325,An integer array is being transformed into an array of lowercase English letters using the following prodecure While there is at least one number in the array Choose any number from the array and any letter of the English alphabet Replace all occurrences of number with the letter For example if we initially had an array then we could transform it the following way Choose the number and the letter After that Choose the number and the letter After that Choose the number and the letter After that Choose the number and the letter After that After the transformation all letters are united into a string in our example we get the string Having the array and the string determine if the string could be got from the array after the described transformation ,Lets find the maximum number such that all values form the non descending order array It can be done the following way Let values form the non descending order array Then values will form the non descending order array if the first occurrence of in array is after the last occurrence of In similar manner we can find the minimum number such that all values form the non descending order array Now let s find out how to get the minimum number such that all values form the non descending order array if we fixed the value We denote this value for some fixed value as Firstly conditions and should hold Secondly there should be no such a pair that conditions and hold Since the condition is satisfied it means that must be greater than where is the last occurrence of in array In this way the answer is ,0
326,Polycarp invited all his friends to the tea party to celebrate the holiday He has cups one for each of his friends with volumes His teapot stores milliliters of tea Polycarp wants to pour tea in cups in such a way that Every cup will contain tea for at least half of its volume Every cup will contain integer number of milliliters of tea All the tea from the teapot will be poured into cups All friends will be Friend with cup won t be if there exists such cup that cup contains less tea than cup but For each cup output how many milliliters of tea should be poured in it If it s impossible to pour all the tea and satisfy all conditions then output ,At first let s pour minimal amount of tea in each cup that is If it requires more tea than available then it s Now let s sort cups in non increasing order by volume and start filling up them until we run out of tea in the teapot It s easy to see that everyone will be satisfied that way If sequence of is non increasing then sequence of is also non increasing So we can t make someone unsatisfied by filling the cup with maximal possible volume And finally get the right order of cups back and print the answer Overall complexity ,1
327, A subsequence is a string that can be derived from another string by deleting some or no symbols without changing the order of the remaining symbols Characters to be deleted are not required to go successively there can be any gaps between them For example for the string the following strings are subsequences and empty string But the following strings are not subsequences and You are given a string consisting of lowercase Latin letters In one move you can take subsequence of the given string and add it to the set The set can t contain duplicates This move costs where is the length of the added subsequence i e the price equals to the number of the deleted characters Your task is to find out the minimum possible total cost to obtain a set of size or report that it is impossible to do so ,It is enough to print for each query where is divided by rounded down ,0
328,Polycarp wants to buy shovels The shop sells packages with shovels The store has types of packages the package of the th type consists of exactly shovels The store has an infinite number of packages of each type Polycarp wants to choose type of packages and then buy several one or more packages of this type What is the smallest number of packages Polycarp will have to buy to get exactly shovels For example if and then Polycarp will buy packages of shovels Help Polycarp find the minimum number of packages that he needs to buy given that he will buy exactly shovels in total the sizes of packages he will buy are all the same and the number of shovels in each package is an integer from to inclusive ,Let s assume that we don t have any zeroes in our array We ll deal with them later The key observation is that the number of sequences in the decomposition is not more than To prove this we can use the fact that each element will be appended to the first subsequence in the decomposition so if the second third subsequence in the decomposition ends with the number or all such numbers can be appended to that subsequence thus they won t create any new subsequences So if we consider the combination of the last elements in the subsequences of the decomposition there are only such combinations even less in practice Okay now let s try to use the fact that the number of such combinations is small There are many ways to abuse it but in my opinion the most straightforward one and also a bit slow but fast enough to easily pass the time limit is to run the following dynamic programming where is the index of the element we are processing and is the vector representing the combination of last elements of subsequences in the decomposition But it s not clear what do we store in this dynamic programming The model solution stores i e we will consider the number of subsequences added while processing the elements So our dynamic programming automatically sums up the answers for all possible right borders of the segment we decompose Transitions in this dynamic programming is easy we need to see how does the element alter the state of decomposition let it change it to take the value of and if the element forms a new subsequence let s account for it by increasing by because this increase will affect different right endpoints of the segment we decompose And now it s easy to see how to add zeroes to our solution We can just assume they don t change the state of decomposition they simply add a new subsequence which won t take any other elements So in our transitions processing means that but the size of decomposition increases To actually get the answer to the problem we need to consider all possible starting points of the segment so we sum up where is the empty vector for all ,0
329,You have a garland consisting of lamps Each lamp is colored red green or blue The color of the th lamp is and colors of lamps in the garland You have to recolor some lamps in this garland recoloring a lamp means changing its initial color to another in such a way that the obtained garland is A garland is called if any two adjacent consecutive lamps i e such lamps that the distance between their positions is have distinct colors In other words if the obtained garland is then for each from to the condition should be satisfied Among all ways to recolor the initial garland to make it you have to choose one with the number of recolored lamps If there are multiple optimal solutions print of them ,Statement the function of the sum is a polynomial of degree over variable This statement can be proved by induction to make step you should take the derivative Denote the value of the sum for We can easily calculate the values of for from to in time If then we already have the answer Otherwise let s use Lagrange polynomial to get the value of the sum for the given value The Largange polynomial have the following form In our case and To calculate in a linear time we should use that for all It s help us because with that property we can recalculate the inner product for from the inner product for simply by multiplying by two values and dividing by two values So we can calculate the sum in linear time over ,0
330,You have a string consisting of lowercase Latin alphabet letters You can color some letters in colors from to It is not necessary to paint all the letters But for each color there must be a letter painted in that color Then you can swap any two symbols painted in the same color as many times as you want After that strings will be created th of them will contain all the characters colored in the color written in the order of their sequence in the string Your task is to color the characters of the string so that all the resulting strings are palindromes and the length of the shortest of these strings is as as possible Read the note for the first test case of the example if you need a clarification Recall that a string is a palindrome if it reads the same way both from left to right and from right to left For example the strings and are palindromes but the strings and are not ,We will solve the problem greedily First we will try to add pairs of identical characters to palindromes As long as there are at least pairs let s add them After that it is no longer possible to add a couple of characters but you can try to add one character in the middle This can be done if there are at least characters left There is no need to paint other characters ,1
331,Polycarp has friends the th of his friends has candies Polycarp s friends do not like when they have different numbers of candies In other words they want all to be the same To solve this Polycarp performs the following set of actions exactly Polycarp chooses arbitrary friends let s say he chooses friends with indices Polycarp distributes their candies among all friends During distribution for each of candies he chooses new owner That can be any of friends Note that any candy can be given to the person who has owned that candy before the distribution process Note that the number is not fixed in advance and can be arbitrary Your task is to find the minimum value of For example if and then Polycarp could make the following distribution of the candies Polycarp chooses friends with indices and distributes candies to make two candies go to person Note that in this example Polycarp cannot choose friend so that he can redistribute candies so that in the end all are equal For the data and determine the value With this value Polycarp should be able to select friends and redistribute their candies so that everyone will end up with the same number of candies ,If you can place two rectangles in some way without rotations then it s always possible to move one of them to the top left corner and stick the other either to the bottom of the first and push it all the way to the left or to the right of it and push it all the way to the top Now let s try all possible reorderings and rotations for every pair of seals If there is at least one correct reordering then update the answer Overall complexity ,0
332,Your company was appointed to lay new asphalt on the highway of length You know that every day you can either repair one unit of the highway lay new asphalt over one unit of the highway or skip repairing Skipping the repair is necessary because of the climate The climate in your region is periodical there are days when the weather is good and if you lay new asphalt these days it becomes high quality pavement after that the weather during the next days is bad and if you lay new asphalt these days it becomes low quality pavement again good days bad days and so on You can be sure that you start repairing at the start of a good season in other words days are good You don t really care about the quality of the highway you just want to make sure that will have high quality pavement For example if the then at least units of the highway should have high quality if then at least units should have high quality What is the minimum number of days is needed to finish the repair of ,Consider the process from the end The last buyer will always buy a half of an apple and get a half for free so the last string always is halfplus After that each buyer increases the number of apples twice and also maybe by one So we simply have the binary presentation of the number of apples from the end To calculate the answer we should simply restore that value from the end and also calculate the total money grandma should have ,0
333,One very important person has a piece of paper in the form of a rectangle Also he has seals Each seal leaves an impression on the paper in the form of a rectangle of the size Each impression must be parallel to the sides of the piece of paper but seal can be rotated by 90 degrees A very important person wants to choose two different seals and put them two impressions Each of the selected seals puts exactly one impression Impressions should not overlap but they can touch sides and the total area occupied by them should be the largest possible What is the largest area that can be occupied by two seals ,Let s start with a simple assumption For some fixed values the values of that the answers exist for make up a range So there s the smallest possible number of adjacent equal pairs one can construct and the largest one everything in between exists as well The largest number is simple put all A s then all B s then all C s So this value is The smallest number is trickier Let s instead investigate when it s equal to WLOG assume Imagine the following construction There are letters C which separate blocks of letters A and B There are if you consider the ones to the sides of all letters C but we want the smallest value so we shouldn t consider them such blocks thus it s possible that each block contains no more than one letter A and no more than one letter B So letters A and B will never produce adjacent pairs If there are empty blocks then there are adjacent letters C So the condition to still have no empty blocks is to have at least letters A and B in total If then any extra letter C can only be put adjacent to another letter C thus producing an extra pair at least one extra pair but since we are examining the lower bound we can always do exactly one That means that the lower bound is Now for the proof of the fact that every value in between is also achievable Since we have a construction for let s try modifying it Let s reduce the test to the following way While decrease the count of the letter that appears the most by and decrease by Now build the string for with the reduced values After that put the letters back placing them next to the last occurrence of the same letter there is at least one occurrence of each letter the proof is trivial That increases by and the count of this letter by Thus we ll return to the initial test Overall complexity per testcase ,0
334, teams participate in a playoff tournament The tournament consists of games They are held as follows first of all the teams are split into pairs team plays against team team plays against team exactly in this order and so on so games are played in that phase When a team loses a game it is eliminated and each game results in elimination of one team there are no ties After that only teams remain If only one team remains it is declared the champion otherwise games are played in the first one of them the winner of the game vs plays against the winner of the game vs then the winner of the game vs plays against the winner of the game vs and so on This process repeats until only one team remains After the tournament ends the teams are assigned places according to the tournament phase when they were eliminated In particular the winner of the tournament gets place the team eliminated in the finals gets place both teams eliminated in the semifinals get place all teams eliminated in the quarterfinals get place all teams eliminated in the 1 8 finals get place and so on For example this picture describes one of the possible ways the tournament can go with and the resulting places of the teams After a tournament which was conducted by the aforementioned rules ended its results were encoded in the following way Let be the place of the th team in the tournament The hash value of the tournament is calculated as where is some given integer Unfortunately due to a system crash almost all tournament related data was lost The only pieces of data that remain are the values of and You are asked to restore the resulting placing of the teams in the tournament if it is possible at all ,There are exactly games in the tournament each game has only two possible outcomes So it s possible to bruteforce all possible ways the tournament could go if is not large In fact this solution is fast enough when so if we somehow can handle the case we will have a working solution To handle let s divide the teams into two groups teams from to and teams from to There will be exactly matches in each group and the winners of these two groups will play in the finals The number of possible ways the games in a group can go is just so let s try to bruteforce all possible results in each group and somehow merge them into the results of the whole tournament The main idea is to rewrite as where and find all possible values for and and choose a pair of values that yields exactly the given value of We will handle two separate cases the winner of the first group wins the whole tournament or the winner of the second group wins the whole tournament Suppose we are handling the first case the second is symmetrical By choosing the results of matches in the first group we determine the places of the teams from the first group the winner of the first group gets place the team eliminated in the last match of the first group gets place and so on It means that by choosing one of the possible results in the first group we can calculate Let s bruteforce these combinations of results in the first group and store them in some data structure that allows to check whether some value of is achievable in the model solution it s a which maps reachable values of to combinations of results that yield these values Then by choosing the results of matches in the second group we can calculate so the remaining part of the solution is to bruteforce all possible results in the second group calculate for them and check that such that can be achieved by choosing the results in the first group Don t forget to also handle the case when the team which wins in the first group loses in the finals it is almost the same but the winner in the first group gets place and the winner in the second group gets place The technique I ve described here instead of bruteforcing all possible variants split the thing we try to bruteforce into two parts bruteforce them separatedly and then try to merge the parts is called and can be used to solve a large variety of problems ,1
335,Two T shirt sizes are given and The T shirt size is either a string or a string consisting of several possibly zero characters and one of the characters or For example strings could be the size of some T shirts And the strings are not sizes The letter stands for medium for small for large The letter refers to the degree of size from eXtra For example is extra extra large bigger than and smaller than You need to compare two given sizes of T shirts and The T shirts are compared as follows any small size no matter how many letters is smaller than the medium size and any large size any large size regardless of the number of letters is larger than the medium size and any small size the more letters before the smaller the size the more letters in front of the larger the size For example ,Write down all the numbers which appear exactly once let there be of them If is even put the first of them into the first multiset and put the other into the second multiset All the other numbers which appear more than once also go into the first multiset The only nice numbers will be the initial thus the answer is valid If is odd and there is no number to appear more than twice then the answer is as all the numbers to appear exactly twice don t change the difference of the amounts of the nice numbers at all If there is a number to appear more than twice let it be then let s firstly add of the numbers to appear exactly once to the first multiset add others of them to the second multiset Then the first occurrence of goes to the second multiset and all the other numbers go to the first multiset It s easy to notice that multisets will contain equal number of the nice numbers after all the partitioning ,0
336,Alice got an array of length as a birthday present once again This is the third year in a row And what is more disappointing it is overwhelmengly boring filled entirely with zeros Bob decided to apply some changes to the array to cheer up Alice Bob has chosen changes of the following form For some integer numbers and he chooses an arbitrary position and for every adds to the value of the th cell is the distance between positions and i e where is an absolute value of For example if Alice currently has an array and Bob chooses position for and then the array will become Note that Bob can t choose position outside of the array that is smaller than or greater than Alice will be the happiest when the elements of the array are as big as possible Bob claimed that the arithmetic mean value of the elements will work fine as a metric What is the maximum arithmetic mean value Bob can achieve ,If the answer is we can t get so we can move by to the right and by to the left If or the answer is obviously Otherwise the answer is always We can t get the answer less than this value because we need at least moves to get to the point greater than or equal to and we can always get this answer by the recurrence ,0
337,You are given an array consisting of integers Let s call a pair of indices if and where is the greatest common divisor of and Find the maximum number of index pairs if you can reorder the array in an arbitrary way ,The following greedy strategy works during each turn delete the largest possible substring consisting of characters So we have to find all blocks of characters sort them according to their length and model which blocks are taken by Alice and which by Bob Why does the greedy strategy work It s never optimal to delete some part of the block of ones because we either have to spend an additional turn to delete the remaining part or allow our opponent to take it which is never good Why don t we need to delete zeroes If we delete a whole block of zeroes our opponent can take the newly formed block of s during their turn and it is obviously worse than taking a part of that block And deleting some part of a block of zeroes doesn t do anything our opponent will never delete the remaining part because it s suboptimal ,0
338,The chief wizard of the Wizengamot once caught the evil wizard Drahyrt but the evil wizard has returned and wants revenge on the chief wizard So he stole from his student Harry The is a length string of lowercase Latin letters Drahyrt wants to replace with an unforgivable curse string Dragirt using ancient magic can swap letters at a distance or in as many times as he wants In other words Drahyrt can change letters in positions and in if or For example if and Drahyrt can act as follows swap the letters at positions and to get swap the letters at positions and to get You are given and Can Drahyrt change to ,The solution of the problem hints to us that with the help of such operations it is possible to move the symbol in the right direction by using two operations Then we can show that among the symbols that we can swap with at least one other symbol we can get any permutation For example you can apply such a greedy solution we will build an answer from the boundaries of the string to the middle Since we can move the symbol by a distance of we can move it to the border and thus we can build any string Thus it is enough to check that the sets of characters that can be swapped with some other match And for the rest of the characters check that they just match ,1
339,You are given an array consisting of integers Let s call a pair of indices if and where is the greatest common divisor of and Find the maximum number of index pairs if you can reorder the array in an arbitrary way ,If the value of is even then at least regardless of the value of Therefore we can put all the even values before the odd ones it does not matter in what order Now it remains to arrange the odd values In fact their order is not important because for odd and This means that each pair will be considered exactly time regardless of the order of the odd elements ,1
340,Makes solves problems on Decoforces and lots of other different online judges Each problem is denoted by its difficulty a positive integer number Difficulties are measured the same across all the judges the problem with difficulty on Decoforces is as hard as the problem with difficulty on any other judge Makes has chosen problems to solve on Decoforces with difficulties He can solve these problems in arbitrary order Though he can solve problem with difficulty only if he had already solved some problem with difficulty no matter on what online judge was it With given conditions it s easy to see that Makes sometimes can t solve all the chosen problems no matter what order he chooses So he wants to solve some problems on other judges to finish solving problems from his list Makes can solve problems on any judge at any time it isn t necessary to do problems from the chosen list one right after another Makes doesn t have too much free time so he asked you to calculate the minimum number of problems he should solve on other judges in order to solve all the chosen problems from Decoforces ,Obviously sorting the tasks by difficulty will always produce the most optimal order of solving In that case ability to solve some task will mean ability to solve any task from to Now let s maintain the upper limit of difficulty of problem Makes is able to solve Right after solving some problem it will be Initially it s just Transition from to will then look like this If the upper limit it greater or equal to then we solve this problem and update the upper limit Otherwise we will need some problems from other judges As our goal is to maximize the upper limit the most optimal task to solve is the hardest possible So you should solve task with the difficulty of upper limit and update the limit itself Keep doing it until upper limit becomes grater or equal to You will require no more then tasks from the other judges By algorithm it s easy to see that by solving task with difficulty we update upper limit with the value This function produces such a estimate Overall complexity ,1
341,You are given a text of single space separated words consisting of small and capital Latin letters of the word is number of capital letters in the word of the text is maximum of all words in the text Calculate the of the given text ,First of all there is an answer with exactly items bought Suppose items worth were purchased Then by removing from this set the sum of the cheapest items in the set will change by which means the answer will not decrease The second fact that is necessary to solve the problem of the most expensive items should be chosen Otherwise one can remove the minimum price item from the set and add an item with a higher price it can always be found which means the answer will not decrease Using these two facts it is enough to sort the array and use prefix sums ,0
342,You are given a matrix with rows numbered from to and columns numbered from to A number is written in the cell belonging to the th row and the th column each number is either or A chip is initially in the cell and it will be moved to the cell During each move it either moves to the next cell in the current row or in the current column if the current cell is then after the move it can be either or The chip cannot leave the matrix Consider each path of the chip from to A path is called if the number in the first cell is equal to the number in the last cell the number in the second cell is equal to the number in the second to last cell and so on Your goal is to change the values in the minimum number of cells so that path is ,Let s group the cells by their distance from the starting point the group consists of a single cell the group consists of the cells and and so on In total there are groups Let s analyze the groups and There are two cases if or then we are looking at the starting cell and the ending cell and their contents should be equal otherwise suppose two cells and belong to the same group We can easily prove that the contents of these two cells should be equal for example by analyzing two paths that go through cell and coincide after this cell but one goes to from and another from and using induction we can prove that the contents of all cells in a group should be equal And since the paths should be palindromic the contents of the group should be equal to the contents of the group So in each pair of groups we should calculate the number of s and s and choose which of them to change Note that if is even the central group has no pair so it should not be modified ,1
343,Numbers each integer from to once are written on a board In one operation you can erase any two numbers and from the board and write one integer instead You should perform the given operation times and make the resulting number that will be left on the board as small as possible For example if the following course of action is optimal choose and so the new number is and the whiteboard contains choose and so the new number is and the whiteboard contains choose and so the new number is and the whiteboard contains It s easy to see that after operations there will be left only one number Your goal is to minimize it ,It s easy to see that we can t get the result less than because if we merge two positive numbers and at least one of them is or greater the new number is always greater than So we can t get rid of all numbers greater than To always achieve we can use a greedy algorithm always merge two maximum numbers During the first step we merge and get then we merge and get then we merge and get and it s easy to see that the last operation is merging and so the result is ,1
344,You are given a tree consisting of vertices A number is written on each vertex the number written on vertex is Let s denote the function as the difference between maximum and minimum value of on a simple path connecting vertices and Your task is to calculate ,Let s calculate the answer as the difference between sum of maxima and sum of minima over all paths These sums can be found by the following approach Consider the sum of maxima Let s sort all vertices in ascending order of values of if two vertices have equal values their order doesn t matter This order has an important property that we can use for every path the maximum on this path is written on the vertex that has the greatest position in sorted order This allows us to do the following Let s denote as a tree rooted at vertex that is formed by the set of such vertices that are directly connected to or some other vertex from the set and have Consider the vertices that are connected to in this tree Let s denote them as the order doesn t matter and denote by the size of the subtree of in the tree Let s try to calculate the number of paths going through in this tree paths that have as its endpoint paths connecting a vertex from subtree of to a vertex from subtree of So vertex adds the sum of these values multiplied by to the sum of maxima To calculate these sums we will use the following algorithm Initialize a DSU disjoint set union making a set for each vertex Process the vertices in sorted order When we process some vertex find all its already processed neighbours they will be in For every neighbour denote the size of its set in DSU as Then calculate the number of paths going through using aforementioned formulas to do it in linear time use partial sums Add this number multiplied by to the sum of maxima and merge with in DSU To calculate the sum of minima you can do the same while processing vertices in reversed order Time complexity of this solution is ,1
345,There is a robot on a coordinate plane Initially the robot is located at the point Its path is described as a string of length consisting of characters Each of these characters corresponds to some move left means that the robot moves from the point to the point right means that the robot moves from the point to the point up means that the robot moves from the point to the point down means that the robot moves from the point to the point The company that created this robot asked you to optimize the path of the robot somehow To do this you can remove of the path But this company doesn t want their customers to notice the change in the robot behavior It means that if before the optimization the robot ended its path at the point then after optimization i e removing some single substring from the robot also ends its path at the point This optimization is a low budget project so you need to remove possible substring to optimize the robot s path such that the endpoint of his path doesn t change It is possible that you can t optimize the path Also it is possible that after the optimization the target path is an empty string i e deleted substring is the whole string Recall that the substring of is such string that can be obtained from by removing some amount of characters possibly zero from the prefix and some amount of characters possibly zero from the suffix For example the substrings of are but not and You have to answer independent test cases ,Formally the problem asks you to remove the shortest cycle from the robot s path Because the endpoint of the path cannot be changed the number of s should be equal to the number of s and the same with and How to find the shortest cycle Let s create the associative array for C which will say for each point of the path the maximum number of operations such that if we apply first operations we will stay at this point Initially this array will contain only the point with the value Let s go over all characters of in order from left to right Let the current point be we applied first operations indexed If this point is in the array already let s try to update the answer with the value and left and right borders with values and correspondingly Then let s assign and continue If there were no updates of the answer the answer is Otherwise you can print any substring you found Time complexity per test case ,1
346,Vlad like everyone else loves to sleep very much Every day Vlad has to do things each at a certain time For each of these things he has an alarm clock set the th of them is triggered on hours minutes every day Vlad uses the hour time format so after comes and after comes This time Vlad went to bed at hours minutes and asks you to answer how much he will be able to sleep until the next alarm clock If any alarm clock rings at the time when he went to bed then he will sleep for a period of time of length ,To begin with let s learn how to determine how much time must pass before the alarm to trigger If the alarm time is later than the current one then obviously minutes should pass Otherwise this value will be negative and then it should pass since a full day must pass not including the time from the alarm to the current time We just need to find the minimum number of minutes among all the alarm clocks Due to small constrains the problem can also be solved by stimulating the sleep process increase the answer by and check whether any alarm will work after this time ,1
347,Polycarp has positive integers and He can perform the following operation Choose a integer and multiply of the integers or by Can Polycarp make it so that after performing the operation the sequence of three numbers forms an arithmetic progression Note that you the order of and Formally a sequence is called an arithmetic progression AP if there exists a number called common difference such that for all from to In this problem For example the following sequences are AP and The following sequences are not AP and You need to answer independent test cases ,Let s iterate over the number that we want to multiply by How can we check that we can multiply the current number so that an AP is formed Note that those numbers that we do not touch should form an AP themselves For instance let at the current operation we want somehow multiply the number Then and Note that Thus we know what is Also we know that Let s check if is divisible by If yes then we have found the answer if not then move on to the next number We do the same for and Be careful with non positive numbers integer divisions and other edge cases ,1
348,Adilbek was assigned to a special project For Adilbek it means that he has days to run a special program and provide its results But there is a problem the program needs to run for days to calculate the results Fortunately Adilbek can optimize the program If he spends is a non negative integer days optimizing the program he will make the program run in days is the ceiling function The program cannot be run and optimized simultaneously so the total number of days he will spend is equal to Will Adilbek be able to provide the generated results in no more than days ,The crucial observation that we have to make is that the character that initially occupied the position cannot occupy the positions to the left of we can shift some character two positions to the left using a combination of operations but we can t go any further So the prefix of the first characters of the resulting string can only be affected by the prefix of the first characters of the initial string Let s use the following dynamic programming to solve the problem let be the that we can obtain by applying operations to the first characters that is is the answer to the problem if we consider only first characters of the original string The transitions here are a bit tricky If we apply the operation or to the character then where is the character we get when we apply the aforementioned operation to that character is a bit more complicated we have to insert the character just before the last character of Modeling that we can apply the operation is likely the most complex transition in our dynamic programming First of all we can t just make an update to or since it leads us to a situation where we can still apply some operations to the prefix we have built Instead we have to consider the operation we will be able to do with the character Using another operation is useless since the result is like performing no operations with those two characters at all so we have to consider two options for operation with the th character or whichever is better or In the first case we update by appending the resulting two characters to the one that we get when we change and the one that initially was In the second case things are a bit trickier but still not very complicated the character that was moves two positions backward so it is inserted right before the last character of and then we append to the string we get So there are four transitions we have to make a transition from to that models the case when we apply or to the th character a transition from to that models the case when we apply to the th character a transition from to to model the operations or a transition from to to model the operations Overall complexity is but it can be improved to with some complicated data structures like persistent segment tree with hashes to compare strings and append characters to them in ,0
349,There are segments for You should divide all segments into two groups in such way that there is no pair of segments from different groups which have at least one common point or say that it s impossible to do it Each segment should belong to exactly one group To optimize testing process you will be given multitest ,Let s prove that division possible if and only if union of all segments has two and more segments If the union have at least two segments then we can choose one of them and put all segments it contains in one group and other segments to another group On the other hand if we can divide all segments in two groups in such way that there are no pair from different group which intersects then union of segments from the first group doesn t intersect union of segments from another and union of unions consists of several non intersecting components How can it help If union of segments consits of several segments then exists such that for any segment either or and both parts are non empty Moreover equals to one of It leads us straight to one of possible solutions sort all segments by in increasing order and for each we should check that suffix minimum If we ve found such then all prefix goes to one group and suffix to another ,1
350,Let s call an integer array if for each Let be the number of pairs such that Let s say that an array is if is for each is the maximum possible among all arrays of size Given and calculate the number of arrays modulo ,Firstly let s learn the structure of good array with maximum Suppose then In other words we can group by and pairs will appear only inside each group It s easy to prove that if the group has size then it s optimal to split it in half one with and other with Then the number of pairs inside the group will be equal to It s also not hard to prove that in this case it s optimal to place all elements inside one group In other words it s optimal to make a half of all elements as and the other half as for some integer Then To achieve maximum the excellent array should also have this structure Let For a fixed if is even then we should choose exactly positions to set as but if is odd we can choose either or positions Let s analyze what happens with different Obviously While both and are in the segment for any In this case we can choose any as so there are exactly ways for even and ways for odd When then for where there is only one choice to set Analogically for where there is only choice to set What remains is elements without restrictions so there are ways to choose for even or ways for odd Note that it s convenient to say that if or so we don t need extra checks Lastly note that we can process all with one formula and there are only of with non zero number of ways to choose so we can iterate over all such straightforwardly The total complexity is because of precomputation of factorials and inverse factorials to calculate ,1
351,Once Max found an electronic calculator from his grandfather Dovlet s chest He noticed that the numbers were written with seven segment indicators https en wikipedia org wiki Seven segment display Max starts to type all the values from to After typing each number Max resets the calculator Find the total number of segments printed on the calculator For example if and then at first the calculator will print segments then segments and at last it will print segments So the total number of printed segments is ,In the constraints the problem can be solved by brute force we will go through the value for the height for the first place and then select suitable values for and Since we divide the remaining blocks equally between and If it turns out that then we try to decrease by and increase by 1 If we get the right answer output the heights and stop the process We will go through the value of in order of increasing ,0
352,Let s call an integer array if for each Let be the number of pairs such that Let s say that an array is if is for each is the maximum possible among all arrays of size Given and calculate the number of arrays modulo ,Let s consider the sweep line approach by the value of the variable x the vertex i is active from the moment l i to the moment r i And we have to find vertices that are reachable in the graph of active vertices from the vertex 1 So we rephrased the problem as follows there are vertices that are active at some moments and we want to get some information about connectivity during each moment of time This is a standard offline dynamic connectivity problem which can be solved with a divide and conquer approach described here Now we are able to find the connectivity component of the 1 th vertex for each value of x It remains to understand how to combine answers for all values of x fast enough Let s try to visualize the components as vertices of a directed graph We assign a vertex to each component and when two components merge we add two directed edges from the new vertex to the vertices corresponding to the components and now we can use the reachability information in this graph Each vertex of the original graph corresponds to one of the sinks in this graph and sinks that correspond to the vertices of some component are reachable from the vertex corresponding to that component To restore all the vertex indices later we will mark all components containing the vertex 1 while we run our dynamic connectivity approach Then the vertex v of the original graph is included in the answer if the vertex representing the component containing only the vertex v is reachable from any of the marked vertices Now all you need to do is run DFS or BFS from all the marked vertices in the component graph ,0
353,You are given a string consisting of characters These characters are among the first lowercase letters of the Latin alphabet You have to perform operations with the string During the th operation you take the character that the th position and perform of the following actions with it swap it with the previous character in the string if it exists This operation is represented as swap it with the next character in the string if it exists This operation is represented as cyclically change it to the previous character in the alphabet becomes becomes and so on becomes the th letter of the Latin alphabet This operation is represented as cyclically change it to the next character in the alphabet becomes becomes and so on the th letter of the Latin alphabet becomes This operation is represented as do nothing This operation is represented as For example suppose the initial string is and the sequence of operations is Then the string is transformed as follows the first operation is so we change the underlined letter in to the next one in the first Latin letters which is The string is now the second operation is so we swap the underlined letter with the next one in the string The string is now the third operation is so we swap the underlined letter with the previous one in the string note that this is now the nd character of the string but it was initially the rd one so the rd operation is performed to it The resulting string is the fourth operation is so we change the underlined letter in to the previous one in the first Latin letters which is The string is now The result of performing the sequence of operations is Given the string and the value of find the lexicographically smallest string that can be obtained after applying a sequence of operations to ,The crucial observation that we have to make is that the character that initially occupied the position cannot occupy the positions to the left of we can shift some character two positions to the left using a combination of operations but we can t go any further So the prefix of the first characters of the resulting string can only be affected by the prefix of the first characters of the initial string Let s use the following dynamic programming to solve the problem let be the that we can obtain by applying operations to the first characters that is is the answer to the problem if we consider only first characters of the original string The transitions here are a bit tricky If we apply the operation or to the character then where is the character we get when we apply the aforementioned operation to that character is a bit more complicated we have to insert the character just before the last character of Modeling that we can apply the operation is likely the most complex transition in our dynamic programming First of all we can t just make an update to or since it leads us to a situation where we can still apply some operations to the prefix we have built Instead we have to consider the operation we will be able to do with the character Using another operation is useless since the result is like performing no operations with those two characters at all so we have to consider two options for operation with the th character or whichever is better or In the first case we update by appending the resulting two characters to the one that we get when we change and the one that initially was In the second case things are a bit trickier but still not very complicated the character that was moves two positions backward so it is inserted right before the last character of and then we append to the string we get So there are four transitions we have to make a transition from to that models the case when we apply or to the th character a transition from to that models the case when we apply to the th character a transition from to to model the operations or a transition from to to model the operations Overall complexity is but it can be improved to with some complicated data structures like persistent segment tree with hashes to compare strings and append characters to them in ,1
354,There is a robot in a warehouse and packages he wants to collect The warehouse can be represented as a coordinate grid Initially the robot stays at the point The th package is at the point It is guaranteed that there are no two packages at the same point It is also guaranteed that the point doesn t contain a package The robot is semi broken and only can move up and right In other words in one move the robot can go from the point to the point or to the point As we say above the robot wants to collect all packages He wants to do it with the minimum possible number of moves If there are several possible traversals the robot wants to choose the lexicographically smallest path The string of length is lexicographically less than the string of length if there is some index that for all from to and It is the standard comparison of string like in a dictionary Most programming languages compare strings in this way ,It is obvious that if there is a pair of points and such that and then the answer is It means that if the answer is then there is some ordering of points such that and because we can only move right or up But what is this ordering it is just sorted order of points firstly by then by So we can sort all points check if this ordering is valid and traverse among all these points For each from to firstly do moves to the right then do moves to the up because this order minimizing the answer lexicographically Time complexity or ,1
355,You are given an array consisting of integers You can remove element from this array Thus the final length of the array is or Your task is to calculate the maximum possible length of the contiguous subarray of the remaining array Recall that the contiguous subarray with indices from to is The subarray is called strictly increasing if ,Firstly let s calculate for each from to two following values and means the maximum length of the increasing sequence starting in the position and means the maximum length of the increasing sequence ending in the position Initially all values are the element itself The array can be calculated in order from right to left with the following condition if then otherwise it still remain The same with the array but we have to calculate its values in order from left to right and if then otherwise it still remain Having these arrays we can calculate the answer The initial answer if we don t remove any element is the maximum value of the array And if we remove the th element where then we can update the answer with the value if Time complexity ,1
356,You are given a decimal representation of an integer without leading zeros You have to perform the following reduction on it take two neighboring digits in and replace them with their sum without leading zeros if the sum is it s represented as a single For example if the possible reductions are choose the first and the second digits and replace them with the result is choose the second and the third digits and replace them with the result is also choose the third and the fourth digits and replace them with the result is still choose the fourth and the fifth digits and replace them with the result is What s the largest number that can be obtained ,Since then the transformation graph is a tree Let s solve the problem recursively Suppose that material is a leaf in the tree there is no such that Then if we don t have enough material we have to transform some of material into Let s transform the amount required to set current amount of material to if we don t have the required amount of material then this amount will temporarily be negative And if we have more material than we need to conduct the experiment then we will transform it to The same algorithm can be applied to any non root node but we first need to do this for all its children This algorithm is optimal because each time we take the minimum possible amount from the parent After this the root will be the only node such that is not necessarily equal to current amount of material Since we solved the problem for all other materials and did it optimally now the answer is YES iff current amount of material is not less than This must be implemented carefully Since the total amount of materials never increases then if some material s current amount is less than for example then the answer is already NO Also overflows in multiplication must be avoided to do this we can firstly check if the result of multiplication is not too big by multiplying values as real numbers ,0
357,The New Year holidays are over but Resha doesn t want to throw away the New Year tree He invited his best friends Kerim and Gural to help him to redecorate the New Year tree The New Year tree is an undirected tree with vertices and root in the vertex You should process the queries of the two types Change the colours of all vertices in the subtree of the vertex to the colour Find the number of different colours in the subtree of the vertex ,Let s intruduce the following dynamic programming approach is the smallest number of elements of type page can end with If we learn to recalculate it the answer will be if or I will try to prove it on the fly Let s look into the constructing of each page from the following perspective I ll consider the cases when the current page ends with tables and the previous page ends with either tables or formulas Let s write down all the tables and then put formulas as separators to them I will call number of tables on the end of the previous page the number of formulas on the end of the previous page the number on tables on the current page and the number of formulas on the current page In the case with tables on the end of the previous page the smallest number of separators you can have is Moreover if you have you can put one of the formulas right before the end of the page ending it with table The only case is when there are too many separators should be less or equal to you can put up to separators before each table The case with formulas on the end of the previous page isn t that different The smallest number of separators is and the limit to the number of separators is you can t put separators before the first table as in the first case the maximum number to that position is determined by the previous page Now let s take a look at resulting expressions You can notice that lowering can only decrease the lower bound on the number of separators and lowering can only increase the upper bound on the number of separators That shows that minimizing the values in is always profitable Overall complexity ,0
358,Petya has a simple graph that is a graph without loops or multiple edges consisting of vertices and edges The weight of the th vertex is The weight of the th edge is A subgraph of a graph is some set of the graph vertices and some set of the graph edges The set of edges must meet the condition both ends of each edge from the set must belong to the chosen set of vertices The weight of a subgraph is the sum of the weights of its edges minus the sum of the weights of its vertices You need to find the maximum weight of subgraph of given graph ,This problem can be reduced to one of well known flow problems Projects and Instruments In this problem we have a set of projects we can do each with its cost and a set of instruments each also having some cost Each project depends on some instruments and each instrument can be used any number of times We have to choose a subset of projects and a subset of instruments so that if a project is chosen all instruments that this project depends on are also chosen and we have to maximize the difference between the sum of costs of chosen projects and the sum of costs of chosen instruments The problem about projects and instruments can be solved with the following flow network for each project create a vertex and add a directed edge from the source to this vertex with capacity equal to the cost of this project for each instrument create a vertex and add a directed edge from this vertex to the sink with capacity equal to the cost of this instrument for each project create edges with infinite capacity from the vertex denoting this project to all vertices denoting the required instruments for this project Let s analyze an cut between the source and the sink in this vertex and construct some answer based on this cut as follows if a project vertex belongs to then we take this project if an instrument vertex belongs to then we take this instrument all other projects and instruments are discarded If an edge between some project and some instrument is cut then it means that the answer is incorrect we try to take a project requiring some instrument we don t take and the cut value is infinite Otherwise the value of the cut is equal to the total cost of taken instruments and discarded projects and we need to minimize it So the minimum cut in this network denotes the best answer Reducing the given problem to this problem is easy edges of the given graph are projects vertices of the given graph are instruments Regarding implementation any flow algorithm using capacity scaling should be sufficient It seems that Dinic also passes even though its complexity is ,1
359,Mikhail walks on a Cartesian plane He starts at the point and in one move he can go to any of eight adjacent points For example if Mikhail is currently at the point he can go to any of the following points in one move If Mikhail goes from the point to the point in one move and and then such a move is called a Mikhail has For the th query Mikhail s target is to go to the point from the point in moves Among all possible movements he want to choose one with the maximum number of Your task is to find the maximum number of or find that it is impossible to go from the point to the point in moves Note that Mikhail visit any point any number of times even the destination point ,Let s note that if then must be equal to since we must change the same value to the same letter If we check this for all pairs of and and find no such contradictions then the answer is otherwise We got the solution for for one test case ,0
360,You are given a binary string each character of this string is either or Let s denote the cost of string as the number of occurences of in For example if is and is then the cost of is Let s also denote the Fibonacci strings sequence as follows is is if where means the concatenation of two strings Your task is to calculate the sum of costs of all subsequences of the string Since answer may be large calculate it modulo ,If was not really large then we could run the following dynamic programming solution Let be the number of ways to process first characters of so that the suffix of the subsequence of length matches the prefix of with length This is not really different from a usual approach with dynamic programming on KMP constraints in this problem allow us to build KMP automaton naively without the help of any fast prefix function algorithm However the length of is really large Let s consider the traversions we make in dynamic programming Let be the KMP automaton matrix that is let be the new value of prefix function if the previous value was and we added a character Then from the state if the following character is we make traversions to and to This actually leads to rewriting traversions as a matrix Let be the vector such that its th element is equal to Then advancing from to if th character is can be represented as follows where can be filled with the help of KMP automaton for every we add to and also add to The same approach can be used to form matrix that denotes adding character and if we want to add the string we can actually represent its matrix as This matrix multiplication approach will run in but the problem is that it doesn t give us the answer To obtain it we may add an auxiliary state to the dynamic programming add to it each time we traverse to state multiply it by each time we add a character and rewrite it into matrix form Model solution https pastebin com ctSVxmnD,1
361,You are given an undirected connected graph some vertices of which contain tokens and or bonuses Consider a game involving one player you You can move tokens according to the following rules At the beginning of the game you can make exactly one turn move any token to any adjacent vertex If the movement of the token ended on the bonus then you are allowed to make another turn with any token You can use different bonuses in any order The same bonus can be used an unlimited number of times Bonuses do not move during the game There can be several tokens in one vertex at the same time but initially there is no more than one token in each vertex The vertex with number is the finish vertex and your task is to determine whether it is possible to hit it with any token by making turns with the tiles according to the rules described above If a token is initially located at the vertex of then the game is considered already won For example for a given graph you can reach the finish line with a chip from the th vertex by making the following sequence of turns Move from the th vertex to the th Move from the th vertex to the th Move from the th vertex to the th Move from the th vertex to the th Move from the th vertex to the nd Move from the th vertex to the th Move from the nd vertex to the st vertex which is the finish ,Since then the transformation graph is a tree Let s solve the problem recursively Suppose that material is a leaf in the tree there is no such that Then if we don t have enough material we have to transform some of material into Let s transform the amount required to set current amount of material to if we don t have the required amount of material then this amount will temporarily be negative And if we have more material than we need to conduct the experiment then we will transform it to The same algorithm can be applied to any non root node but we first need to do this for all its children This algorithm is optimal because each time we take the minimum possible amount from the parent After this the root will be the only node such that is not necessarily equal to current amount of material Since we solved the problem for all other materials and did it optimally now the answer is YES iff current amount of material is not less than This must be implemented carefully Since the total amount of materials never increases then if some material s current amount is less than for example then the answer is already NO Also overflows in multiplication must be avoided to do this we can firstly check if the result of multiplication is not too big by multiplying values as real numbers ,0
362,You are given a string consisting of lowercase Latin characters In an operation you can take a character and replace occurrences of this character with or replace occurrences of this character with Is it possible to perform some number of moves so that the resulting string is an alternating binary string For example consider the string You can perform the following moves Replace with Now the string is Replace with Now the string is Replace with Now the string is This is an alternating binary string An is a string of s and s such that no two adjacent bits are equal For example are alternating binary strings but are not ,First of all the information given in the input is the structure of a trie built on and some other strings so we can store this information in the same way as we store a trie Okay now let s calculate the number of seconds required to type each string with dynamic programming let be the number of seconds required to arrive to the th vertex of the trie For regular vertices where is the parent of vertex for vertices corresponding to strings from values should be updated with the time required to autocomplete some of the parents to the current vertex To do these updates let s calculate the answers for all strings in lexicographical order We will run DFS on the trie and maintain a segment tree on the path from the root to the current vertex In the segment tree we will store the values of where is the number of seconds required to autocomplete from to the current vertex Obviously if we are currently in a vertex representing a word from then we have to find the minimum in this segment tree and that will be the cost to get to current vertex using autocompletion How to maintain Recall that we are running DFS on trie in lexicographical order When we want to compute the answer for the first string the value of for all vertices is since our string will be the first in all autocompletion lists And here s a trick to maintain these values for other strings whenever we compute the answer for some string add on the whole tree For vertices that are ancestors of both current string and some next string this will stay and increase the cost to autocomplete the next string accordingly but for vertices which are not on the path to some next string the values of will be already deleted from the segment tree and replaced by new values so this addition does not affect them Overall this works in but it can be written in with a vector instead of a segment tree since all additions and minimum queries affect the whole structure ,0
363,There are products in the shop The price of the th product is The owner of the shop wants to equalize the prices of all products However he wants to change prices smoothly In fact the owner of the shop can change the price of some product in such a way that the difference between the old price of this product and the new price is at most In other words the condition should be satisfied is the absolute value of He can change the price for each product Note that he can leave the old prices for some products The new price of each product should be positive i e should be satisfied for all from to Your task is to find out the possible price of productts with the restriction that for all products the condiion should be satisfied where is the old price of the product and is the same new price of all products or report that it is impossible to find such price You should answer independent queries ,Firstly since we are interested in minimum possible size of the array we don t need any elements other than minimums and maximums So the array has at most distinct elements Now there are many possible solutions The simplest one is to iterate on the number of minimums let this be and maximums let this be If the number of minimums is equal to the number of maximums then the array should have all elements as both its minimums and maximums so its length should be otherwise it should be We can iterate on all possible pairs and find the best result over all of them A solution in is possible if you see that you only have to consider and as the number of minimums maximums or check if the segments and intersect in ,0
364,After returning from the army Makes received a gift an array consisting of positive integer numbers He hadn t been solving problems for a long time so he became interested to answer a particular question how many triples of indices such that is minimum possible are there in the array Help him with it ,Minimal product is obtained by multiplying three smallest elements of the array Let s iterate over the middle element of these three and calc sum of all options Firstly let s precalc two arrays of pairs and is minimum and number of its occurrences on the prefix of array up to index inclusive is minimum and number of its occurrences on the suffix of array up to index inclusive It can be done with two traversals over the array Let s also store set of three elements which give minimal product of the array Consider every index from to inclusive 0 indexed If set is equal to the stored set of three minimums then add to the answer number of ways to choose pair that is Overall complexity ,1
365,You are given an array of length which consists of non negative integers An array is called if the parity of each index matches the parity of the element at that index More formally an array is good if for all the equality holds where is the remainder of dividing by 2 For example the arrays and are good and the array is bad because for the parities of and are different but In one move you can take two elements of the array and swap them these elements are not necessarily adjacent Find the minimum number of moves in which you can make the array good or say that this is not possible ,We split all the positions in which the parity of the index does not match with the parity of the element into two arrays If there is an odd number in the even index add this index to the array Otherwise if there is an even number in the odd index add this index to the array Note that if the sizes of the and arrays are not equal then there is no answer Otherwise the array can be made by doing exactly operations by simply swapping all the elements in the and arrays ,1
366,You are given a directed graph with vertices and directed edges without self loops or multiple edges Let s denote the coloring of a digraph as following you color each edge in one of colors The coloring is if and only if there no cycle formed by edges of same color Find a good coloring of given digraph with minimum possible ,Firstly let be the number of odd elements in the array Note that even elements are don t matter at all because they cannot change the parity of the sum If then it is obviously impossible to split the given array into subsegments with odd sum And if then it is impossible to split the array into subsegments with odd sum also because at least one of segments will have even number of odd elements so will have odd sum In other cases the answer is always and you can print leftmost positions of odd elements and as right borders of segments it means that when you find one odd element you end one segment Because now the last segment will have odd number of odd elements so it will have odd sum also ,0
367,The round carousel consists of figures of animals Figures are numbered from to in order of the carousel moving Thus after the th figure the figure with the number follows Each figure has its own type the type of the animal corresponding to this figure the horse the tiger and so on The type of animal of the th figure equals You want to color each figure in one of the colors You think that it s boring if the carousel contains two different figures with the distinct types of animals going one right after another and colored in the same color Your task is to color the figures in such a way that the number of distinct colors used is the minimum possible and there are no figures of the different types going one right after another and colored in the same color If you use exactly distinct colors then the colors of figures should be denoted with integers from to ,If there are two elements with the same value then the answer is because neither of these values is less than the other Otherwise the answer is since we can just sort the array The time complexity is or depending on the implementation ,0
368,You are playing another computer game and now you have to slay monsters These monsters are standing in a circle numbered clockwise from to Initially the th monster has health You may shoot the monsters to kill them Each shot requires exactly one bullet and decreases the health of the targeted monster by deals damage to it Furthermore when the health of some monster becomes or less than it dies and explodes dealing damage to the next monster monster if or monster if If the next monster is already dead then nothing happens If the explosion kills the next monster it explodes too damaging the monster after it and possibly triggering another explosion and so on You have to calculate the minimum number of bullets you have to fire to kill all monsters in the circle ,We cannot utilize the explosion of the last monster we kill So the naive approach is to iterate on the monster we kill the last break the circle between this monster and the next one and then shoot the first monster in the broken circle until it s dead then the second one and so on Let s calculate the number of bullets we will fire this way If the circle is broken after the monster then the first monster gets bullets the second one and so on all monsters except the first one get exactly bullets So we should choose an index such that is minimum possible since this is the number of bullets we have to spend additionally since we cannot utilize the explosion of the th monster After breaking the circle between the monsters and you may use a formula to calculate the required number of bullets or just model the shooting ,1
369,You are given a huge decimal number consisting of digits It is guaranteed that this number has no leading zeros Each digit of this number is either or You may perform several possibly zero operations with this number During each operation you are allowed to change any digit of your number you may change to or to It is possible that after some operation you can obtain a number with leading zeroes but it does not matter for this problem You are also given two integers Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder modulo In other words the obtained number should have remainder when divided by ,As we can see last digits of the resulting number will be zeros except the th So we need to change all ones to zeros if needed among last digits if the position of the digit is not and change zero to one if needed otherwise It can be done with simple cycle ,1
370,Lena is a programmer She got a task to solve at work There is an empty set of pairs of integers and queries to process Each query is one of three types Add a pair to the set Remove a pair added in the query number All queries are numbered with integers from to For a given integer find the maximal value over all pairs from the set Help Lena to process the queries ,Let s interpret the problem geometrically the pairs from the set are the lines and the problem to find to topmost intersection of the vertical line with the lines from the set Let s split the queries to blocks Consider the lines added before the current block and that will not deleted in the current block Let s build the lower envelope by that lines Now to calculate the answer to the query we should get maximum over the lines from the envelope and the lines from the block before the current query that is not deleted yet There are no more than lines from the block so we can iterate over them Let s find the answers from the envelope for all queries of the third type from the block at once we should sort them and iterate over envelope using two pointers technique ,1
371,You are given a string consisting of the characters and Let s call a string if it consists of the characters and and any two adjacent characters are different i e it has the form or Let s call a string if it consists of the characters and and you can replace the characters to or for each character the choice is independent so that the string becomes For example the strings and are beautiful and the strings and are not Calculate the number of beautiful contiguous substrings of the string ,Let s find a simple condition when the string is not beautiful A string is not beautiful if there are two characters or two characters at an odd distance or and at an even distance because in this case the string cannot be made unstable Iterate over the right border of the substring Let be the maximum index such that the substring is not beautiful or if the substring is beautiful Then we have to add to the answer since any substring of a beautiful string is also beautiful Denote as the last occurrence of or at the position of parity Let is the parity of then i e find the nearest character that breaks a beautiful substring at an odd distance or at an even distance The case for is similar If then we can choose what this character will be Obviously we need to choose the option with the smaller value of ,1
372,There are dormitories in Berland State University they are numbered with integers from to Each dormitory consists of rooms there are rooms in th dormitory The rooms in th dormitory are numbered from to A postman delivers letters Sometimes there is no specific dormitory and room number in it on an envelope Instead of it only a room number among all rooms of all dormitories is written on an envelope In this case assume that all the rooms are numbered from to and the rooms of the first dormitory go first the rooms of the second dormitory go after them and so on For example in case and an envelope can have any integer from to written on it If the number is written on an envelope it means that the letter should be delivered to the room number of the second dormitory For each of letters by the room number among all dormitories determine the particular dormitory and the room number in a dormitory where this letter should be delivered ,The first and crucial observation is that we don t need all the cards that we get during each turn In fact since the total cost is limited to we may leave three best cards of cost one best card of cost and one best card of cost and all other cards may be discarded So the problem is reduced we get only cards each turn The problem may be solved with dynamic programming is the maximum damage we may deal if we played turns and the last card we played had remainder modulo Processing each turn may be done with auxiliary dp the maximum damage we can deal during the turn if we play cards and denotes whether some card there will be only one such card obviously deals double damage To calculate this auxiliary dp we may do almost anything since we are limited to cards during each turn It is possible to calculate it in a fast way using some casework but it is easier for example to try all possible permutations of cards and play some prefix of a fixed permutation By combining these two techniques we get a solution ,0
373,Vova has taken his summer practice this year and now he should write a report on how it went Vova has already drawn all the tables and wrote down all the formulas Moreover he has already decided that the report will consist of exactly pages and the th page will include tables and formulas The pages are numbered from to Vova fills the pages one after another he can t go filling page before finishing page and he can t skip pages However if he draws than tables in a row or writes than formulas in a row then he will get bored Vova wants to rearrange tables and formulas in each page in such a way that he doesn t get bored in the process Vova can t move some table or some formula to another page Note that the count doesn t reset on the start of the new page For example if the page ends with tables and the next page starts with tables then it s counted as tables in a row Help Vova to determine if he can rearrange tables and formulas on each page in such a way that there is no more than tables in a row and no more than formulas in a row ,This problem is just all about the implementation Firstly let s sort the initial values and compress them to pairs where is the number of elements The first observation is pretty standard and easy some equal elements will remain unchanged So let s iterate over all elements in some order and suppose that all elements will remain unchanged Firstly we need elements which we should obtain by some moves The second observation is that we first need to take elements from one end only less or only greater and only then from the other if needed Consider the case when we first take less elements The other case is almost symmetric Let be the number of less than which we need to increase to If then skip the following step Otherwise let be the number of elements less than or equal to be the sum of all elements less than or equal to and be the previous value the maximum value less than Then we need to increase all elements less than or equal to at least to the value It costs moves And then we need moves to increase elements to And let be the number of elements greater than which we need to decrease to if we increased elements already If then skip the following step Otherwise let be the number of elements greater than or equal to be the sum of all elements greater than or equal to and be the next value the minimum value greater than Then we need to decrease all elements greater than or equal to at least to the value It costs moves And then we need moves to decrease elements to So we can update the answer with the sum of values described above and proceed to the next value Arrays are just simple prefix and suffix sums which can be calculated in using very standard and easy dynamic programming Don t forget about the overflow Total time complexity because of sorting ,0
374,You are given string of length consisting of s and s You build an infinite string as a concatenation of an infinite number of strings or For example if then Calculate the number of prefixes of with equal to The balance of some string is equal to where is the number of occurrences of in and is the number of occurrences of in The number of such prefixes can be infinite if it is so you must say that A prefix is a string consisting of several first letters of a given string without any reorders An empty prefix is also a valid prefix For example the string abcd has 5 prefixes empty string a ab abc and abcd ,Let s denote a prefix of length as We can note that each where and is a concatenation Then balance of prefix of length is equal to Now there two cases is equal to or not If then if exist such that then for each and answer is Otherwise for each such there will no more than one possible since there are zero or one solution to the equation The solution exists if and only if and So just precalc and for each check the equation ,1
375,You are given a string consisting of lowercase Latin letters You have to type this string using your keyboard Initially you have an empty string Until you type the whole string you may perform the following operation add a character to the end of the string Besides you may perform one additional operation copy the string and append it to itself For example if you have to type string you can type it in operations if you type all the characters one by one However you can type it in operations if you type the string first and then copy it and type the last character If you have to type string the best option is to type characters one by one then copy the string and then type the remaining character Print the minimum number of operations you need to type the given string ,It s quite easy to see that ab x bmod a bmod b x bmod a bmod b What does it mean The property given in the statement holds for x if and only if it holds for x bmod ab It allows us to answer each testcase in O ab q as follows for each number from 0 to ab 1 we may check the given property before processing the queries and build an array of prefix sums on it to efficiently count the number of integers satisfying the property from the segment 0 y where y ab Then each query l r can be divided into two prefix queries 0 l 1 and 0 r To answer a prefix query 0 p in O 1 we can calculate the number of full segments of length ab inside this prefix that is lfloor frac p ab rfloor and the length of the last segment of numbers that don t belong into a full segment that is p bmod ab To handle full segments we multiply the number of integers satisfying the property on one segment by the number of such segments and to handle the last part of segment we use prefix sums ,0
376,Polycarp has coins the value of the th coin is Polycarp wants to distribute all the coins between his pockets but he cannot put two coins with the same value into the same pocket For example if Polycarp has got six coins represented as an array he can distribute the coins into two pockets as follows Polycarp wants to distribute all the coins with the minimum number of used pockets Help him to do that ,Let s perform the process in reverse we will remove the first and last character of the string if these two characters are different We should do this as long as possible since we need to find the shortest initial string So the algorithm is straightfoward keep track of the left and right characters and if they are different remove both Otherwise output the length of the current string or output if the string became empty There are a few ways to implement this For example you can keep two pointers one at the beginning of the string and one at the end say and and check if If it s true then we increment and decrement Otherwise we output We stop when Alternatively you can use deque to simulate the operations directly The time complexity is ,0
377,Polycarp wants to buy shovels The shop sells packages with shovels The store has types of packages the package of the th type consists of exactly shovels The store has an infinite number of packages of each type Polycarp wants to choose type of packages and then buy several one or more packages of this type What is the smallest number of packages Polycarp will have to buy to get exactly shovels For example if and then Polycarp will buy packages of shovels Help Polycarp find the minimum number of packages that he needs to buy given that he will buy exactly shovels in total the sizes of packages he will buy are all the same and the number of shovels in each package is an integer from to inclusive ,If Polycarp buys packages of shovels and gets exactly shovels in total then that is and are divisors of Then the problem reduces to the following you need to find the maximum divisor of the number not greater than To do this iterate over all the numbers from to inclusive and check whether is divisible by If so then and are both divisors of and you can use them to try to improve the answer ,1
378,Adilbek was assigned to a special project For Adilbek it means that he has days to run a special program and provide its results But there is a problem the program needs to run for days to calculate the results Fortunately Adilbek can optimize the program If he spends is a non negative integer days optimizing the program he will make the program run in days is the ceiling function The program cannot be run and optimized simultaneously so the total number of days he will spend is equal to Will Adilbek be able to provide the generated results in no more than days ,At first let s note that if is integer and and are non negative then So instead of looking at we can consider It s easier since the function is more common function and it can be proven that it s concave upward It means that this function has a unique minimum and moreover we can calculate it has minimum value in and Since the ceiling function is monotonically increasing so we can assume that for all So we can just iterate from to and check the unequation The total complexity is equal to There is a simple optimization because of the monotone ceiling we can prove that we need to check only and ,1
379,Polycarp likes to play with numbers He takes some integer number writes it down on the board and then performs with it operations of the two kinds divide the number by must be divisible by multiply the number by After each operation Polycarp writes down the result on the board and replaces by the result So there will be numbers on the board after all You are given a sequence of length the numbers that Polycarp wrote down This sequence is given in arbitrary order i e the order of the sequence can mismatch the order of the numbers written on the board Your problem is to rearrange reorder elements of this sequence in such a way that it can match possible Polycarp s game in the order of the numbers written on the board I e each next number will be exactly two times of the previous number or exactly one third of previous number It is guaranteed that the answer exists ,Let be the maximum integer such that is divisible by Our problem is to rearrange the given array in such a way that easy to see it if we look at our operations if it looks like then for each the next inequality will be satisfied And if then numbers must be placed in increasing order because of our operations So we can store an array of pairs when Then if we sort it in lexicographical order we can just print the second elements of the sorted array ,1
380,Monocarp is playing a game Assimilation IV In this game he manages a great empire builds cities and conquers new lands Monocarp s empire has cities In order to conquer new lands he plans to build The game is turn based and since Monocarp is still amateur he builds exactly one Monument per turn Monocarp has points on the map he d like to control using the constructed Monuments For each point he knows the distance between it and each city Monuments work in the following way when built in some city a Monument controls all points at distance at most to this city Next turn the Monument controls all points at distance at most the turn after at distance at most and so on Monocarp will build Monuments in turns and his empire will conquer all points that are controlled by at least one Monument Monocarp can t figure out any strategy so during each turn he will choose a city for a Monument randomly among all remaining cities cities without Monuments Monocarp wants to know how many points among of them he will conquer at the end of turn number Help him to calculate the expected number of conquered points ,Firstly since we are interested in minimum possible size of the array we don t need any elements other than minimums and maximums So the array has at most distinct elements Now there are many possible solutions The simplest one is to iterate on the number of minimums let this be and maximums let this be If the number of minimums is equal to the number of maximums then the array should have all elements as both its minimums and maximums so its length should be otherwise it should be We can iterate on all possible pairs and find the best result over all of them A solution in is possible if you see that you only have to consider and as the number of minimums maximums or check if the segments and intersect in ,0
381,Let s call some positive integer if its decimal representation contains no more than non zero digits For example numbers are and numbers are not You are given a segment Count the number of integers such that Each testcase contains several segments for each of them you are required to solve the problem separately ,Let s sort all people by their height in descending order Now let s go through all the people and look for the position of the person in the sorted array the height of which is strictly less than ours for example by binary search Obviously only those people who are in the sorted array later than the found person can stand in front of us all of them have a height strictly less than ours Among all these people it is more profitable for us to take a person with minimum width In order to find such a person quickly we can find a person with the minimum width for each suffix of the sorted array To handle a situation where a person is lying down we need to swap the width and height and repeat the algorithm above ,0
382,You are given three integers and Find two positive integers and such that the decimal representation of without leading zeroes consists of digits the decimal representation of without leading zeroes consists of digits the decimal representation of without leading zeroes consists of digits denotes the greatest common divisor GCD of integers and Output and If there are multiple answers output any of them ,The easiest way to force some gcd to be of some fixed length is to use the divisibility rules for or if the number produced by the last digits is divisible by then is also divisible by same goes for and One of the possible constructions is the following let and Since and are pairwise prime gcd is Overall complexity per testcase ,1
383,You are given a string consisting of lowercase Latin letters Let s denote substring of as a string Obviously and there are exactly such substrings Let s call some string an of a string iff the following conditions are met is an odd number is simultaneously a prefix and a suffix of For evey substring of you have to calculate the maximum length of its odd proper suprefix ,Let s look at suprefix of fixed substring we can t find its maximal length via binary search because this function isn t monotone in general case But by fixing not the left border but the center of the prefix we also fix the center of the corresponding suffix center of a prefix in position is tied with the center of the suffix in position and more important function becomes monotone So solution is next iterate over all valid centers of prefix and try to binary search maximal length of such substring that its center is in position and it s equal to the substing with center in then can be updated with value And don t forget to update each with value Easy way to check substrings for equality is to use hashes Harder way is to use string suffix structures like bundle of Suffix Array LCP Sparse Table or Suffix Tree LCA Note for SuffArray users don t forget about changing sort to stable sort merge sort and breaking if all suffixes are different This optimizations can save you from writing radix or bucket sort ,1
384,You are given a permutation A permutation of length is a sequence such that each integer between and occurs exactly once in the sequence Find the number of pairs of indices such that the value of the median of is exactly the given number The median of a sequence is the value of the element which is in the middle of the sequence after sorting it in non decreasing order If the length of the sequence is even the left of two middle elements is used For example if then its median is since after sorting the sequence it will look like and the left of two middle elements is equal to The median of equals since after sorting the value will be in the middle of the sequence Write a program to find the number of pairs of indices such that the value of the median of is exactly the given number ,The segment has median equals if and only if belongs to it and or where is number of elements in that strictly less than and is number of elements in that strictly greater than Here we ve used a fact that is a permutation on there is exactly one occurrence of In other words belongs and the value equals or Calculate prefix sums where the value on the prefix of the length i e on the subarray For fixed value it is easy to calculate number of such that is suitable At first check that met on Valid values are such indices that no on and or Let s maintain number of prefix sums to the left of for each value We can use just a map where is number of such indices that and is to the left of So for each that contains do where is the current value Time complexity is if a standard map is used or if classical array for is used remember about possible negative indices just use an offset ,1
385,The leader of some very secretive organization has decided to invite all other members to a meeting All members of the organization live in the same town which can be represented as crossroads connected by two directional streets The meeting will be held in the leader s house near the crossroad There are members of the organization invited to the meeting th of them lives near the crossroad All members of the organization receive the message about the meeting at the same moment and start moving to the location where the meeting is held In the beginning of each minute each person is located at some crossroad He or she can either wait a minute at this crossroad or spend a minute to walk from the current crossroad along some street to another crossroad obviously it is possible to start walking along the street only if it begins or ends at the current crossroad In the beginning of the first minute each person is at the crossroad where he or she lives As soon as a person reaches the crossroad number he or she immediately comes to the leader s house and attends the meeting Obviously the leader wants all other members of the organization to come up as early as possible But since the organization is very secretive the leader does not want to attract much attention Let s denote the of the leader as follows initially the discontent is whenever a person reaches the crossroad number the discontent of the leader increases by where is some fixed constant and is the number of minutes it took the person to reach the crossroad number whenever members of the organization walk is added to the discontent where is some fixed constant This is not cumulative for example if two persons are walking along the same street in the same direction at the same moment then is added to the discontent not Before sending a message about the meeting the leader can tell each member of the organization which path they should choose and where they should wait Help the leader to establish a plan for every member of the organization so they all reach the crossroad and the discontent is minimized ,Let s use as usual linearity of an expected value where is an indicator function and equal to iff Adilbek will be able to solve the th crossword How to calculate If then is always On the other hand if is always Otherwise we need to calculate the needed probability To calculate we can iterate over the number of crosswords among first ones which will require extra time Obviously if then we don t have enough time to solve the th crossword also Let s denote There are ways to choose crosswords with extra time among all variants So the final formula is following The only problem is the efficiency But we can find out several interesting properties At first The other one since then And this exactly the efficient way to transform to by multiplying and adding one coefficient we can transform the prefix sum of the th row to the prefix sum of the row And to reduce the length of the prefix sum we can just subtract unnecessary coefficients In result the total complexity is maybe with extra factor because of modular arithmetic ,0
386,You are given an array consisting of elements The of some subsegment of this array is the difference between the maximum and minimum element from this segment The of the array is the sum of of all subsegments of this array For example the of array is because there are different subsegments of this array from index to index is from index to index is from index to index is from index to index is from index to index is from index to index is You have to determine the of the array ,Let s discuss two approaches to this problem Firstly let s think that we choose not four destination points but four lines on which sides of the square lie It s two vertical lines with coordinates and and two horizontal lines and of course is to note that either both and coincide with some s and coincide with one of or both and coincide with some s and coincide with one Since we know the side of the square from or and one point It s easy to construct other points of the square and find the minimum total distance by iterating all permutations This approach needs around operations and work around one second if written accurately is more clever and faster Let s assign a role for each point which vertex of the final square this will be left bottom left top right bottom or right top There will be such assignments For simplicity let s say that the left bottom vertex is left top is right bottom is and right top is If we rewrite our total distance formulas we can note that instead of summing the distance between points we can sum the distance from lines to the points which should lie on it In other words we can calculate the answer as Let s look at the left side If then the total distance is always and has it s optimal segment of values Analogically also has it s optimal segment of values Since we can choose as any value in its segment and as any value in its segment then the possible distance the side of the square also forms a segment of possible values let s name it as and can be calculated with pretty easy formula On the other hand we can do the same with horizontal sides and compute the segment of optimal side length in the same manner Now if and intersects then we can choose such side length that lies in both and and optimal for both vertical sides and horizontal sides Otherwise without loss of generality and if we choose we need to pay extra fee since we out of it means that the chosen is greater than optimal so we need to choose for example outside And we need to pay for each step outside of this segment In other words the answer for a fixed permutation is ,0
387,Polycarp has come up with a new game to play with you He calls it A missing bigram A of a word is a sequence of two adjacent letters in it For example word contains bigrams and The game goes as follows First Polycarp comes up with a word consisting only of lowercase letters a and b Then he writes down all its bigrams on a whiteboard After that he wipes one of them off the whiteboard Finally Polycarp invites you to guess what the word that he has come up with was Your goal is to find any word such that it s possible to write down all its bigrams and remove one of them so that the resulting sequence of bigrams is the same as the one Polycarp ended up with The tests are generated in such a way that the answer exists If there are multiple answers you can print any of them ,Let s prove that division possible if and only if union of all segments has two and more segments If the union have at least two segments then we can choose one of them and put all segments it contains in one group and other segments to another group On the other hand if we can divide all segments in two groups in such way that there are no pair from different group which intersects then union of segments from the first group doesn t intersect union of segments from another and union of unions consists of several non intersecting components How can it help If union of segments consits of several segments then exists such that for any segment either or and both parts are non empty Moreover equals to one of It leads us straight to one of possible solutions sort all segments by in increasing order and for each we should check that suffix minimum If we ve found such then all prefix goes to one group and suffix to another ,0
388,Consider some set of distinct characters and some string consisting of exactly characters where each character is present in You are given an array of integers You are allowed to perform the following move on the string Choose some valid and set Take the first characters of Take the last characters of Substitute the first characters of with the reversed Substitute the last characters of with the reversed For example let s take a look at and Reversed Thus the resulting is The move can be performed arbitrary number of times possibly zero Any can be selected multiple times over these moves Let s call some strings and equal if and only if there exists such a sequence of moves to transmute string to string For the above example strings and are equal Also note that this implies The task is simple Count the number of distinct strings The answer can be huge enough so calculate it modulo ,Let s show by construction that there can be no ambiguity in values of of the children who were leaders at least once except for probably the last leader If then on this step the value of taken was exactly Otherwise went over and in circle ended up to the left or in the same position So for this case should be Obviously counting cannot go over two or more times as this will result in We only need to check if all the numbers are unique and fill the unvisited children with remaining values to form the permutation Overall complexity ,0
389,Professor GukiZ has two arrays of integers and Professor wants to make the sum of the elements in the array as close as possible to the sum of the elements in the array So he wants to minimize the value In one operation professor can swap some element from the array and some element from the array For example if the array is and the array is professor can swap the element from the array and the element from the array and get the new array and the new array Professor doesn t want to make more than two swaps Find the minimal value and some sequence of no more than two swaps that will lead to the such value Professor makes swaps one by one each new swap he makes with the new arrays and ,We can process the cases of zero or one swap in time Consider the case with two swaps Note we can assume that two swaps will lead to move two elements from to and vice versa in other case it is similar to the case with one swap Let s iterate over all the pairs of the values in and store them in some data structure in C we can user map Now let s iterate over all the pairs and find in out data structure the value closest to the value and update the answer by the value Required sum we can find using binary search by data structure map in C has lower bound function ,1
390,You are given two strings and Both strings have length and consist of lowercase Latin letters The characters in the strings are numbered from to You can successively perform the following move any number of times possibly zero swap any two adjacent neighboring characters of i e for any you can swap and You can t apply a move to the string The moves are applied to the string one after another Your task is to obtain the string from the string Find any way to do it with at most such moves ,Consider how each sort of tea affects the tasters The th sort makes testers for some drink to their limit and the th taster drink the remaining tea Sometimes there is no such th taster but we ll explore the general case Let s add the remaining tea straight to the th taster answer And for each taster from to we ll add into the value denoting how many times they drank at their limit If we have these calculated we can obtain the answer by adding and In order to find we can use prefix sums Build over the sequence Now you want to find the largest such that Rewrite it as You can do this with a binary search In particular with an upper bound call The amount of the remaining tea can also be calculated from prefix sums To add on a range you can use a technique called delta encoding Add to Subtract from After everything is added propagate this values via a prefix sum This way if both and happened non strictly to the left or strictly to the right of it doesn t affect at all the segment either closes before or opens after Otherwise it adds exactly to Overall complexity per testcase ,0
391,Each day in Berland consists of hours Polycarp likes time management That s why he has a fixed schedule for each day it is a sequence each is either or where if Polycarp works during the th hour of the day and if Polycarp rests during the th hour of the day Days go one after another endlessly and Polycarp uses the same schedule for each day What is the maximal number of continuous hours during which Polycarp rests It is guaranteed that there is at least one working hour in a day ,Firstly about the problem description Vova really needs to i e play Exactly turns Among all possible ways to do it he need choose one where the number of turns when he this is the first type turn is Suppose the answer is Then the charge of the battery after turns will be If this value is greater than then the answer is Otherwise we need to replace some turns when Vova with turns when Vova The charge of the battery will increase by avfter one replacement We have to obtain with some replacements The number of turns to do it is equals to where is divided by rounded up If then the answer is Otherwise the answer is ,0
392,Vasya owns three big integers Let s define a partition of such a sequence of strings that where is a concatanation of strings is the th element of the partition For example number has the following partitions and lots of others Let s call some partition of if each of its elements Vasya want to know the number of partitions of number which has each of satisfy the condition Note that the comparison is the integer comparison not the string one Help Vasya to count the amount of partitions of number such that they match all the given requirements The result can be rather big so print it modulo ,First of all let s try to find the best strategy to play minions All minions should be summoned if someone is not summoned summoning and deleting it won t make the answer worse the resulting number of minions should be exactly if it is less then we didn t need to delete the last deleted minion Furthermore if some minion should be deleted we can delete it just after it is summoned All these greedy ideas lead to the following structure of the answer we choose minions and summon them in some order we choose minions which will be summoned and instantly deleted we summon the remaining minion Let s analyze how these minions affect the answer The first minion has power and does not give bonus to anyone the second one has power and gives bonus to one minion and so on the th minion from the first group adds to the answer Minions from the second group buff minions each so they add to the answer and the last minion adds Let s unite the first group and the last minion then we will have two groups of minions those which are destroyed the second group and those which are not destroyed the first group From there we will have two possible ways to finish the solution there are minions and positions for them and for each pair minion position we may calculate the value this pair adds to the answer After that we should assign each monster a position in such a way that each position is chosen exactly once and the sum of values is maximized It can be done with mincost flows or Hungarian algorithm the minions from the first group should be played in non descending order of their Let s sort all minions by and write the following dynamic programming is the maximum answer if we considered first minions and of them were assigned to the first group Since the minions are sorted by whenever we add a minion to the first group it should add exactly to the answer and increase by and if a minion is added to the second group the answer is increased by ,0
393,You are given four positive integers Find any such rectangular matrix of size that satisfies all of the following conditions each row of the matrix contains exactly ones each column of the matrix contains exactly ones all other elements are zeros If the desired matrix does not exist indicate this For example for there exists a matrix satisfying the conditions above ,Let s precompute for each value its position in permutation It s easy to do in linear time Consider some foe pair we may assume Let s store for each value the leftmost position such that is a foe pair Denote that value as Now let s iterate over the array from right to left and maintain the position of the maximal correct interval with the left end in the current position To maintain the value we should simply take the minimum with the value And finally we should increment the answer by the value ,0
394,Dmitry has segments of different colors on the coordinate axis Each segment is characterized by three integers and where and are are the coordinates of the ends of the th segment and is its color Dmitry likes to find the minimum distances between segments However he considers pairs of segments of the same color uninteresting Therefore he wants to know for each segment the distance from this segment to the nearest colored segment The distance between two segments is the minimum of the distances between a point of the first segment and a point of the second segment In particular if the segments intersect then the distance between them is equal to For example Dmitry has segments The first segment intersects with the second and these are segments of different colors so the answers for them are equal to For the rd segment the nearest segment of a different color is the nd segment the distance to which is equal to For the th segment the nearest segment of a different color is the th segment the distance to which is equal to The th segment lies inside the nd segment and these are segments of different colors so the answers for them are equal to ,As we can see last digits of the resulting number will be zeros except the th So we need to change all ones to zeros if needed among last digits if the position of the digit is not and change zero to one if needed otherwise It can be done with simple cycle ,0
395,There are emotes in very popular digital collectible card game the game is pretty famous so we won t say its name The th emote increases the opponent s happiness by units we all know that emotes in this game are used to make opponents happy You have time to use some emotes only times You are allowed to use any emotion once more than once or not use it at all The only restriction is that you otherwise the opponent will think that you re trolling him You have to make your opponent as happy as possible Find the maximum possible opponent s happiness ,It is obvious that we always can use only two emotes with maximum Let their values be and We have to solve the problem by some formula The best way to use emotes use the emote with the value times then use the emotion with the value then again use the emote with value times and so on So the has length and we can use the emote with the value the remaining number of times So the answer is where is the first maximum of is the second maximum of is divided by rounded down and is modulo ,1
396,Kristina has a string of length consisting only of lowercase and uppercase Latin letters For each pair of lowercase letter and its matching uppercase letter Kristina can get burl However pairs of characters cannot overlap so each character can only be in one pair For example if she has the string aAaaBACacbE she can get a burl for the following character pairs a and A a and A B and b C and c Kristina wants to get more burles for her string so she is going to perform no more than operations on it In one operation she can either select the lowercase character and make it uppercase or select uppercase character and make it lowercase For example when 2 and aAaaBACacbE it can perform one operation choose a and make it uppercase Then she will get another pair of A and a Find number of burles Kristina can get for her string ,Let s consider each kilometer of the journey separatedly and calculate the expected value of its difficulty and then use linearity of expectation to obtain the answer The difficulty of each kilometer depends on the rest site right before it or if there were no rest sites on the distance from Moscow to this kilometer So when considering the difficulty of th kilometer one indexed we may obtain a formula The denominator of the last summand is because it represents the situation where the last rest was in Moscow and its probability is exactly We can actually rewrite this as follows thus calculating all that we need in linear time ,0
397,In the school computer room there are servers which are responsible for processing several computing tasks You know the number of scheduled tasks for each server there are tasks assigned to the th server In order to balance the load for each server you want to reassign some tasks to make the difference between the most loaded server and the least loaded server as small as possible In other words you want to minimize expression where is the most loaded server and is the least loaded one In one second you can reassign a single task Thus in one second you can choose any pair of servers and move a single task from one server to another Write a program to find the minimum number of seconds needed to balance the load of servers ,Let be the indicator function equal to if the th point is controlled by any city and otherwise Then the expected number of controlled points can be written as by linearity of expected value The expected value of the indicator function is equal to the probability of this function equal to In other words for each point we need to calculate the probability of this point being controlled by any city Let s instead calculate the probability of point not being controlled by any city Suppose the distance between point and some city is equal to If we build a Monument in city at step zero indexed then the point will be controlled by city But building the Monument at any step greater or equal than is fine Let s for each turn calculate the number of cities that you can build Monument in starting this turn as Our task is to calculate the number of permutations that are consistent with array At first turn we can choose one of cities at second turn we have choices at third step choices and so on Using this idea it s not hard to calculate the number of good permutations and then the initial probablity The expected value ,0
398,You are given an undirected graph consisting of vertices Initially there are no edges in the graph Also you are given queries each query either adds one undirected edge to the graph or removes it After each query you have to check if the resulting graph is bipartite that is you can paint all vertices of the graph into two colors so that there is no edge connecting two vertices of the same color ,If the edges were only added and not deleted it would be a common problem that is solved with disjoint set union All you need to do in that problem is implement a DSU which maintains not only the leader in the class of some vertex but also the distance to this leader Then if we try to connect two vertices that have the same leader in DSU and the sum of distances to this leader is even then we get a cycle with odd length and graph is no longer bipartite But in this problem we need to somehow process removing edges from the graph In the algorithm I will describe below we will need to somehow remove the last added edge from DSU or even some number of last added edges How can we process that Each time we change some variable in DSU we can store an address of this variable and its previous value somewhere for example in a stack Then to remove last added edge we rollback these changes we rewrite the previous values of the variables we changed by adding the last edge Now we can add a new edge and remove last added edge All these operations cost because path compression doesn t work in intended time if we have to rollback Let s actually start solving the problem For convinience we change all information to queries like edge exists from query number till query number It s obvious that there are no more than such queries Let s use divide and conquer technique to make a function that answers whether the graph is bipartite or not after every query from some segment of queries First of all we add to DSU all the edges that are present in the whole segment and not added yet then we solve it recursively for and then we remove edges from DSU using the rollback technique described above When we arrive to some segment then after adding the edges present in this segment we can answer if the graph is bipartite after query Remember to get rid of the edges that are already added and the edges that are not present at all in the segment when you make a recursive call Of course to solve the whole problem we need to call our function from segment Time complexity is because every edge will be added only in calls of the function ,1
399,Authors guessed an array consisting of integers each integer is not less than and not greater than You don t know the array but you know the array which is formed from it with the following sequence of operations Firstly let the array be equal to the array Secondly for each from to if is a number then one integer is appended to array where is an infinite sequence of prime numbers otherwise if is not a number the greatest divisor of which is not equal to is appended to Then the obtained array of length is shuffled and given to you in the input Here means the th prime number The first prime the second one is and so on Your task is to recover suitable array that forms the given array It is guaranteed that the answer exists so the array is obtained from some suitable array If there are multiple answers you can print any ,Of course there is no need to press home more than once and no need to press end at all because suppose we did something on suffix then pressed home did something on prefix and then pressed end and continue doing something on suffix Then we can merge these two sequences of moves on suffix and press home after we did anything we wanted on suffix and the answer will not get worse Now let s iterate over the position at which we will press home in range from to In other words we iterate over the position till which we press only left and backspace to fix the suffix So now we have the string and we want to get some suffix of from this string but we actually don t know which suffix of we want So let s iterate over the length of this suffix in a range from to Now we have the string and the string and we have to check if we can obtain this suffix of from this suffix of This part can be precalculated in greedily we just can store for each suffix of the rightmost position in in which this suffix is obtainable If we can obtain the current suffix then we obviously can say the number of moves to do that it is and actually do not depend on the suffix length because if we meet the character we need we just press left and move to the next character otherwise we press backspace and move to the next character deleting the one we don t need After that we press home and now we have to check if we can obtain from This part can also be precalculated greedily in like the part with rightmost positions for suffixes But the minimum number of moves required to obtain the prefix is tricky Actually if we consider these prefixes from right to left we want to match as many characters from the beginning as possible In other words if we reverse and we want to find their longest common prefix and this will be the number of characters we don t want to touch at all and if it is the longest common prefix it means that the next character is bad and we want to remove it anyway so the length of LCP of these two reversed prefixes is the only thing affecting the number of moves on the prefix This part can be precalculated in with simple dynamic programming using memory or with z function in time and memory we just need to build a z function on a string where is the concatenation of strings and is the reverse operation The required value of the z function for the fixed values and will be in the position And the answer for the prefix will be this is the number of extra characters on the prefix we have to delete plus plus because we have to press home But there is a corner case If the prefix is empty then we don t need to do all of this and the answer for prefix will be Complexity time and memory ,0
400,The chief wizard of the Wizengamot once caught the evil wizard Drahyrt but the evil wizard has returned and wants revenge on the chief wizard So he stole from his student Harry The is a length string of lowercase Latin letters Drahyrt wants to replace with an unforgivable curse string Dragirt using ancient magic can swap letters at a distance or in as many times as he wants In other words Drahyrt can change letters in positions and in if or For example if and Drahyrt can act as follows swap the letters at positions and to get swap the letters at positions and to get You are given and Can Drahyrt change to ,f two asterisks are in the same row then it is enough to select any other row and place two asterisks in the same columns in it If two asterisks are in the same column then you can do the same If none of the above conditions are met and the asterisks are at positions x1 y1 x2 y2 then you can place two more asterisks at positions x1 y2 x2 y1 ,0
401,You are given the array consisting of elements and the integer You want to obtain equal elements in the array In one move you can make one of the following two operations Take of the minimum elements of the array and increase its value by one more formally if the minimum value of is then you choose such index that and set take of the maximum elements of the array and decrease its value by one more formally if the maximum value of is then you choose such index that and set Your task is to calculate the minimum number of moves required to obtain equal elements in the array ,Let s group the cells by their distance from the starting point the group consists of a single cell the group consists of the cells and and so on In total there are groups Let s analyze the groups and There are two cases if or then we are looking at the starting cell and the ending cell and their contents should be equal otherwise suppose two cells and belong to the same group We can easily prove that the contents of these two cells should be equal for example by analyzing two paths that go through cell and coincide after this cell but one goes to from and another from and using induction we can prove that the contents of all cells in a group should be equal And since the paths should be palindromic the contents of the group should be equal to the contents of the group So in each pair of groups we should calculate the number of s and s and choose which of them to change Note that if is even the central group has no pair so it should not be modified ,0
402,Vadim is really keen on travelling Recently he heard about kayaking activity near his town and became very excited about it so he joined a party of kayakers Now the party is ready to start its journey but firstly they have to choose kayaks There are people in the group including Vadim and they have exactly tandem kayaks each of which obviously can carry two people and single kayaks th person s weight is and weight is an important matter in kayaking if the difference between the weights of two people that sit in the same tandem kayak is too large then it can crash And of course people want to distribute their seats in kayaks in order to minimize the chances that kayaks will crash Formally the instability of a single kayak is always and the instability of a tandem kayak is the absolute difference between weights of the people that are in this kayak Instability of the whole journey is the total instability of all kayaks Help the party to determine minimum possible total instability ,If then there is no answer You can do some handwork to be sure Otherwise the answer exists and there is one simple way to construct it firstly let s put all odd integers into the answer in decreasing order then put and all other even numbers in increasing order To test that it always works you can run some kind of checker locally you can check all tests very fast in less than one second this may be very helpful sometimes ,0
403, A subsequence is a string that can be derived from another string by deleting some or no symbols without changing the order of the remaining symbols Characters to be deleted are not required to go successively there can be any gaps between them For example for the string the following strings are subsequences and empty string But the following strings are not subsequences and You are given a string consisting of lowercase Latin letters In one move you can take subsequence of the given string and add it to the set The set can t contain duplicates This move costs where is the length of the added subsequence i e the price equals to the number of the deleted characters Your task is to find out the minimum possible total cost to obtain a set of size or report that it is impossible to do so ,Firstly let s calculate the following auxiliary matrix means the maximum position that is less than or equal to and the character in order from to and so on It can be calculated naively or with some easy dynamic programming initially all are and then for each from to all values are equal to except which is After calculating this matrix we can solve the problem by the following dynamic programming let be the number of subsequences of length that ends exactly in the position Initially all values are zeros except for each from to How do we perform transitionss Let s iterate over all lengths from to then let s iterate over all positions from to in a nested loop and for the current state we can calculate it as If then we don t need to add this state of the dynamic programming to the current state Don t forget to take the minimum with after each transition This transition means that we take all subsequences that end with each possible character of the alphabet and try to add the current character to each of them You can understand that there are no overlapping subsequences in this dynamic programming After that let s iterate over all possible lengths from to and calculate the number of subsequences of the current length It equals to The same if then we don t need to add this state of the dynamic programming to Don t forget to take the minimum with If then let s add to the answer and break the cycle Otherwise let s add to the answer and decrease by If after all iterations is greater than zero then let s try to add the empty string to the answer we didn t take it into account earlier Increase the answer by and decrease by one If after this is still greater than zero then the answer is otherwise the answer is the calculated sum Time complexity ,1
404, There are kids each of them is reading a unique book At the end of any day the th kid will give his book to the th kid in case of the kid will give his book to himself It is guaranteed that all values of are distinct integers from to i e is a permutation The sequence doesn t change from day to day it is fixed For example if and then at the end of the first day the book of the st kid will belong to the th kid the nd kid will belong to the th kid and so on At the end of the second day the book of the st kid will belong to the th kid the nd kid will belong to the th kid and so on Your task is to determine the number of the day the book of the th child is returned back to him for the first time for every from to Consider the following example The book of the st kid will be passed to the following kids after the st day it will belong to the th kid after the nd day it will belong to the rd kid after the rd day it will belong to the nd kid after the th day it will belong to the st kid So after the fourth day the book of the first kid will return to its owner The book of the fourth kid will return to him for the first time after exactly one day You have to answer independent queries ,In this problem we can use a binary search for the answer If we can make sets then we can make sets So we need to come up with the following test whether we can make sets knowing the parameters Let otherwise we will swap them If the answer is Otherwise let s say we want to make sets of the first kind Then we get a system of inequalities Let s express from here We need to check whether these four equations have an intersection in integers If there is then the division into gifts exists ,0
405,You are given an array consisting of integers and an integer It is guaranteed that for every Let s denote a function which erases all values such that from the array and returns the resulting array For example if then Your task is to calculate the number of pairs such that and is sorted in non descending order Note that the empty array is also considered sorted ,Lets find the maximum number such that all values form the non descending order array It can be done the following way Let values form the non descending order array Then values will form the non descending order array if the first occurrence of in array is after the last occurrence of In similar manner we can find the minimum number such that all values form the non descending order array Now let s find out how to get the minimum number such that all values form the non descending order array if we fixed the value We denote this value for some fixed value as Firstly conditions and should hold Secondly there should be no such a pair that conditions and hold Since the condition is satisfied it means that must be greater than where is the last occurrence of in array In this way the answer is ,1
406,Vova is again playing some computer game now an RPG In the game Vova s character received a quest to slay the fearsome monster called Modcrab After two hours of playing the game Vova has tracked the monster and analyzed its tactics The Modcrab has health points and an attack power of Knowing that Vova has decided to buy a lot of strong healing potions and to prepare for battle Vova s character has health points and an attack power of Also he has a large supply of healing potions each of which increases his current amount of health points by when Vova drinks a potion All potions are identical to each other It is guaranteed that The battle consists of multiple phases In the beginning of each phase Vova can either attack the monster thus reducing its health by or drink a healing potion it increases Vova s health by Then the Modcrab attacks Vova reducing his health by The battle ends when Vova s or Modcrab s health drops to or lower It is possible that the battle ends in a middle of a phase after Vova s attack Of course Vova wants to win the fight But also he wants to do it as fast as possible So he wants to make up a strategy that will allow him to win the fight after the minimum possible number of phases Help Vova to make up a strategy You may assume that Vova never runs out of healing potions and that he can always win ,Firstly let s calculate for each from to two following values and means the maximum length of the increasing sequence starting in the position and means the maximum length of the increasing sequence ending in the position Initially all values are the element itself The array can be calculated in order from right to left with the following condition if then otherwise it still remain The same with the array but we have to calculate its values in order from left to right and if then otherwise it still remain Having these arrays we can calculate the answer The initial answer if we don t remove any element is the maximum value of the array And if we remove the th element where then we can update the answer with the value if Time complexity ,0
407,You are given an array consisting of integers Let s denote of array as an array consisting of integers such that all of the following conditions are met for every pair of indices and such that if then note that if it is still possible that for every index either or For example if then two possible monotonic renumerations of are and Your task is to calculate the number of different monotonic renumerations of The answer may be large so print it modulo ,We are interested in such subsegments of the array that for every value belonging to this segment all occurences of this value in the array are inside this segment Let s call such segments For example if then and are closed segments We can see that the result is some partition of the given array into several closed segments if for some value all occurences of in do not form a segment in then there exists some pair such that which contradicts the statement and if the formed segment is not a closed segment then for some indices and such that it is not true that which also contradicts the statement Okay let s try to partition the array into closed segments greedily take the first prefix of the array that is a closed segment erase it take the next prefix and so on Let be the number of closed segments we got with this procedure The key fact is that To prove it suppose we partitioned the array in some other way The intersection of two closed segments if it exists is also a closed segment so there exists at least one segment in the partition we picked greedily that can be broken into two but that contradicts the algorithm we used to construct this partition So we may merge some of segments to get a valid partition There are exactly ways to do so because for every pair of adjacent segments we may choose whether we will merge it ,1
408,There is a rectangular grid of size Each cell of the grid is colored black or white The color of the cell is You are also given a map of directions for each cell there is a direction which is one of the four characters and If is then there is a transition from the cell to the cell if is then there is a transition from the cell to the cell if is then there is a transition from the cell to the cell if is then there is a transition from the cell to the cell It is guaranteed that the top row doesn t contain characters the bottom row doesn t contain characters the leftmost column doesn t contain characters and the rightmost column doesn t contain characters You want to place some robots in this field at most one robot in a cell The following conditions should be satisfied Firstly each robot every time i e it cannot skip the move Secondly you have to place robots in such a way that before which two different robots occupy the same cell it also means that you cannot place two robots in the same cell I e if the grid is one row two columns colors does not matter there then you can place two robots in cells and but if the grid is then you cannot place robots in cells and because during the first second both robots will occupy the cell The robots make an infinite number of moves Your task is to place the maximum number of robots to satisfy all the conditions described above and among all such ways you have to choose one where the number of cells occupied by robots is the maximum possible You have to answer independent test cases ,First of all I want to say about solution You can extract cycles in the graph do some dynamic programming on trees use some hard formulas and so on but it is a way harder to implement than the other solution that only has an additional log so I ll describe the one which is easier to understand and much easier to implement Firstly consider the problem from the other side What is this grid It is a functional graph such a directed graph that each its vertex has exactly one outgoing edge This graph seems like a set of cycles and ordered trees going into these cycles How can it help us Let s notice that if two robots meet after some move then they ll go together infinitely from this moment It means that if we try to make at least moves from each possible cell we will obtain some equivalence classes it means that if endpoints of two cells coincide after moves then you cannot place robots in both cells at once So if we could calculate such endpoints then we can take for each possible endpoint the robot starting from the black cell if such exists and otherwise the robot starting from the white cell if such exists How can we calculate such endpoints Let s number all cells from to where the number of the cell is Let the next cell after is i e if you make a move from you go to Also let s create the two dimensional array where means the number of the cell in which you will be if you start in the cell number and make moves What is the upper bound of It is exactly Well we need to calculate this matrix somehow It is obvious that if the number of the cell is and the number of the next cell is then Then let s iterate over all degrees from to and for each vertex set The logic behind this expresion is very simple if we want to jump times from and we have all values for calculated then let s just jump times from and times from the obtained vertex This technique is called binary lifting Now we can jump from every cell times in time just iterate over all degrees from to and if has the th bit on just jump from the current vertex times set The rest of solution is described above Time complexity ,1
409,There are points on an infinite plane The th point has coordinates such that and The coordinates are not necessarily integer In one move you perform the following operations choose two points and move point from to either or move point from to either or remove points and Otherwise the move can t be performed and the points stay at their original coordinates and respectively The numeration of points after some points are removed Once the points are removed they can t be chosen in any later moves Note that you have to move both points during the move you can t leave them at their original coordinates What is the maximum number of moves you can perform What are these moves If there are multiple answers you can print any of them ,If then there is no answer You can do some handwork to be sure Otherwise the answer exists and there is one simple way to construct it firstly let s put all odd integers into the answer in decreasing order then put and all other even numbers in increasing order To test that it always works you can run some kind of checker locally you can check all tests very fast in less than one second this may be very helpful sometimes ,0
410,Polycarp has friends the th of his friends has candies Polycarp s friends do not like when they have different numbers of candies In other words they want all to be the same To solve this Polycarp performs the following set of actions exactly Polycarp chooses arbitrary friends let s say he chooses friends with indices Polycarp distributes their candies among all friends During distribution for each of candies he chooses new owner That can be any of friends Note that any candy can be given to the person who has owned that candy before the distribution process Note that the number is not fixed in advance and can be arbitrary Your task is to find the minimum value of For example if and then Polycarp could make the following distribution of the candies Polycarp chooses friends with indices and distributes candies to make two candies go to person Note that in this example Polycarp cannot choose friend so that he can redistribute candies so that in the end all are equal For the data and determine the value With this value Polycarp should be able to select friends and redistribute their candies so that everyone will end up with the same number of candies ,Let s denote for the number of candies all friends have Note that at the end each friend must have of candy If is not completely divisible by then there is no answer How to get the answer if it exists If the th friend has more candies than then he must be chosen by Polycarp otherwise this friend will have more candies than the others If the th friend has no more than then Polycarp may not choose it Then if the answer exists it is equal to the number of ,1
411,There are cities and roads in Berland Each road connects a pair of cities The roads in Berland are one way What is the minimum number of new roads that need to be built to make all the cities reachable from the capital New roads will also be one way ,Let s perform the process in reverse we will remove the first and last character of the string if these two characters are different We should do this as long as possible since we need to find the shortest initial string So the algorithm is straightfoward keep track of the left and right characters and if they are different remove both Otherwise output the length of the current string or output if the string became empty There are a few ways to implement this For example you can keep two pointers one at the beginning of the string and one at the end say and and check if If it s true then we increment and decrement Otherwise we output We stop when Alternatively you can use deque to simulate the operations directly The time complexity is ,0
412,Let s denote the following function This function takes an array of length and returns an array Initially the result is an empty array For each integer from to we add element to the end of the resulting array if it is greater than all previous elements more formally if Some examples of the function if then if then if then if then You are given two arrays array and array You can delete some elements of array possibly zero To delete the element you have to pay coins the value of can be negative then you get coins if you delete this element Calculate the minimum number of coins possibly negative you have to spend for fulfilling equality ,If the edges were only added and not deleted it would be a common problem that is solved with disjoint set union All you need to do in that problem is implement a DSU which maintains not only the leader in the class of some vertex but also the distance to this leader Then if we try to connect two vertices that have the same leader in DSU and the sum of distances to this leader is even then we get a cycle with odd length and graph is no longer bipartite But in this problem we need to somehow process removing edges from the graph In the algorithm I will describe below we will need to somehow remove the last added edge from DSU or even some number of last added edges How can we process that Each time we change some variable in DSU we can store an address of this variable and its previous value somewhere for example in a stack Then to remove last added edge we rollback these changes we rewrite the previous values of the variables we changed by adding the last edge Now we can add a new edge and remove last added edge All these operations cost because path compression doesn t work in intended time if we have to rollback Let s actually start solving the problem For convinience we change all information to queries like edge exists from query number till query number It s obvious that there are no more than such queries Let s use divide and conquer technique to make a function that answers whether the graph is bipartite or not after every query from some segment of queries First of all we add to DSU all the edges that are present in the whole segment and not added yet then we solve it recursively for and then we remove edges from DSU using the rollback technique described above When we arrive to some segment then after adding the edges present in this segment we can answer if the graph is bipartite after query Remember to get rid of the edges that are already added and the edges that are not present at all in the segment when you make a recursive call Of course to solve the whole problem we need to call our function from segment Time complexity is because every edge will be added only in calls of the function ,0
413, children are standing in a circle and playing a game Children s numbers in clockwise order form a permutation of length It is an integer sequence such that each integer from to appears exactly once in it The game consists of steps On each step the current leader with index counts out people in clockwise order starting from the next person The last one to be pointed at by the leader becomes the new leader You are given numbers indices of leaders in the beginning of each step Child with number is the first leader in the game Write a program which will restore a possible permutation If there are multiple solutions then print any of them If there is no solution then print ,Let s iterate over height of slice in decreasing order All we need to know is a number of towers with height more than name it and sum of its heights Current slice on height is good if Let s greedily decrease value while slice on is good keeping correct values and When we found minimal good slice we can perform it increasing answer by one and changing tower heights just by setting new value to equal to Finish algorithm when becomes equal to minimal height of towers and make final slice ,0
414,You are given two positive integers and You can perform the following operation with write it in its binary form without leading zeros add or to the right of it reverse the binary form and turn it into a decimal number which is assigned as the new value of For example can be turned into via one operation the binary form of is if you add reverse it and remove leading zeros you will get which is the binary form of can be turned into via one operation the binary form of is if you add reverse it and remove leading zeros you will get which is the binary form of can be turned into via one operation the binary form of is if you add reverse it and remove leading zeros you will get which is the binary form of can be turned into via two operations first you turn into and then into Your task is to find out whether can be turned into after a certain number of operations possibly zero ,There are two main approaches to this problem Let s analyze how the binary representation of changes after the operation If there are no zeroes at the end of it appending just reverses the binary representation if there are any trailing zeroes we remove them and reverse the binary representation If we append we just reverse the binary representation and add at the beginning No matter which action we choose on the first step the resulting binary representation will have at its beginning and at its end so no bits can be removed from it no zero from the resulting binary representation can become leading It means that every number we can obtain from will have the following form several ones maybe none then then several ones again maybe none where is one of the following four strings the binary representation of after appending in the first operation the binary representation of after appending in the first operation one of the aforementioned representations but reversed We can check that meets one of these four templates but since we only considered the case when we apply at least one operation we also have to verify if Run something like implicit BFS or DFS to generate all possible values you can obtain pruning when the length of the binary representation we get becomes too large say greater than Why does this work fast As we have shown in our first approach the numbers we can get from have a very specific form and if we limit their lengths to we will consider only about different numbers Note that if you try this approach you have to store the obtained numbers in some associative data structure I use a set of strings in my solution ,1
415,Consider a sequence of integers In one move you can select any element of the sequence and delete it After an element is deleted all elements to the right are shifted to the left by position so there are no empty spaces in the sequence So after you make a move the sequence s length decreases by The indices of the elements after the move are recalculated E g let the sequence be Let s select the element in a move Then after the move the sequence will be equal to so the rd element of the new sequence will be and the th element will be You are given a sequence and a number You need to find the minimum number of moves you have to make so that in the resulting sequence there will be elements that are equal to their indices i e the resulting sequence will contain at least indices such that ,Let s use the concept of dynamic programming Let s create an array indexed with size of will contain the maximal number of the elements equal to their indices if we have considered the first elements of the sequence and have elements Let s fill the array with zeroes then we will increase the elements of the array for different and Let s start the loop with parameter from to and the internal one with parameter from to Consider an element We can delete or not delete it If we delete this element the number of the elements equal to their indices will not be increased and the number of the non deleted element will not be increased too It means that the answer for may be updated with Since we are interested in a maximum answer we rewrite only if is greater than Suppose we don t delete this element We haven t deleted previously elements so will have the index and there will be non deleted elements if we consider elements so we must update If i e an element equal to its index is found let s update with Otherwise we should update it with Remember that update may be done only if we rewrite the less value with the greater value Let s build the answer as follows We need to minimize the number of deleted elements maximize the number of non deleted elements so that the number of the elements equal to their indices is at least Consider only the elements of having the first index Let s start a loop in the descending order of If is the maximum number of elements that we will not delete so the answer is If we will not find such that there s no desired sequence of moves so the answer is The algorithm works in ,1
416,Consider a system of water taps all pouring water into the same container The th water tap can be set to deliver any amount of water from to ml per second this amount may be a real number The water delivered by th tap has temperature If for every you set th tap to deliver exactly ml of water per second then the resulting temperature of water will be if then to avoid division by zero we state that the resulting water temperature is You have to set all the water taps in such a way that the resulting temperature is exactly What is the maximum amount of water you may get per second if its temperature has to be ,Note that the first two characters of match the first two characters of The third character of the string again matches the second character of since it is the first character in the second substring which contains the second and the third character of The fourth character matches with the third character of It is easy to notice that such a pattern continues further That is the string consists of the first character and all characters at even positions in ,0
417,There is a toy building consisting of towers Each tower consists of several cubes standing on each other The th tower consists of cubes so it has height Let s define operation on some height as following for each tower if its height is greater than then remove some top cubes to make tower s height equal to Cost of one slice equals to the total number of removed cubes from all towers Let s name slice as one if its cost is lower or equal to Calculate the minimum number of good slices you have to do to make all towers have the same height Of course it is always possible to make it so ,Let s iterate over height of slice in decreasing order All we need to know is a number of towers with height more than name it and sum of its heights Current slice on height is good if Let s greedily decrease value while slice on is good keeping correct values and When we found minimal good slice we can perform it increasing answer by one and changing tower heights just by setting new value to equal to Finish algorithm when becomes equal to minimal height of towers and make final slice ,1
418,Polycarp grew a tree from vertices We remind you that a tree of vertices is an undirected connected graph of vertices and edges that does not contain cycles He calls a set of vertices if there is such a path in the tree that passes through each vertex of this set without passing through any edge twice The path can visit other vertices not from this set In other words a set of vertices is called if there is a simple path that passes through all the vertices of this set and possibly some other For example for a tree below sets are and are not Polycarp asks you to answer queries Each query is a set of vertices For each query you need to determine whether the corresponding set of vertices is ,If the answer is then we can choose a subset of the tree vertices forming a simple path and containing all the vertices of our set Let s choose the minimum possible path its ends vertices from the set The constraints allow us to answer the query in hang the tree by one of the ends and check if it is true that there is only one selected vertex that does not have any selected ones in the subtree if there is one such vertex then it is the second end To make it easier to search for one of the ends we will hang the tree by any vertex before the queries calculate their depths and take the deepest of the set ,1
419,In order to write a string Atilla needs to first learn all letters that are contained in the string Atilla needs to write a message which can be represented as a string He asks you what is the minimum alphabet size required so that one can write this message The alphabet of size contains Latin letters For example an alphabet of size contains the characters and ,Let s consider as a substring of string from position to position is not included Let s iterate over all lenghts of the copied prefix from to 0 inclusive and then if then answer will be and iterating over smaller lenghts is not necessary ,0
420,The sequence is sent over the network as follows sequence is split into segments each element of the sequence belongs to exactly one segment each segment is a group of consecutive elements of sequence for each segment its length is written next to it either to the left of it or to the right of it the resulting sequence is sent over the network For example we needed to send the sequence Suppose it was split into segments as follows Then we could have the following sequences If a different segmentation had been used the sent sequence might have been different The sequence is given Could the sequence be sent over the network In other words is there such a sequence that converting to send it over the network could result in a sequence ,Let s introduce the dynamics if on the prefix the answer is Then in this sequence the numbers corresponding to the sizes of the segments from the partition into subsegments will be called A number at position in the sequence if it is is either to the right or to the left of the segment If it is to the left of the segment it can only be interesting if Then If it is on the right side of the segment then if then The answer for the whole sequence is if ,1
421,You are given an array You can perform the following operation any number of times Choose a pair of two neighboring equal elements if there is at least one such pair Replace them by one element with value After each such operation the length of the array will decrease by one and elements are renumerated accordingly What is the minimum possible length of the array you can get ,Let s look at the answer by construction each element in the final answer was the result of replace series of elements on the corresponding segment So all we need to find is the minimal by size partition of the array on segments where each segment can be transformed in one element by series of replaces We can calculate it using standard prefix dynamic programming or is the size of such minimal partition of a prefix of length The transitions are standard let s check all segments and if it can be replaced by one element let s relax Now we need to check for all segments of can it be replaced by one element Let s calculate another using the following fact if there is a way to replace all segment as one element so the segment either has the length or it can be divided into two parts where the prefix can be replaced by one element the suffix also can be replaced by one element and these elements are equal It s exactly the transitions we need to check to calculate The resulting complexity is ,1
422,Igor is a post graduate student of chemistry faculty in Berland State University BerSU He needs to conduct a complicated experiment to write his thesis but laboratory of BerSU doesn t contain all the materials required for this experiment Fortunately chemical laws allow material transformations yes chemistry in Berland differs from ours But the rules of transformation are a bit strange Berland chemists are aware of materials numbered in the order they were discovered Each material can be transformed into some other material or vice versa Formally for each there exist two numbers and that denote a possible transformation kilograms of material can be transformed into kilogram of material and kilogram of material can be transformed into kilogram of material Chemical processing equipment in BerSU allows only such transformation that the amount of resulting material is For each Igor knows that the experiment requires kilograms of material and the laboratory contains kilograms of this material Is it possible to conduct an experiment after transforming some materials or none ,Since then the transformation graph is a tree Let s solve the problem recursively Suppose that material is a leaf in the tree there is no such that Then if we don t have enough material we have to transform some of material into Let s transform the amount required to set current amount of material to if we don t have the required amount of material then this amount will temporarily be negative And if we have more material than we need to conduct the experiment then we will transform it to The same algorithm can be applied to any non root node but we first need to do this for all its children This algorithm is optimal because each time we take the minimum possible amount from the parent After this the root will be the only node such that is not necessarily equal to current amount of material Since we solved the problem for all other materials and did it optimally now the answer is YES iff current amount of material is not less than This must be implemented carefully Since the total amount of materials never increases then if some material s current amount is less than for example then the answer is already NO Also overflows in multiplication must be avoided to do this we can firstly check if the result of multiplication is not too big by multiplying values as real numbers ,1
423,Given the integer the number of available blocks You must use blocks to build a The consists of platforms for nd st and rd places respectively The platform for the st place must be higher than for the nd place and the platform for the nd place must be higher than for the rd place Also the height of each platform must be greater than zero that is each platform must contain at least one block Among all possible pedestals of blocks deduce one such that the platform height for the st place as possible If there are several of them output any of them ,Let s consider the sweep line approach by the value of the variable x the vertex i is active from the moment l i to the moment r i And we have to find vertices that are reachable in the graph of active vertices from the vertex 1 So we rephrased the problem as follows there are vertices that are active at some moments and we want to get some information about connectivity during each moment of time This is a standard offline dynamic connectivity problem which can be solved with a divide and conquer approach described here Now we are able to find the connectivity component of the 1 th vertex for each value of x It remains to understand how to combine answers for all values of x fast enough Let s try to visualize the components as vertices of a directed graph We assign a vertex to each component and when two components merge we add two directed edges from the new vertex to the vertices corresponding to the components and now we can use the reachability information in this graph Each vertex of the original graph corresponds to one of the sinks in this graph and sinks that correspond to the vertices of some component are reachable from the vertex corresponding to that component To restore all the vertex indices later we will mark all components containing the vertex 1 while we run our dynamic connectivity approach Then the vertex v of the original graph is included in the answer if the vertex representing the component containing only the vertex v is reachable from any of the marked vertices Now all you need to do is run DFS or BFS from all the marked vertices in the component graph ,0
424,There are left boots and right boots Each boot has a color which is denoted as a lowercase Latin letter or a question mark Thus you are given two strings and both of length The character stands for the color of the th left boot and the character stands for the color of the th right boot A lowercase Latin letter denotes a specific color but the question mark denotes an indefinite color Two specific colors are if they are exactly the same An indefinite color is with any specific or indefinite color For example the following pairs of colors are compatible and The following pairs of colors are compatible and Compute the maximum number of pairs of boots such that there is one left and one right boot in a pair and their colors are compatible Print the maximum number of such pairs and the pairs themselves A boot can be part of at most one pair ,Use greedy approach in this problem At first match such pairs that colors are exactly the same and they are specific not indefinite After it match each indefinite colored left boot if any with any specific colored right boot Possibly some indefinite colored left boots stay unmatched Similarly match each indefinite colored right boot if any with any specific colored left boot And finally match indefinite colored left and right boots if any ,1
425,Makes solves problems on Decoforces and lots of other different online judges Each problem is denoted by its difficulty a positive integer number Difficulties are measured the same across all the judges the problem with difficulty on Decoforces is as hard as the problem with difficulty on any other judge Makes has chosen problems to solve on Decoforces with difficulties He can solve these problems in arbitrary order Though he can solve problem with difficulty only if he had already solved some problem with difficulty no matter on what online judge was it With given conditions it s easy to see that Makes sometimes can t solve all the chosen problems no matter what order he chooses So he wants to solve some problems on other judges to finish solving problems from his list Makes can solve problems on any judge at any time it isn t necessary to do problems from the chosen list one right after another Makes doesn t have too much free time so he asked you to calculate the minimum number of problems he should solve on other judges in order to solve all the chosen problems from Decoforces ,Let s first consider the possible paths across the grid that visit all cells You can immediately think of two of them The first one is go right to the wall turn into the other row and return Let s call it a hook The second one is go down go right go up go right and so on Let s call it a snake Turns out these two are basically the two extremes of all paths You can start with a snake and turn into a hook when you wish You can see that once you move right twice in a row you can only continue with a hook And as long as you didn t move right twice you are just doing a snake Let s fix some path across the grid What will its minimum time be Calculate it iteratively If you want to enter the next cell and it s still locked wait until it isn t So there are some seconds of waiting possibly zero before each cell However why not instead do the following Let s calculate the sum of waiting time required and wait for that amount of seconds before starting to move All cells will be visited at the same time as before or even later Thus they will surely be unlocked if they were in the original plan So the goal is to calculate the minimum amount of time required to wait in the start then add the movement time to it Once again the path is fixed Let the th cell of the path be If you start after waiting for seconds then you reach the th cell at time is indexed Thus the th cell should have If all cells satisfy this condition then the path can be done after waiting for seconds at the start Let s rewrite it into So the condition tells us that should be greater or equal than this value for all cells In other words should be greater or equal than the maximum of the values over all cells Study the formula Imagine we have some path with a known length and want to append a cell to it That s pretty simple Just update the maximum with the value with the corresponding cell and increase the length What if we wanted to prepend a cell to it Turns out it s not that hard as well Every cell in the path gets its value increased by From the formula you can see that this actually decreases the value of each cell by So the maximum decreases by as well The only thing left is to update the maximum with the value of the new first cell Well and increase the length again Finally let s learn how to choose the best path We can iterate over the length of the snake part The hook part is determined uniquely It s easy to maintain the maximum on the snake Just append the new cell to the path How to glue up the hook part to that Well actually realize that the formula allows us to glue up two paths into one Let path have length and maximum and path have length and maximum To make path start after path we just decrease its maximum by The resulting path has length and maximum Let s look closer into what the hooks look like They start in some column traverse all the way right then left up to the same column If the snake part took both cells in its last column then that s it Otherwise the hook has to take the final cell in the last column column If we manage to precalculate something for hooks that start in some column and end in column then we will be able to use that Appending the final cell is not a hard task since we know its index in the path Let be the waiting time required for a hook that starts in cell and ends in a cell as if the path started with the hook cell is the first one can be calculated from Prepend it with a cell and append it with a cell The only thing left is to find the best answer I found the most convenient to start with a snake of length only cell and progress it two steps at the time update the answer progress the snake to the other cell of the current column update the answer progress the snake into the next column Overall complexity per testcase ,0
426,Timur initially had a binary string possibly of length He performed the following operation several possibly zero times Add to one end of the string and to the other end of the string For example starting from the string you can obtain either or You are given Timur s final string What is the length of the possible string he could have started with A binary string is a string possibly the empty string whose characters are either or ,Let s sort segments firstly by their left border in increasing order and in case of equal by their right border in decreasing order If there is any valid pair then the inner segment will always go after the outer one Now you can go from left to right keep the maximum right border of processed segments and compare it to the current segment Overall complexity ,0
427,You are given two positive integers and You can perform the following operation with write it in its binary form without leading zeros add or to the right of it reverse the binary form and turn it into a decimal number which is assigned as the new value of For example can be turned into via one operation the binary form of is if you add reverse it and remove leading zeros you will get which is the binary form of can be turned into via one operation the binary form of is if you add reverse it and remove leading zeros you will get which is the binary form of can be turned into via one operation the binary form of is if you add reverse it and remove leading zeros you will get which is the binary form of can be turned into via two operations first you turn into and then into Your task is to find out whether can be turned into after a certain number of operations possibly zero ,Let be the number of students with diplomas and students with certificates is always So the total number of winners is It should not exceed so the maximum value for will be hit in where is Overall complexity ,0
428,Kristina has a string of length consisting only of lowercase and uppercase Latin letters For each pair of lowercase letter and its matching uppercase letter Kristina can get burl However pairs of characters cannot overlap so each character can only be in one pair For example if she has the string aAaaBACacbE she can get a burl for the following character pairs a and A a and A B and b C and c Kristina wants to get more burles for her string so she is going to perform no more than operations on it In one operation she can either select the lowercase character and make it uppercase or select uppercase character and make it lowercase For example when 2 and aAaaBACacbE it can perform one operation choose a and make it uppercase Then she will get another pair of A and a Find number of burles Kristina can get for her string ,Count two arrays and such that contains the number of occurrences of th letter of the alphabet in the string in upper case while in lower case Let s add all existing pairs to the answer so let s add to it for each letter Subtract this minimum from and to get the number of unpaired identical letters Next we will act greedily if there is some set of at least two identical letters in the same case we can apply the operation to half of them and get new pairs Therefore for each letter we will add to the answer and decrease by that amount ,1
429,Today Adilbek is taking his probability theory test Unfortunately when Adilbek arrived at the university there had already been a long queue of students wanting to take the same test Adilbek has estimated that he will be able to start the test only seconds after coming Fortunately Adilbek can spend time without revising any boring theorems or formulas He has an app on this smartphone which contains Japanese crosswords to solve Adilbek has decided to solve them all one by one in the order they are listed in the app without skipping any crossword For each crossword a number is given that represents the time it takes an average crossword expert to solve this crossword the time is given in seconds Adilbek is a true crossword expert but unfortunately he is sometimes unlucky in choosing the way to solve the crossword So it takes him either seconds or seconds to solve the th crossword equiprobably with probability he solves the crossword in exactly seconds and with probability he has to spend an additional second to finish the crossword All these events are independent After seconds pass or after solving the last crossword if he manages to do it in less than seconds Adilbek closes the app if he finishes some crossword at the same moment that crossword is considered solved otherwise Adilbek does not finish solving the current crossword at all He thinks it would be an interesting probability theory problem to calculate the expected number of crosswords he will be able to solve completely Can you calculate it Recall that the expected value of a discrete random variable is the probability weighted average of all possible values in this problem it means that the expected value of the number of solved crosswords can be calculated as where is the probability that Adilbek will solve exactly crosswords We can represent as rational fraction with To give the answer you should print ,Let s use as usual linearity of an expected value where is an indicator function and equal to iff Adilbek will be able to solve the th crossword How to calculate If then is always On the other hand if is always Otherwise we need to calculate the needed probability To calculate we can iterate over the number of crosswords among first ones which will require extra time Obviously if then we don t have enough time to solve the th crossword also Let s denote There are ways to choose crosswords with extra time among all variants So the final formula is following The only problem is the efficiency But we can find out several interesting properties At first The other one since then And this exactly the efficient way to transform to by multiplying and adding one coefficient we can transform the prefix sum of the th row to the prefix sum of the row And to reduce the length of the prefix sum we can just subtract unnecessary coefficients In result the total complexity is maybe with extra factor because of modular arithmetic ,1
430,You are given a string consisting of the characters and Let s call a string if it consists of the characters and and any two adjacent characters are different i e it has the form or Let s call a string if it consists of the characters and and you can replace the characters to or for each character the choice is independent so that the string becomes For example the strings and are beautiful and the strings and are not Calculate the number of beautiful contiguous substrings of the string ,The answer to this problem is at most Let s prove it by construction Firstly if all are equal then the answer is Otherwise there are at least two different values in the array so the answer is at least If is even then the answer is always because you can color figures in the following way If is odd then consider two cases The first case is when some pair of adjacent figures have the same type Then the answer is because you can merge these two values into one and get the case of even Otherwise all pairs of adjacent figures have different types and if you consider this cyclic array as a graph cycle of length then you can notice that it isn t bipartite so you need at least colors to achieve the answer color all vertices in such a way that any two adjacent vertices have different colors And the answer looks like ,0
431, children are standing in a circle and playing a game Children s numbers in clockwise order form a permutation of length It is an integer sequence such that each integer from to appears exactly once in it The game consists of steps On each step the current leader with index counts out people in clockwise order starting from the next person The last one to be pointed at by the leader becomes the new leader You are given numbers indices of leaders in the beginning of each step Child with number is the first leader in the game Write a program which will restore a possible permutation If there are multiple solutions then print any of them If there is no solution then print ,Let s show by construction that there can be no ambiguity in values of of the children who were leaders at least once except for probably the last leader If then on this step the value of taken was exactly Otherwise went over and in circle ended up to the left or in the same position So for this case should be Obviously counting cannot go over two or more times as this will result in We only need to check if all the numbers are unique and fill the unvisited children with remaining values to form the permutation Overall complexity ,1
432,You might have remembered Theatre square from the problem 1A Now it s finally getting repaved The square still has a rectangular shape of meters However the picture is about to get more complicated now Let be the th square in the th row of the pavement You are given the picture of the squares if then the th square in the th row should be if then the th square in the th row should be The black squares are paved already You have to pave the white squares There are two options for pavement tiles tiles each tile costs burles and covers exactly square tiles each tile costs burles and covers exactly adjacent squares of the What is the smallest total price of the tiles needed to cover all the white squares ,Notice that rows can be solved completely separately of each other Each tile takes either one or two squares but it s always in the same row So let s take a look at a single row There are sequences of dot characters separated by some asterisks Once again each of these sequences can be solved independently of the others Thus we have these empty strips of empty squares which when solved can be summed up into the whole answer There are two cases depending on if a is cheaper than two tiles If it is then we want to use of many tiles as possible So given we can place tiles and cover the rest squares with tiles If it isn t cheaper then we want to cover everything with tiles and never use ones So all should be The easier way to implement this might be the following Let s update the price of the tile with the minimum of and This way the first algorithm will produce exactly the same result of the second one in the case when a tile isn t cheaper than two ones Overall complexity per testcase ,1
433,There are dormitories in Berland State University they are numbered with integers from to Each dormitory consists of rooms there are rooms in th dormitory The rooms in th dormitory are numbered from to A postman delivers letters Sometimes there is no specific dormitory and room number in it on an envelope Instead of it only a room number among all rooms of all dormitories is written on an envelope In this case assume that all the rooms are numbered from to and the rooms of the first dormitory go first the rooms of the second dormitory go after them and so on For example in case and an envelope can have any integer from to written on it If the number is written on an envelope it means that the letter should be delivered to the room number of the second dormitory For each of letters by the room number among all dormitories determine the particular dormitory and the room number in a dormitory where this letter should be delivered ,We should use that the letter queries are given in increasing order of room numbers We will store in a variable the number of rooms in already considered dormitories this variable should have 64 bit type and in a variable we will store the minimum number of dormitory where the room from the current letter possibly is Initially and We will iterate through the letters Let the current letter should be delivered to the room While we increase by and increase by one So we got the dormitory number where room is It only remains to print two integers the dormitory number and the room number in this dormitory ,1
434, You are given a sequence consisting of positive integers Let s define a as the sequence consisting of distinct elements let these elements are and can be equal and is as follows There are integers greater than or equal to For example sequences and are but and are not Your task is to choose the maximum by length of that is a You have to answer independent test cases Recall that the sequence is a a subsequence of the sequence if can be derived from by removing zero or more elements without changing the order of the remaining elements For example if then possible subsequences are and but not and ,I ll take some definitions from the solution of the easy version so you can read it first if you don t understand something Let be the number of occurrences of on the segment We will try to do almost the same solution as in the easy version The only difference is how do we iterate over all segments corresponding to the second block of the required palindrome Consider some number which we want to use as the number for the first and third blocks If we take occurrences in the first block then we also take occurrences in the third block Let s take these occurrences greedily If we take elements in the first block and also in the third block then it is obviously better to take leftmost and rightmost elements correspondingly Define be the position of the th occurrence of the number indexed So if is the array of length and contains all occurrences of in order from left to right then let s iterate over its left half and fix the amount of numbers we will take in the first block and also in the third block Let it be Then the left border of the segment for the second block is and the right border is So let and and we can update the answer with It is easy to see that the total number of segments we consider is so the total time complexity is there are also solutions not depending on the size of the alphabet at least Mo s algorithm in but all of them are pretty hard to implement so I won t describe them here And I m also interested in solution so if you know it share it with us ,1
435,You are participating in Yet Another Tournament There are participants you and other opponents numbered from to Each two participants will play against each other exactly once If the opponent plays against the opponent he wins if and only if When the opponent plays against you everything becomes a little bit complicated In order to get a win against opponent you need to prepare for the match for at least minutes otherwise you lose to that opponent You have minutes in total to prepare for matches but you can prepare for only one match at one moment In other words if you want to win against opponents you need to spend minutes for preparation and if this number is greater than you cannot achieve a win against all of these opponents at the same time The final place of each contestant is equal to the number of contestants with strictly more wins For example if contestants have wins each contestant has wins and contestants have win each then the first participants will get the st place the fourth one gets the th place and two last ones get the th place Calculate the minimum possible place lower is better you can achieve if you can t prepare for the matches more than minutes in total ,Let be the maximum integer such that is divisible by Our problem is to rearrange the given array in such a way that easy to see it if we look at our operations if it looks like then for each the next inequality will be satisfied And if then numbers must be placed in increasing order because of our operations So we can store an array of pairs when Then if we sort it in lexicographical order we can just print the second elements of the sorted array ,0
436,In order to write a string Atilla needs to first learn all letters that are contained in the string Atilla needs to write a message which can be represented as a string He asks you what is the minimum alphabet size required so that one can write this message The alphabet of size contains Latin letters For example an alphabet of size contains the characters and ,To solve the problem we need to find the character with the highest alphabetical order in our string since Atilla will need at least that alphabet size and won t need more To do this iterate through the string and find the character with the highest alphabetical order Output the maximum alphabetical order found The solution can be done in ,1
437,Ivan recently bought a detective book The book is so interesting that each page of this book introduces some sort of a mystery which will be explained later The th page contains some mystery that will be explained on page Ivan wants to read the whole book Each day he reads the first page he didn t read earlier and continues to read the following pages one by one until all the mysteries he read about are explained and clear to him Ivan stops if there does not exist any page such that Ivan already has read it but hasn t read page After that he closes the book and continues to read it on the following day from the next page How many days will it take to read the whole book ,Solution is just some implementation simulate algorithm given in the legend maintaining maximum over all on prefix and breaking when the maximum becomes smaller than index of the next page ,1
438,There is a robot on a coordinate plane Initially the robot is located at the point Its path is described as a string of length consisting of characters Each of these characters corresponds to some move left means that the robot moves from the point to the point right means that the robot moves from the point to the point up means that the robot moves from the point to the point down means that the robot moves from the point to the point The company that created this robot asked you to optimize the path of the robot somehow To do this you can remove of the path But this company doesn t want their customers to notice the change in the robot behavior It means that if before the optimization the robot ended its path at the point then after optimization i e removing some single substring from the robot also ends its path at the point This optimization is a low budget project so you need to remove possible substring to optimize the robot s path such that the endpoint of his path doesn t change It is possible that you can t optimize the path Also it is possible that after the optimization the target path is an empty string i e deleted substring is the whole string Recall that the substring of is such string that can be obtained from by removing some amount of characters possibly zero from the prefix and some amount of characters possibly zero from the suffix For example the substrings of are but not and You have to answer independent test cases ,Maintain the amount of capital letters taken by going from left to right make it zero when you meet space Overall complexity ,0
439,You are given an array consisting of integers You want to split it into exactly such that each subsegment has odd sum i e for each subsegment the sum of all elements that belong to this subsegment is odd It is impossible to rearrange shuffle the elements of a given array Each of the elements of the array must belong to exactly one of the subsegments Let s see some examples of dividing the array of length into subsegments not necessarily with odd sums is the initial array then all possible ways to divide it into non empty non intersecting subsegments are described below Of course it can be impossible to divide the initial array into exactly subsegments in such a way that each of them will have odd sum of elements In this case print Otherwise print and possible division of the array See the output format for the detailed explanation You have to answer independent queries ,There are exactly games in the tournament each game has only two possible outcomes So it s possible to bruteforce all possible ways the tournament could go if is not large In fact this solution is fast enough when so if we somehow can handle the case we will have a working solution To handle let s divide the teams into two groups teams from to and teams from to There will be exactly matches in each group and the winners of these two groups will play in the finals The number of possible ways the games in a group can go is just so let s try to bruteforce all possible results in each group and somehow merge them into the results of the whole tournament The main idea is to rewrite as where and find all possible values for and and choose a pair of values that yields exactly the given value of We will handle two separate cases the winner of the first group wins the whole tournament or the winner of the second group wins the whole tournament Suppose we are handling the first case the second is symmetrical By choosing the results of matches in the first group we determine the places of the teams from the first group the winner of the first group gets place the team eliminated in the last match of the first group gets place and so on It means that by choosing one of the possible results in the first group we can calculate Let s bruteforce these combinations of results in the first group and store them in some data structure that allows to check whether some value of is achievable in the model solution it s a which maps reachable values of to combinations of results that yield these values Then by choosing the results of matches in the second group we can calculate so the remaining part of the solution is to bruteforce all possible results in the second group calculate for them and check that such that can be achieved by choosing the results in the first group Don t forget to also handle the case when the team which wins in the first group loses in the finals it is almost the same but the winner in the first group gets place and the winner in the second group gets place The technique I ve described here instead of bruteforcing all possible variants split the thing we try to bruteforce into two parts bruteforce them separatedly and then try to merge the parts is called and can be used to solve a large variety of problems ,0
440,You are given a string of length Each character is either one of the first lowercase Latin letters or a question mark You are asked to replace every question mark with one of the first lowercase Latin letters in such a way that the following value is maximized Let be the maximum length substring of string which consists entirely of the th Latin letter A substring of a string is a contiguous subsequence of that string If the th letter doesn t appear in a string then is equal to The value of a string is the minimum value among for all from to What is the maximum value the string can have ,Let s take a look at any operation You can notice that each letter can only go from position to indexed Then doing some operation twice is the same as doing that operation zero times Now consider some set of operations sorted in increasing order Actually they do the following altogether Replace segment with the reversed segment and vice versa Then replace segment with the reversed segment and vice versa And continue until you reach the first pair Segment might also be included in the answer when the parity is right Moreover every subset of segments is achievable So for each segment you can either swap it or not Let s translate it to math language Let be the number of such pairs of strings and that Why is there such an order You want to consider only unique strings thus you need to pick exactly one of equal strings from each component Let it be the smallest one Then for each segment of the set you have pairs to choose from where is the length of that segment And that part of the formula is However the part covered by zero segments is left There are possible strings up there is actually a number of all pairs of strings of length plus the number of all pairs of equal strings of length divided by Overall complexity ,0
441,In Japan the number reads like death so Bob decided to build a contains all natural numbers that do not contain the digit For example the number is part of the sequence but the numbers are not part of the sequence Bob realized that he does not know how to quickly search for a particular number by the position in the sequence so he asks for your help For example if Bob wants to find the number at position indexing from you need to answer ,Let s look at suprefix of fixed substring we can t find its maximal length via binary search because this function isn t monotone in general case But by fixing not the left border but the center of the prefix we also fix the center of the corresponding suffix center of a prefix in position is tied with the center of the suffix in position and more important function becomes monotone So solution is next iterate over all valid centers of prefix and try to binary search maximal length of such substring that its center is in position and it s equal to the substing with center in then can be updated with value And don t forget to update each with value Easy way to check substrings for equality is to use hashes Harder way is to use string suffix structures like bundle of Suffix Array LCP Sparse Table or Suffix Tree LCA Note for SuffArray users don t forget about changing sort to stable sort merge sort and breaking if all suffixes are different This optimizations can save you from writing radix or bucket sort ,0
442,You are given two integers and where We will add to until the result is equal to Thus there will be exactly additions performed For each such addition let s look at the number of digits that will be changed after it For example if then adding one will result in and digits will be changed if you add one to the result will be and digits will also be changed if you add one to the result will be and digits will be changed Changed digits always form a suffix of the result written in the decimal system Output the total number of changed digits if you want to get from adding each time ,The naive version of the solution is just dynamic programming let be the minimum cost of removed elements or the maximum cost of remaining elements if we considered first elements of and the resulting sequence maps to the first elements of There are two versions of this solution both working in calculate this dp as it is so there are states and transitions from each state ensure that the th element is taken into so there are states since each element appears in exactly once the second state can be deduces from the first one but up to transitions from each state It turns out that we can optimize the second approach Let s calculate the values of in ascending order of first of all we calculate the values of such that then transition into states such that and so on Calculating for is easy since the first element of is always the first element of we should delete all elements before the th if we want it to be the first element in So if is the maximum possible sum of costs of remaining elements if we considered the first elements of and the th element gets included in then for indices such that Okay now let s consider advancing from to If we want to go from to such that and we should leave the element in the array and delete some elements between indices and Which ones should be deleted First of all they are all elements with negative deletion cost but we should also get rid of all elements which could replace in that is all elements that are greater than So the remaining elements are which have and and we should be able to compute the sum of such elements Even if we manage to do it in which is possible there may be up to possible pairs of and to consider The easiest way to get rid of that is to sort all occurences of and and process them in ascending order maintaining the best that was already met That way each of the elements of will be considered at most twice so this solution runs in We know how to calculate the values now but how to determine the answer We should consider all values of such that and delete all elements with negative costs and all elements that are greater than from the suffix so this is another query of the form compute the sum of over which have and The most straightforward way to process them in is to use a persistent segment tree but since does not decrease in these queries as we process them we may maintain the elements we are interested in with a much simpler data structure for example Fenwick tree ,0
443,New Year is coming Vasya has prepared a New Year s verse and wants to recite it in front of Santa Claus Vasya s verse contains parts It takes seconds to recite the th part Vasya can t change the order of parts in the verse firstly he recites the part which takes seconds secondly the part which takes seconds and so on After reciting the verse Vasya will get the number of presents equal to the number of parts he fully recited Vasya can skip at most one part of the verse while reciting it if he skips more than one part then Santa will definitely notice it Santa will listen to Vasya s verse for no more than seconds For example if and Vasya skips the first part of verse then he gets two presents Note that it is possible to recite the whole verse if there is enough time Determine which part Vasya needs to skip to obtain the maximum possible number of gifts If Vasya shouldn t skip anything print If there are multiple answers print any of them You have to process test cases ,If sum limits i 1 n a i le s then answer is Otherwise let s find we minimum index x such that sum limits i 1 x a i s It s useless to skip a part i x because Vasya just has not time to recite previous part it s change nothing So he has to skip a part i le x And among such parts it s beneficial to skip part with maximum value of a i ,1
444,At the school where Vasya is studying preparations are underway for the graduation ceremony One of the planned performances is a ball which will be attended by pairs of boys and girls Each class must present two couples to the ball In Vasya s class boys and girls wish to participate But not all boys and not all girls are ready to dance in pairs Formally you know possible one boy one girl pairs You need to choose two of these pairs so that no person is in more than one pair For example if and the couples are ready to dance together in each pair the boy s number comes first then the girl s number then the following combinations of two pairs are possible not all possible options are listed below and and But the following combinations are not possible and the first boy enters two pairs and the second girl enters two pairs Find the number of ways to select two pairs that match the condition above Two ways are considered different if they consist of different pairs ,We can think that it is given a bipartite graph Boys and girls are the vertices of the graph If a boy and a girl are ready to dance together then an edge is drawn between them In this graph you need to select two edges that do not intersect at the vertices Let the number of edges included in the vertex Iterate over the first edge It will block of other edges all adjacent to vertex to vertex but the edge will be blocked twice All non blocked edges do not intersect with at the vertices So you can add to the answer ,1
445,You are given a tree consisting of vertices A number is written on each vertex the number written on vertex is Let s denote the function as the difference between maximum and minimum value of on a simple path connecting vertices and Your task is to calculate ,First of all we will calculate the sum of maximum and minimum values on all segments separatedly Then the answer is the difference between the sum of maximum values and minimum values How can we calculate the sum of minimum values for example For each element we will try to find the number of segments where it is the So we will calculate two arrays means that is the maximum index such that and and means that is the minimum index such that and So actually and represent the borders of the largest segment where is the and we need to exclude those borders While knowing these values we can calculate the number of subsegments where is the How can we calculate for example the array We will use a stack where we will store some indices in the array in such a way that if we change all indices to the values in the array they will be in sorted order the maximum element will be at the top of the stack and the minimum at the bottom Let s calculate from the minimum index to the maximum When we calculate we remove all elements such that from the stack since the stack is sorted all these elements will be at the top of the stack and when we encounter the first element such that it is guaranteed that all elements below it don t need to be deleted Then if there s any element on top of the stack it becomes the value of then we push into the stack Since every element will be added and deleted not more than one time the complexity of this algorithm is linear We can apply the same technique to calculate the values of and the sum of maximums ,0
446,The game of Berland poker is played with a deck of cards of which are jokers players play this game is divisible by At the beginning of the game each player takes cards from the deck so each card is taken by exactly one player The player who has the maximum number of jokers is the winner and he gets the number of points equal to where is the number of jokers in the winner s hand and is the maximum number of jokers among all other players If there are two or more players with maximum number of jokers all of them are winners and they get points Here are some examples If one player gets jokers and plain card and another player gets jokers and plain cards then the first player is the winner and gets points Two players get plain cards and the other two players get jokers so both of them are winners and get points If the first player gets jokers the second player gets joker and plain cards and the third player gets jokers and plain card then the first player is the winner and he gets point Since there are no jokers everyone gets jokers everyone is a winner and everyone gets points Given and calculate the maximum number of points a player can get for winning the game ,There are many different ways to solve this problem The easiest one in my opinion is to iterate on the number of jokers the winner has let it be and the number of jokers the runner up has let it be Then the following conditions should be met the winner doesn t have less jokers than the runner up the number of jokers in the winner s hand does not exceed the number of cards in his hand the number of jokers for these two players does not exceed the total number of jokers it is possible to redistribute remaining jokers among other players so that they have at most jokers Iterating on and then checking these constraints gives us a solution It is possible to get a constant time solution using some greedy assumptions and math the first player should get as many jokers as possible while the remaining jokers should be evenly distributed among other players ,1
447,Ivan s classes at the university have just finished and now he wants to go to the local CFK cafe and eat some fried chicken CFK sells chicken chunks in small and large portions A small portion contains chunks a large one chunks Ivan wants to eat exactly chunks Now he wonders whether he can buy exactly this amount of chicken Formally Ivan wants to know if he can choose two non negative integers and in such a way that small portions and large ones contain exactly chunks Help Ivan to answer this question for several values of ,There are lots of different approaches to this problem For example you could just iterate on the values of and from to and check if ,1
448,You are given sequences of integers The length of the th sequence equals to You have to choose exactly two sequences and such that you can remove exactly one element in each of them in such a way that the sum of the changed sequence its length will be equal to equals to the sum of the changed sequence its length will be equal to Note that it s to remove exactly one element in each of the two chosen sequences Assume that the sum of the empty of the length equals sequence is ,Let s calculate the array of triples Triple means that the sum of the sequence without the element at position will be equal to Triples can be easily calculated in a following manner for each sequence find its sum then iterate over all its elements and subtract each of them one after another Now sort array with the standard compare function Finally the answer is if and only if there exist two adjacent elements with equal sums and different sequences it is very easy to see So if we find such a pair then the answer will be otherwise the answer will be Time complexity of the solution is ,1
449,You are given two arrays and both consisting of positive greater than zero integers You are also given an integer In one move you can choose two indices and and swap and i e becomes and vice versa Note that and can be equal or different in particular swap with or swap and both are acceptable moves Your task is to find the possible sum you can obtain in the array if you can do no more than i e at most such moves swaps You have to answer independent test cases ,Each move we can choose the minimum element in the maximum element in and swap them if the minimum in is less than maximum in If we repeat this operation times we get the answer This can be done in but authors solution is ,1
450,An array is called if it contains element which is equal to the If the array is not ugly it is For example the array is ugly the element is equal to the array is ugly the element the second one is equal to the array is beautiful so there is no element which is equal to the sum of all elements before it You are given an array such that You have to the elements of in such a way that the resulting array is beautiful Note that you are not allowed to insert new elements or erase existing ones you can only change the order of elements of You are allowed to keep the array unchanged if it is beautiful ,If we put the maximum in the array on the first position then for every element starting from the third one the sum of elements before it will be greater than it since that sum is greater than the maximum value in the array So the only element that can make our array ugly is the second element We need to make sure that it is not equal to the first element Let s put the maximum element on the first position the minimum element on the second position and then fill the rest of the array arbitrarily The only case when it fails is when the maximum element is equal to the minimum element and it s easy to see that if the maximum is equal to the minimum then the first element of the array will be equal to the second element no matter what and the array cannot become beautiful So the solution is to check if the maximum is different from the minimum and if it is so put them on the first two positions and the order of remaining elements does not matter Note that the given array is sorted so the minimum is the first element the maximum is the last element ,1
451,Polycarp has to solve exactly problems to improve his programming skill before an important programming competition But this competition will be held very soon most precisely it will start in days It means that Polycarp has exactly days for training Polycarp doesn t want to procrastinate so he wants to solve at least one problem during each of days He also doesn t want to overwork so if he solves problems during some day he should solve no more than problems during the next day And at last he wants to improve his skill so if he solves problems during some day he should solve at least problem during the next day More formally let be the array of numbers of problems solved by Polycarp The th element of this array is the number of problems Polycarp solves during the th day of his training Then the following conditions must be satisfied sum of all for from to should be should be for each from to the condition should be satisfied for each from to Your problem is to find array of length satisfying the conditions above or say that it is impossible to do it ,I suppose there are some solutions without cases handling but I ll describe my own it handling approximately 5 cases Firstly let nn n frac k k 1 2 If nn 0 then the answer is already Otherwise let s construct the array a where all a i are lfloor frac nn k rfloor except rightmost nn k values they are lceil frac nn k rceil It is easy to see that the sum of this array is nn it is sorted in non decreasing order and the difference between the maximum and the minimum elements is not greater than 1 Let s add 1 to a 1 2 to a 2 and so on this is what we subtract from n at the beginning of the solution Then if nn ne k 1 or k 1 then this answer is correct Otherwise we got some array of kind 1 3 dots a k How do we fix that For k 2 or k 3 there is no answer for this case you can try to prove it or try to find answers for cases n 4 k 2 and n 8 k 3 Otherwise k 3 and we can subtract one from a 2 and add it to a k and this answer will be correct this also can be proved with some easy formulas Time complexity O k ,1
452,You are given a rooted tree of vertices Every vertex of this tree has either children or children All leaves of this tree have the same distance from the root and for every non leaf vertex one of its children is the left one and the other child is the right one Formally you are given a The vertices of the tree are numbered in the following order the root has index if a vertex has index then its left child has index and its right child has index Every vertex of the tree has a letter written on it either or Let s define the character on the vertex as Let the of some vertex be defined in the following way if the vertex is a leaf then the of be consisting of only one character otherwise the of is where operator defines concatenation of strings is the of the left child of and is the of the right child of The of the tree is the of its root You have to calculate the number of different strings that can be obtained as the of the given tree if you are allowed to perform the following operation any number of times before constructing the of the tree choose any non leaf vertex and swap its children so the left child becomes the right one and vice versa ,In this problem it was enough to implement an analogue of standard or Here is an example of a solution based on selection sort Let s find the minimum element in the array by simply iterating over it Let s denote its index in the array by If we apply a shift to it the following happens Once again please note that all shifts are made in the left direction so shifting by to the left will put the element that was previously at index in the first place Let us perform a similar shift for the second largest element of the array putting it in second place for the third largest element of the array putting it in third place and so on More formally let s describe the th iteration as follows At the beginning of the th iteration the first elements of the array are its minimal elements already in their correct places in sorted order During the th iteration the th largest element of the array is placed in the th place in the array Since the first minimal elements are already in their places the th largest element of the array is simply the smallest element among Let s find it by iterating over these elements and denote its index in the array by Make a shift The first elements will not change and the element from the th place in the array will move to the th It is worth noting that the output format forbids shifting segments with Regarding this case we should check the equality separately If these two indexes coincide then the th element is already in its place and no shift should be done on this iteration Let us repeat this algorithm for At each iteration the new element will be shifted into its place in sorted order and each iteration performs no more than one shift operation Thus in strictly less than shifts the array will be completely sorted The time complexity is ,0
453,Vova has taken his summer practice this year and now he should write a report on how it went Vova has already drawn all the tables and wrote down all the formulas Moreover he has already decided that the report will consist of exactly pages and the th page will include tables and formulas The pages are numbered from to Vova fills the pages one after another he can t go filling page before finishing page and he can t skip pages However if he draws than tables in a row or writes than formulas in a row then he will get bored Vova wants to rearrange tables and formulas in each page in such a way that he doesn t get bored in the process Vova can t move some table or some formula to another page Note that the count doesn t reset on the start of the new page For example if the page ends with tables and the next page starts with tables then it s counted as tables in a row Help Vova to determine if he can rearrange tables and formulas on each page in such a way that there is no more than tables in a row and no more than formulas in a row ,Let s intruduce the following dynamic programming approach is the smallest number of elements of type page can end with If we learn to recalculate it the answer will be if or I will try to prove it on the fly Let s look into the constructing of each page from the following perspective I ll consider the cases when the current page ends with tables and the previous page ends with either tables or formulas Let s write down all the tables and then put formulas as separators to them I will call number of tables on the end of the previous page the number of formulas on the end of the previous page the number on tables on the current page and the number of formulas on the current page In the case with tables on the end of the previous page the smallest number of separators you can have is Moreover if you have you can put one of the formulas right before the end of the page ending it with table The only case is when there are too many separators should be less or equal to you can put up to separators before each table The case with formulas on the end of the previous page isn t that different The smallest number of separators is and the limit to the number of separators is you can t put separators before the first table as in the first case the maximum number to that position is determined by the previous page Now let s take a look at resulting expressions You can notice that lowering can only decrease the lower bound on the number of separators and lowering can only increase the upper bound on the number of separators That shows that minimizing the values in is always profitable Overall complexity ,1
454,There is a field divided into rows and columns Some cells are empty denoted as other cells contain robots denoted as You can send a command to at the same time The command can be of one of the four types move up move right move down move left When you send a command attempt to take one step in the direction you picked If a robot tries to move outside the field it explodes otherwise moves to an adjacent cell in the chosen direction You can send as many commands as you want possibly zero in any order Your goal is to make at least one robot reach the upper left corner of the field Can you do this without forcing any of the robots to explode ,Notice that rows can be solved completely separately of each other Each tile takes either one or two squares but it s always in the same row So let s take a look at a single row There are sequences of dot characters separated by some asterisks Once again each of these sequences can be solved independently of the others Thus we have these empty strips of empty squares which when solved can be summed up into the whole answer There are two cases depending on if a is cheaper than two tiles If it is then we want to use of many tiles as possible So given we can place tiles and cover the rest squares with tiles If it isn t cheaper then we want to cover everything with tiles and never use ones So all should be The easier way to implement this might be the following Let s update the price of the tile with the minimum of and This way the first algorithm will produce exactly the same result of the second one in the case when a tile isn t cheaper than two ones Overall complexity per testcase ,0
455,There are two rival donut shops The first shop sells donuts at retail each donut costs dollars The second shop sells donuts only in bulk box of donuts costs dollars So if you want to buy donuts from this shop then you have to buy the smallest number of boxes such that the total number of donuts in them is greater or equal to You want to determine two values how many donuts can you buy so that they are strictly cheaper in the first shop than in the second shop how many donuts can you buy so that they are strictly cheaper in the second shop than in the first shop If any of these values doesn t exist then that value should be equal to If there are multiple possible answers then print any of them ,At first notice that if there exists a value for the second shop then the value divisible by also exists For any you can round it up to the nearest multiple of That won t change the price for the second shop and only increase the price for the first shop You can also guess that if there exists a value for the first shop then the value with modulo also exists exactly donut on top of some number of full boxes Following the same logic the second shop needs an entire new box and the first shop needs only an extra donut So let s take a look at the smallest values of two kinds this value is valid for the second shop if one box is cheaper than donuts in the first shop Otherwise no matter how many boxes will you take they will never be cheaper than the corresponding number of donuts this value is valid for the first shop if one donut is cheaper than one box in the second shop Apply the same idea otherwise no value for the first shop is valid Overall complexity per testcase ,1
456,Alice and Bob play a game The game consists of several sets and each set consists of several rounds Each round is won either by Alice or by Bob and the set ends when one of the players has won rounds in a row For example if Bob won five rounds in a row and then two sets ends You know that Alice and Bob have already played rounds and you know the results of some rounds For each from to calculate the maximum possible number of sets that could have already finished if each set lasts until one of the players wins rounds in a row It is possible that the last set is still not finished in that case you should not count it in the answer ,Let s consider the following function minimum index such that there is a substring of string of length consisting of only characters and or and If this function has asymptotic then we can solve problem for Now let s precalculate two array and is equal the maximum integer such that substring consist only characters and is equal the maximum integer such that substring consist only characters and Also let s precalculate the arrays and of size contain all positions such that substring consist only characters and and or contain all positions such that substring consist only characters and and or After that let s solve problem for some Suppose that now we already processed first elements of If or then we increase the answer and change Otherwise we have to find the minimum element denote this element as in or such that If there is no such element then we found the final answer Otherwise let s increase answer and change and continue this algorithm ,1
457,You are given a string consisting of lowercase Latin letters You have to type this string using your keyboard Initially you have an empty string Until you type the whole string you may perform the following operation add a character to the end of the string Besides you may perform one additional operation copy the string and append it to itself For example if you have to type string you can type it in operations if you type all the characters one by one However you can type it in operations if you type the string first and then copy it and type the last character If you have to type string the best option is to type characters one by one then copy the string and then type the remaining character Print the minimum number of operations you need to type the given string ,Let s consider as a substring of string from position to position is not included Let s iterate over all lenghts of the copied prefix from to 0 inclusive and then if then answer will be and iterating over smaller lenghts is not necessary ,1
458,You are given a string and an array of strings Each string consists of lowercase Latin letters from to consists of lowercase Latin letters from to and question marks Each string has its cost an integer number The value of some string is calculated as where is the number of occurences of string in as a substring For example You have to replace all question marks in with lowercase Latin letters from to so the value of is maximum possible ,f two asterisks are in the same row then it is enough to select any other row and place two asterisks in the same columns in it If two asterisks are in the same column then you can do the same If none of the above conditions are met and the asterisks are at positions x1 y1 x2 y2 then you can place two more asterisks at positions x1 y2 x2 y1 ,0
459,You have chains the th chain consists of vertices Vertices in each chain are numbered independently from to along the chain In other words the th chain is the undirected graph with vertices and edges connecting the th and the th vertices for each Now you decided to unite chains in one graph in the following way the first chain is skipped the st vertex of the th chain is connected by an edge with the th vertex of the th chain the last th vertex of the th chain is connected by an edge with the th vertex of the th chain Calculate the length of the longest simple cycle in the resulting graph A is a chain where the first and last vertices are connected as well If you travel along the simple cycle each vertex of this cycle will be visited exactly once ,Suppose we ve built the graph and chosen any simple cycle Due to the nature of the graph any simple cycle right part is part of one of the chains So let s for each chain calculate the longest simple path with its right part on this chain and denote it as Obviously Now let s look at chain If we go along the cycle in both ways we will step to vertices and of the previous chain If then we closed cycle and it s the only possible cycle so Otherwise we can either go from and and meet each other closing the cycle with part of the th chain between th and th vertices this part has edges and our cycle will have length But if we decide to go in different ways then we will meet the first and the last vertices of the th chain After that we ll go to the th and the th vertices of th chain and will make almost the same choice But instead of recurrently solving the same problem we can note that in fact we took a cycle that ends at the th chain erased the part between vertices and and merged it with our th chain part so the length of this merged cycle will be equal to Since we maximize we just choose what part or is longer and take it As a result we can iterate from left to right calculate all and print the maximum among them ,1
460,You are given strings Each string consists of lowercase English letters Rearrange reorder the given strings in such a way that for every string all strings that are placed before it are its String is a of string if it is possible to choose several letters in in such a way that they form For example string is contained as a in strings and but is not contained as a in strings and ,The problem can be solved by the next greedy algorithm At first we need to store the last character of the alphabet we haven t obtained for example in variable initially it will be equal to Then we will just iterate over all characters of the string from left to right and if the current character of the string is not greater than we just replace it to and increase by 1 If in any moment will be greater than we got the answer And if after iterating over the string will be not greater than the answer is 1 ,0
461,Monocarp plays a computer game called Goblins and Gnomes In this game he manages a large underground city of gnomes and defends it from hordes of goblins The city consists of halls and one directional tunnels connecting them The structure of tunnels has the following property if a goblin leaves any hall he cannot return to that hall The city will be attacked by waves of goblins during the th wave goblins attack the city Monocarp s goal is to pass all waves The th wave goes as follows firstly goblins appear in some halls of the city and pillage them Then goblins start moving along the tunnels pillaging all the halls in their path Goblins are very greedy and cunning so they choose their paths so that no two goblins pass through the same hall Among all possible attack plans they choose a plan which allows them to After goblins are done pillaging they leave the city If all halls are pillaged during the wave Monocarp loses the game Otherwise the city is restored If some hall is pillaged during a wave goblins are still interested in pillaging it during the next waves Before each wave Monocarp can spend some time preparing to it Monocarp doesn t have any strict time limits on his preparations he decides when to call each wave by himself but the longer he prepares for a wave the fewer points he gets for passing it If Monocarp prepares for the th wave for minutes then he gets points for passing it obviously if he doesn t lose in the process While preparing for a wave Monocarp can block tunnels He can spend one minute to If Monocarp blocks a tunnel while preparing for a wave it stays blocked during the next waves as well Help Monocarp to defend against all waves of goblins and get the maximum possible amount of points ,Note that any number in the sequence can be made up of possible digits all digits except Then let s find the first digit of the answer notice that it is just or where where the length of the number we re looking for and the maximum Note that simply corresponds to a digit in the base numeral system Why is this so Because without the first digit we can assemble any numbers with possible digits and we can put the digits except in the first place Thus in the answer the first digit will be if and if Note that once the first digit is determined the rest can be found the same way since the prefix does not affect anything ,0
462,You are given a correct solution of the sudoku puzzle If you don t know what is the sudoku you can read about it here The picture showing the correct sudoku solution Blocks are bordered with bold black color Your task is to change elements of this field i e choose some and change the number at the position to any other number in range to make it The is the field in which Any number in this field is in range each row contains at least two equal elements each column contains at least two equal elements each block you can read what is the block in the link above contains at least two equal elements It is guaranteed that the answer exists You have to answer independent test cases ,Well if we replace all occurrences of the number with the number then the initial solution will be anti sudoku It is easy to see that this replacement will make exactly two copies of in every row column and block There are also other correct approaches but I found this one the most pretty ,1
463,Polycarp has a poor memory Each day he can remember no more than of different letters Polycarp wants to write a non empty string of consisting of lowercase Latin letters taking number of days In how many days will he be able to do it Polycarp initially has an empty string and can only add characters to the end of that string For example if Polycarp wants to write the string he will do it in days on the first day Polycarp will memorize the letters and write On the second day Polycarp will remember the letters add to the resulting line and get the line If Polycarp wants to write the string he will do it in days in the first day will be written part on day two will be written part on the third day part of will be written on the fourth day part of will be written For a given string print the minimum number of days it will take Polycarp to write it ,Let us simulate the process We store a set consisting of letters that Polycarp memorizes on one day Gradually dial the set If the size of exceeds we add to the day counter and clear ,1
464,You are given two integers and where We will add to until the result is equal to Thus there will be exactly additions performed For each such addition let s look at the number of digits that will be changed after it For example if then adding one will result in and digits will be changed if you add one to the result will be and digits will also be changed if you add one to the result will be and digits will be changed Changed digits always form a suffix of the result written in the decimal system Output the total number of changed digits if you want to get from adding each time ,For each digit we will count how many times it has changed The number of changes for the first digit the lowest is calculated using the formula The number of changes for the second digit is calculated by the formula That is it is equivalent to the number of first digit changes for numbers from to To calculate the number of changes for the remaining digits you need to apply similar reasoning with dividing the numbers by ,1
465,There is a bag containing colored balls There are different colors of balls numbered from to There are balls of color in the bag The total amount of balls in the bag is odd e g is odd In one move you can choose two balls and take them out of the bag At some point all the remaining balls in the bag will have the same color That s when you can t make moves anymore Find any possible color of the remaining balls ,Let s prove that the color with the maximum value of is one of the possible answers Let the color have the maximum value of if there are several such colors choose any of them Let s keep taking the balls of two different colors out of the bag without touching the balls of color for as long as possible After such operations two cases exist In one case only balls of color are left then everything is fine In other case there are balls of color and some color let be the remaining number of balls of this color Since initially was one of the maximums However the number of remaining balls is odd which means and Therefore we can keep taking the balls of colors and until only balls of color are left ,1
466,You are given a permutation You should answer queries Each query is a pair and you should calculate Let s denote as the position of the maximum in subsegment Then if or otherwise ,The author solution for this problem uses dynamic programming I think that this problem can t be solved by greedy ideas Let s calculate two dp s z1i is the answer to the problem if all numbers less than ai are already printed but the others are not and z2i is the answer to the problem if all numbers less than or equal to ai are already printed but the others are not Let s denote dij the least distance between i and j on the circular array and odij is the distance from i to j in clockwise order Easy to see that z2i minj zj dij for all j such that the value aj is the least value greater than ai Now let s calculate the value z1i Consider all elements equals to ai in one of them we are If there is only one such element then z1i z2i Otherwise we have two alternatives to move in clockwise or counterclockwise direction Let we are moving in clockwise direction the last element from which we will write out the number would be the nearest to the i element in counterclockwise direction let s denote it u Otherwise at last we will write out the number from the nearest to the i element in clockwise direction let s denote it v Now z1i min z2u odiu z2v odvi Easy to see that the answer to the problem is mini z1i dsi over all i such that ai is the smallest value in array and s is the start position Additionally you should restore the answer To do that on my mind the simplest way is to write the recursive realization of dp test it carefully and then copy it to restore answer see my code below Of course it s possible to restore the answer without copy paste For example you can add to your dp parameter b which means it s need to restore answer or not Complexity O n2 Code ,0
467,You are given an array consisting of integers Let s denote of array as an array consisting of integers such that all of the following conditions are met for every pair of indices and such that if then note that if it is still possible that for every index either or For example if then two possible monotonic renumerations of are and Your task is to calculate the number of different monotonic renumerations of The answer may be large so print it modulo ,Let the number of students with the skill is and the number of different skills is Then the size of the first team can not exceed and the size of the second team can not exceed So the answer is not greater than the minimum of these two values Moreover let s take a look at the skill with a maximum value of Then there are two cases all students with this skill go to the second team then the sizes of teams are at most and correspondingly Otherwise at least one student with this skill goes to the first team and the sizes are at most and correspondingly So the answer is Time complexity ,0
468,You wanted to write a text consisting of lowercase Latin letters But instead you have written a text consisting of lowercase Latin letters and now you want to fix it by obtaining the text from the text Initially the cursor of your text editor is at the end of the text after its last character In one move you can do one of the following actions press the left button so the cursor is moved to the left by one position or does nothing if it is pointing at the beginning of the text i e before its first character press the right button so the cursor is moved to the right by one position or does nothing if it is pointing at the end of the text i e after its last character press the home button so the cursor is moved to the beginning of the text before the first character of the text press the end button so the cursor is moved to the end of the text after the last character of the text press the backspace button so the character before the cursor is removed from the text if there is no such character nothing happens Your task is to calculate the minimum number of moves required to obtain the text from the text using the given set of actions or determine it is impossible to obtain the text from the text You have to answer independent test cases ,Of course there is no need to press home more than once and no need to press end at all because suppose we did something on suffix then pressed home did something on prefix and then pressed end and continue doing something on suffix Then we can merge these two sequences of moves on suffix and press home after we did anything we wanted on suffix and the answer will not get worse Now let s iterate over the position at which we will press home in range from to In other words we iterate over the position till which we press only left and backspace to fix the suffix So now we have the string and we want to get some suffix of from this string but we actually don t know which suffix of we want So let s iterate over the length of this suffix in a range from to Now we have the string and the string and we have to check if we can obtain this suffix of from this suffix of This part can be precalculated in greedily we just can store for each suffix of the rightmost position in in which this suffix is obtainable If we can obtain the current suffix then we obviously can say the number of moves to do that it is and actually do not depend on the suffix length because if we meet the character we need we just press left and move to the next character otherwise we press backspace and move to the next character deleting the one we don t need After that we press home and now we have to check if we can obtain from This part can also be precalculated greedily in like the part with rightmost positions for suffixes But the minimum number of moves required to obtain the prefix is tricky Actually if we consider these prefixes from right to left we want to match as many characters from the beginning as possible In other words if we reverse and we want to find their longest common prefix and this will be the number of characters we don t want to touch at all and if it is the longest common prefix it means that the next character is bad and we want to remove it anyway so the length of LCP of these two reversed prefixes is the only thing affecting the number of moves on the prefix This part can be precalculated in with simple dynamic programming using memory or with z function in time and memory we just need to build a z function on a string where is the concatenation of strings and is the reverse operation The required value of the z function for the fixed values and will be in the position And the answer for the prefix will be this is the number of extra characters on the prefix we have to delete plus plus because we have to press home But there is a corner case If the prefix is empty then we don t need to do all of this and the answer for prefix will be Complexity time and memory ,1
469,You are given a directed graph with vertices and directed edges without self loops or multiple edges Let s denote the coloring of a digraph as following you color each edge in one of colors The coloring is if and only if there no cycle formed by edges of same color Find a good coloring of given digraph with minimum possible ,Let s run dfs on the graph and color all back edges is back edge if there is a path from to by edges from dfs tree in black and all other edges in white It can be proven that any cycle will have at least one white edge and at least black edge Moreover each back edge connected with at least one cycle path from to and back edge So the coloring we got is exactly the answer How to prove that any cycle have at least one edge of both colors Let s look only at edges from dfs trees We can always renumerate vertices in such way that index of parent is bigger than the index of any its child We can process and assign with minimal free number after we processed all its children Now we can note that for any white edge not only tree edge condition holds because of properties of dfs forward edges are obvious cross edge becomes cross because dfs at first processed vertex and after that so And for each back edge it s true that Since any cycle have both and situations profit ,1
470,There are points on an infinite plane The th point has coordinates such that and The coordinates are not necessarily integer In one move you perform the following operations choose two points and move point from to either or move point from to either or remove points and Otherwise the move can t be performed and the points stay at their original coordinates and respectively The numeration of points after some points are removed Once the points are removed they can t be chosen in any later moves Note that you have to move both points during the move you can t leave them at their original coordinates What is the maximum number of moves you can perform What are these moves If there are multiple answers you can print any of them ,At first the problem sounds like some sort of matching However it seems like you first want to match each point with either of its moves and then some pairs of points to each other That doesn t sound viable but since the matchings are often connected with graphs the graph idea might come handy Let s first consider a pair of matched points What does it actually mean that there exists a line through their new coordinates and It s the same as the angles of a line through the new coordinates of and and a line through the new coordinates of and are the same Angles are the same means that their tangents are the same and vice versa since we only consider the first quadrant of the plane So we can conclude that or of the first point should be equal to any of these of the second point Now consider the following graph Various values of tangents of the lines are the nodes Each point produces an edge between their and What are the matched pairs of points in this graph It s such a pair of edges that they share at least one endpoint Building a graph is the slowest part of the solution since you have to use some data structure or at least a sort and a binary search is possible with some sort of hashmap but should be perfectly fine as well So we reduced the problem to a more well known one given an arbitrary undirected graph find the maximum number of pairs of edges such that each pair shares at least one endpoint and each edge is included in no more than one pair The upper bound on the answer is the following Let be the number of edges in the th connected component Best case we can make pairs from it Let s come up with an algorithm to achieve this bound Consider a dfs tree of a component It s known that a dfs tree of an undirected graph contains no cross edges So if we direct all the edges of a dfs tree downwards convert all back edges to forward edges each edge will connect some vertex to its descendant Imagine we came up with a dfs such that matches all the edges that have their upper node in the subtree of to each other except one edge in case there is an odd number of them will solve the task exactly then How should that dfs work exactly What if there were no forward edges at all That case is easy since all edges are tree edges We ll try to maintain an invariant that the only unmatched edge is an edge that has as one of its endpoints If is a leaf then there s nothing to match Otherwise we go into some child If it can t match all its edges then match its remaining edge to an edge If it can then remember that we have an edge unmatched so far Go into another child Same match our edge with its edge if it has one unmatched However if turned out to get unmatched and turned out to be unmatched then you can match them to each other This way you will be left with at most one unmatched edge after you process all the children and that edge has its endpoint at Add the forward edges back Did anything change Look at the forward edge that has its upper vertex the lowest We can see that it points to a vertex that has its subtree fully matches So why don t we treat this forward edge the same as an edge to a leaf Forget that has some subtree of its own and just believe that you can t match the edge so far Proceed the same as the easy case Since we mark exactly which edges you pair up with which it s trivial to retrieve the answer Overall complexity ,1
471,You are an upcoming movie director and you have just released your first movie You have also launched a simple review site with two buttons to press upvote and downvote However the site is not so simple on the inside There are two servers each with its separate counts for the upvotes and the downvotes reviewers enter the site one by one Each reviewer is one of the following types type a reviewer has watched the movie and they like it they press the upvote button type a reviewer has watched the movie and they dislike it they press the downvote button type a reviewer hasn t watched the movie they look at the current number of upvotes and downvotes of the movie on the server they are in and decide what button to press If there are more downvotes than upvotes then a reviewer downvotes the movie Otherwise they upvote the movie Each reviewer votes on the movie exactly once Since you have two servers you can actually manipulate the votes so that your movie gets as many upvotes as possible When a reviewer enters a site you know their type and you can send them either to the first server or to the second one What is the maximum total number of upvotes you can gather over both servers if you decide which server to send each reviewer to ,Suppose at the end you won matches what can be your final place Look at each opponent with indexed Since the th opponent indexed won games against the other opponents even if they win against you they ll gain wins in total and can t affect your place since your place is decided by only opponents who won strictly more matches than you From the other side let s look at each opponent with indexed Even if they lose to you they still have wins you have only so all of them have strictly more wins than you As a result there is only one opponent whose match against you can affect your final place if you won against them your place will be otherwise your place will be Now let s compare your possible places if you win games with places for winning only games wins gives you places or while winning leads you to places or that objectively worse In other words it s always optimal to win as many matches as possible How to win the most number of games It s to choose the easiest opponents Let s sort array and find the maximum prefix with So we found maximum number of games we can win The last is to check can we get place or only If contains among smallest values then we ll take place Otherwise let s try to insert in this set i e let s erase the biggest among them and insert If the sum is still lower or equal to it s success and we get place Otherwise our place is The total complexity is because of sorting ,0
472,The girl named Masha was walking in the forest and found a complete binary tree of height and a permutation of length A complete binary tree of height is a rooted tree such that every vertex except the leaves has exactly two sons and the length of the path from the root to any of the leaves is The picture below shows the complete binary tree for A permutation is an array consisting of different integers from to For example is a permutation but is not occurs twice and is also not a permutation but there is in the array Let s enumerate leaves of this tree from left to right The leaf with the number contains the value For example if the tree will look like this Masha considers a tree if the values in its leaves are ordered from left to right in increasing order In one operation Masha can choose any non leaf vertex of the tree and swap its left and right sons along with their subtrees For example if Masha applies this operation to the root of the tree discussed above it will take the following form Help Masha understand if she can make a tree in a certain number of operations If she can then output the minimum number of operations to make the tree ,Let some vertex be responsible for a segment of leaves Then her left son is responsible for the segment and the right for the segment Note that if we do not apply the operation to this vertex then it will not be possible to move some element from the right son s segment to the left son s segment It remains to understand when we need to apply the operation to the vertex Let the maximum on the segment be the minimum on the same segment is Then if lies in the right son and in the left then we should obviously apply the operation for the reason described above In the case when lies in the left son and in the right the application of the operation will definitely not allow you to get a solution Let s continue to act in a similar way recursively from the children of the current vertex At the end we should check whether we have received a sorted permutation The above solution works for since there are levels in the tree and at each level vertexes are responsible for sheets in total You can optimize this solution to if you pre calculate the maximum and minimum for each vertex ,1
473,Maksim has objects and boxes each box has size exactly Objects are numbered from to in order from left to right the size of the th object is Maksim wants to pack his objects into the boxes and he will pack objects by the following algorithm he takes one of the empty boxes he has goes from left to right through the objects and if the th object fits in the current box the remaining size of the box is greater than or equal to he puts it in the box and the remaining size of the box decreases by Otherwise he takes the new empty box and continues the process above If he has no empty boxes and there is at least one object not in some box then Maksim cannot pack the chosen set of objects Maksim wants to know the maximum number of objects he can pack by the algorithm above To reach this target Your task is to say the maximum number of objects Maksim can pack in boxes he has Each time when Maksim tries to pack the objects into the boxes he will make empty all the boxes he has before do it and the relative order of the remaining set of objects will not change ,For each digit we will count how many times it has changed The number of changes for the first digit the lowest is calculated using the formula The number of changes for the second digit is calculated by the formula That is it is equivalent to the number of first digit changes for numbers from to To calculate the number of changes for the remaining digits you need to apply similar reasoning with dividing the numbers by ,0
474,Consider a sequence of integers In one move you can select any element of the sequence and delete it After an element is deleted all elements to the right are shifted to the left by position so there are no empty spaces in the sequence So after you make a move the sequence s length decreases by The indices of the elements after the move are recalculated E g let the sequence be Let s select the element in a move Then after the move the sequence will be equal to so the rd element of the new sequence will be and the th element will be You are given a sequence and a number You need to find the minimum number of moves you have to make so that in the resulting sequence there will be elements that are equal to their indices i e the resulting sequence will contain at least indices such that ,First let s note that we will have a transition from to only once otherwise it turns out that first the picture disappeared then it appeared and disappeared back but we can consider that a friend in the middle who answered lied to us but this is not true because even before him the picture disappeared So we need to find this transition Since we can also meet we find the index of the leftmost in case of absence we take and mark it as and the index of rightmost in case of absence we take and mark as Answer the number of indices between them inclusive because only they could lie There could not be a thief to the left of since either the friend under the index lied or the picture was not stolen before There could not be a thief to the right of since either the painting had already been stolen in the presence of s friend or it was he who lied ,0
475,You are given a rectangular matrix of size consisting of integers from to In one move you can choose of the matrix and change its value to integer between and inclusive take and shift it one cell up cyclically see the example of such cyclic shift below A cyclic shift is an operation such that you choose some and set Example of cyclic shift of the first column You want to perform the minimum number of moves to make this matrix look like this In other words the goal is to obtain the matrix where i e with the performed ,We will solve the problem greedily First we will try to add pairs of identical characters to palindromes As long as there are at least pairs let s add them After that it is no longer possible to add a couple of characters but you can try to add one character in the middle This can be done if there are at least characters left There is no need to paint other characters ,0
476,Alice and Bob play a game Alice has cards the th of them has the integer written on it Bob has cards the th of them has the integer written on it On the first turn of the game chooses one of his her cards and puts it on the table plays it On the second turn chooses one of his her cards and plays it On the third turn chooses one of his her cards and plays it and so on the players take turns and each player has to choose one of his her cards with greater integer than the card played by the other player on the last turn If some player cannot make a turn he she loses For example if Alice has cards with numbers and Bob has cards with numbers the game may go as follows Alice can choose any of her cards She chooses the card with integer and plays it Bob can choose any of his cards with number greater than He chooses a card with integer and plays it Alice can choose any of her cards with number greater than She chooses the card with integer and plays it Bob can choose any of his cards with number greater than He chooses a card with integer and plays it Alice can choose any of her cards with number greater than but she has no such cards so she loses Both Alice and Bob play You have to answer two questions who wins if Alice is the first player who wins if Bob is the first player ,Let the maximum card among all cards be If only one player has a card of value of then he she can win by playing it on the first turn or on the second turn the opponent won t be able to respond with any of their cards Otherwise if both players have a card with value the player who plays this card earlier wins the game So in this case the winner is the player who makes the first turn ,1
477,You are given a string consisting of small english letters In one move you can replace any character of this string to the next character in alphabetical order will be replaced with will be replaced with etc You cannot replace letter with any other letter Your target is to make some number of moves not necessary minimal to get string english alphabet as a subsequence Subsequence of the string is the string that is obtained by deleting characters at some positions You need to print the string that will be obtained from the given string and will be contain english alphabet as a subsequence or say that it is impossible ,We will use binary search to solve the problem Suppose we want to know if the answer is not less than Each array can be represented by a bit mask where the th bit is if the th element of the array is not less than or if the th element is less than If we want to verify that the answer is not less than we have to choose two arrays such that bitwise OR of their masks is Checking all pairs of arrays is too slow Instead we can treat the arrays represented by the same masks as equal so we will have no more than distinct arrays and we can iterate over pairs Overall the solution works in ,0
478,Grandma Laura came to the market to sell some apples During the day she sold all the apples she had But grandma is old so she forgot how many apples she had brought to the market She precisely remembers she had buyers and each of them bought exactly half of the apples she had at the moment of the purchase and also she gave a half of an apple to some of them as a gift if the number of apples at the moment of purchase was odd until she sold all the apples she had So each buyer took some integral positive number of apples but maybe he didn t pay for a half of an apple if the number of apples at the moment of the purchase was odd For each buyer grandma remembers if she gave a half of an apple as a gift or not The cost of an apple is the number is even Print the total money grandma should have at the end of the day to check if some buyers cheated her ,Let us simulate the process We store a set consisting of letters that Polycarp memorizes on one day Gradually dial the set If the size of exceeds we add to the day counter and clear ,0
479,Given the integer the number of available blocks You must use blocks to build a The consists of platforms for nd st and rd places respectively The platform for the st place must be higher than for the nd place and the platform for the nd place must be higher than for the rd place Also the height of each platform must be greater than zero that is each platform must contain at least one block Among all possible pedestals of blocks deduce one such that the platform height for the st place as possible If there are several of them output any of them ,In the constraints the problem can be solved by brute force we will go through the value for the height for the first place and then select suitable values for and Since we divide the remaining blocks equally between and If it turns out that then we try to decrease by and increase by 1 If we get the right answer output the heights and stop the process We will go through the value of in order of increasing ,1
480,The round carousel consists of figures of animals Figures are numbered from to in order of the carousel moving Thus after the th figure the figure with the number follows Each figure has its own type the type of the animal corresponding to this figure the horse the tiger and so on The type of animal of the th figure equals You want to color each figure in one of the colors You think that it s boring if the carousel contains two different figures with the distinct types of animals going one right after another and colored in the same color Your task is to color the figures in such a way that the number of distinct colors used is the minimum possible and there are no figures of the different types going one right after another and colored in the same color If you use exactly distinct colors then the colors of figures should be denoted with integers from to ,The answer to this problem is at most Let s prove it by construction Firstly if all are equal then the answer is Otherwise there are at least two different values in the array so the answer is at least If is even then the answer is always because you can color figures in the following way If is odd then consider two cases The first case is when some pair of adjacent figures have the same type Then the answer is because you can merge these two values into one and get the case of even Otherwise all pairs of adjacent figures have different types and if you consider this cyclic array as a graph cycle of length then you can notice that it isn t bipartite so you need at least colors to achieve the answer color all vertices in such a way that any two adjacent vertices have different colors And the answer looks like ,1
481,Polycarp has come up with a new game to play with you He calls it A missing bigram A of a word is a sequence of two adjacent letters in it For example word contains bigrams and The game goes as follows First Polycarp comes up with a word consisting only of lowercase letters a and b Then he writes down all its bigrams on a whiteboard After that he wipes one of them off the whiteboard Finally Polycarp invites you to guess what the word that he has come up with was Your goal is to find any word such that it s possible to write down all its bigrams and remove one of them so that the resulting sequence of bigrams is the same as the one Polycarp ended up with The tests are generated in such a way that the answer exists If there are multiple answers you can print any of them ,Consider a full sequence of bigrams for some word The first bigram consists of letters and of the word The second bigram consists of letters and The th bigram consists of letters and After one bigram is removed there becomes two adjacent bigrams such that one consists of letters and and the other consists of letters and Thus we can find the position of the removed bigram by looking for a pair of adjacent bigrams such that the second letter of the first one differs from the first letter of the second one If there is no such pair then the sequence of bigrams represents a valid word of length We can append it with any bigram that starts with the second letter of the last bigram to make it a valid word of length If there exists such a pair then all letters of the word can be recovered We can find the position of the removed bigram determine the letters it consisted of and insert it into the sequence After that we have a full sequence of bigrams and we can restore the word from it Overall complexity per testcase ,1
482,Little town Nsk consists of junctions connected by bidirectional roads Each road connects two distinct junctions and no two roads connect the same pair of junctions It is possible to get from any junction to any other junction by these roads The distance between two junctions is equal to the minimum possible number of roads on a path between them In order to improve the transportation system the city council asks mayor to build one new road The problem is that the mayor has just bought a wonderful new car and he really enjoys a ride from his home located near junction to work located near junction Thus he wants to build a new road in such a way that the distance between these two junctions won t decrease You are assigned a task to compute the number of pairs of junctions that are not connected by the road such that if the new road between these two junctions is built the distance between and won t decrease ,Let s use bfs to calculate the smallest distances to all vertices from the vertex and from the vertex These will be and for all is the the current smallest distance between and What you need is to iterate over all pairs and check if the edge between them doesn t exist and neither nor is smaller than Overall complexity ,1
483,The store sells items the price of the th item is The store s management is going to hold a promotion if a customer purchases at least items cheapest of them are free The management has not yet decided on the exact values of and Therefore they ask you to process queries for the given values of and determine the maximum total value of items received for free if a customer makes Note that all queries are independent they don t affect the store s stock ,First of all there is an answer with exactly items bought Suppose items worth were purchased Then by removing from this set the sum of the cheapest items in the set will change by which means the answer will not decrease The second fact that is necessary to solve the problem of the most expensive items should be chosen Otherwise one can remove the minimum price item from the set and add an item with a higher price it can always be found which means the answer will not decrease Using these two facts it is enough to sort the array and use prefix sums ,1
484,You have wooden staves The th stave has length You have to assemble barrels consisting of staves each you can use any staves to construct a barrel Each stave must belong to exactly one barrel Let volume of barrel be equal to the length of the stave in it You want to assemble exactly barrels with the maximal total sum of volumes But you have to make them so a difference between volumes of any pair of the resulting barrels must not exceed i e for any and Print maximal total sum of volumes of barrels or if it s impossible to satisfy the condition above ,At first sort all in non decreasing order Let be first position that if Then each barrel should have at least one stave from segment So if answer is Otherwise for each from to let s take no more than smallest staves from this segment in the th barrel but in such way that there are at least staves left for next barrels ,1
485,Monocarp plays a computer game There are different sets of armor and different weapons in this game If a character equips the th set of armor and wields the th weapon their power is usually equal to but some combinations of armor and weapons synergize well Formally there is a list of ordered pairs and if the pair belongs to this list the power of the character equipped with the th set of armor and wielding the th weapon is not but Initially Monocarp s character has got only the st armor set and the st weapon Monocarp can obtain a new weapon or a new set of armor in one hour If he wants to obtain the th armor set or the th weapon he must possess a combination of an armor set and a weapon that gets his power to Of course after Monocarp obtains a weapon or an armor set he can use it to obtain new armor sets or weapons but he can go with any of the older armor sets and or weapons as well Monocarp wants to obtain the th armor set the th weapon What is the minimum number of hours he has to spend on it ,Among two armor sets one with the greater index is always better The same can be said about two different weapons So it is always optimal to use and obtain the best possible weapon or armor This observation allows us to model this problem with dynamic programming or shortest paths let be the minimum time in which Monocarp can obtain the armor and the weapon and in each transition we either get the best weapon we can or the best armor we can Similarly we can build a graph where the vertices represent these pairs and the edges represent getting the best possible weapon armor and find the shortest path from to using BFS Unfortunately it is But we can modify the BFS in the following fashion let s analyze each layer of BFS a layer is a set of vertices with the same distance from the origin In each layer there might be some redundant vertices if two vertices and belong to the same layer and then the vertex is redundant If we filter each layer removing all redundant vertices from it and continuing BFS only from non redundant ones the solution will be fast enough To prove it let s analyze the constraints on the answer Suppose The answer can be bounded as since we can reach the pair in steps using something similar to Fibonacci sequence building and then go from to in steps And the number of non redundant states on each layer is not greater than because of two states with the same weapon or the same armor set at least one is redundant So if we don t continue BFS from redundant vertices it will visit at most vertices There might be another logarithm in the asymptotic complexity of the solution if you use something like a set to store all combinations that synergize well but this implementation is still fast enough ,1
486,The store sells items the price of the th item is The store s management is going to hold a promotion if a customer purchases at least items cheapest of them are free The management has not yet decided on the exact values of and Therefore they ask you to process queries for the given values of and determine the maximum total value of items received for free if a customer makes Note that all queries are independent they don t affect the store s stock ,Firstly sort all the strings by their lengths if there are several strings of the same length their order does not matter because if the answer is then all the strings of the same length should be equal Then for each check that is a substring of If it doesn t hold for some then the answer is Otherwise the answer is and the sorted array is the correct order of strings ,0
487,For a sequence of integers let s define its as follows Process the sequence from the first element to the last one maintaining the list of its subsequences When you process the element append it to the end of the subsequence in the list such that the bitwise AND of its last element and is greater than If there is no such subsequence in the list create a new subsequence with only one element and append it to the end of the list of subsequences For example let s analyze the decomposition of the sequence processing element the list of subsequences is empty There is no subsequence to append to so we create a new subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is There is no subsequence to append to so we create a new subsequence processing element the list of subsequences is There is no subsequence to append to so we create a new subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is Since the bitwise AND of and is the element is appended to the first subsequence processing element the list of subsequences is The element cannot be appended to any of the first two subsequences but can be appended to the third one The resulting list of subsequences is Let be the number of subsequences the sequence is decomposed into You are given a sequence where each element is an integer from to Let be the sequence You have to calculate ,Let s assume that we don t have any zeroes in our array We ll deal with them later The key observation is that the number of sequences in the decomposition is not more than To prove this we can use the fact that each element will be appended to the first subsequence in the decomposition so if the second third subsequence in the decomposition ends with the number or all such numbers can be appended to that subsequence thus they won t create any new subsequences So if we consider the combination of the last elements in the subsequences of the decomposition there are only such combinations even less in practice Okay now let s try to use the fact that the number of such combinations is small There are many ways to abuse it but in my opinion the most straightforward one and also a bit slow but fast enough to easily pass the time limit is to run the following dynamic programming where is the index of the element we are processing and is the vector representing the combination of last elements of subsequences in the decomposition But it s not clear what do we store in this dynamic programming The model solution stores i e we will consider the number of subsequences added while processing the elements So our dynamic programming automatically sums up the answers for all possible right borders of the segment we decompose Transitions in this dynamic programming is easy we need to see how does the element alter the state of decomposition let it change it to take the value of and if the element forms a new subsequence let s account for it by increasing by because this increase will affect different right endpoints of the segment we decompose And now it s easy to see how to add zeroes to our solution We can just assume they don t change the state of decomposition they simply add a new subsequence which won t take any other elements So in our transitions processing means that but the size of decomposition increases To actually get the answer to the problem we need to consider all possible starting points of the segment so we sum up where is the empty vector for all ,1
488,There are pillars aligned in a row and numbered from to Initially each pillar contains exactly one disk The th pillar contains a disk having radius You can move these disks from one pillar to another You can take a disk from pillar and place it on top of pillar if all these conditions are met there is no other pillar between pillars and Formally it means that pillar contains one disk either pillar contains no disks or the topmost disk on pillar has radius strictly greater than the radius of the disk you move When you place a disk on a pillar that already has some disks on it you put the new disk on top of previously placed disks so the new disk will be used to check the third condition if you try to place another disk on the same pillar You may take any disk and place it on other pillar any number of times provided that every time you do it all three aforementioned conditions are met Now you wonder is it possible to place all disks on the same pillar simultaneously ,Suppose we have a disk that is smaller than both of its neighbours Then it s impossible to collect all the disks on the same pillar eventually we will put this disk on the same pillar with one of its neighbours and then we can t put the other neighbouring disk on the same pillar since it is greater than the middle disk Okay and what if there is no disk that is strictly smaller than both of its neighbours Let k be the index of the largest disk a k 1 a k that implies a k 2 a k 1 and so on a k 1 a k a k 2 a k 1 and so on It means that the array a is sorted in ascending until the index k and after that it is sorted in descending order If this condition is met then we can collect all the disks on the pillar k one by one starting with the disk having radius n 1 and ending with the disk having radius 1 So the only thing that we need to check is the following condition array a is sorted in ascending order until a k n and then it is sorted in descending order ,1
489,Today you are going to lead a group of elven archers to defend the castle that is attacked by an army of angry orcs Three sides of the castle are protected by impassable mountains and the remaining side is occupied by a long wall that is split into sections At this moment there are exactly archers located at the th section of this wall You know that archer who stands at section can shoot orcs that attack section located at distance not exceeding that is all such sections that In particular means that archers are only capable of shooting at orcs who attack section Denote as of section the total number of archers who can shoot at the orcs attacking this section of the defense plan is the minimum value of defense level of individual wall section There is a little time left till the attack so you can t redistribute archers that are already located at the wall However there is a reserve of archers that you can distribute among wall sections in arbitrary way You would like to achieve maximum possible reliability of the defence plan ,We can first compute all values of Since we only care about the maximum such value within our segment we can use div conquer to solve every segment In particular if we know the index of the maximum value in we know that any segment crossing this index has this value as its maximum We can thus solve all segments crossing this maximum and recurse on the left and right sides To find the best crossing segment note that each problem contributes a value of We can independently find the largest sum starting from our crossing index going left and the largest sum going right and add these two together for the best overall crossing segment Unfortunately since we can t guarantee that the maximum indices will divide our interval nicely in half this does not lead to the usual runtime of div conquer but is instead in the worst case To improve on this we can precompute partial sums of and use RMQ to find the minimum sum left of the crossing index and the maximum sum right of the crossing index This reduces the crossing computation from per index to or giving an overall runtime of Code 49036431 ,0
490,Vasya owns three big integers Let s define a partition of such a sequence of strings that where is a concatanation of strings is the th element of the partition For example number has the following partitions and lots of others Let s call some partition of if each of its elements Vasya want to know the number of partitions of number which has each of satisfy the condition Note that the comparison is the integer comparison not the string one Help Vasya to count the amount of partitions of number such that they match all the given requirements The result can be rather big so print it modulo ,Let s use dynamic programming to solve the problem Let be the number of correct partitions for the long integer It s easy to see that if we have two big integers without leading zeroes we know the lengths of these integers and these lengths are not equal then we can determine which integer is greater in We will calculate the answers in the following order Suppose we want to calculate Let be the minimum position such that the number meets the following condition Let be the maximum position such that the number meets the following condition Initially let s consider will be less if will be less if To determine which of the numbers and is greater let s calculate z function for the string where is any character that doesn t occur in and After calculating z function we can easily find the first non equal character in and and this character will determine which number is greater To compare and we can act the same All that s left is to set to the sum of values from to This can be done by maintaining suffix sums There is a corner case which applies when If then because we cannot afford any leading zeroes Otherwise ,1
491,You are playing another computer game and now you have to slay monsters These monsters are standing in a circle numbered clockwise from to Initially the th monster has health You may shoot the monsters to kill them Each shot requires exactly one bullet and decreases the health of the targeted monster by deals damage to it Furthermore when the health of some monster becomes or less than it dies and explodes dealing damage to the next monster monster if or monster if If the next monster is already dead then nothing happens If the explosion kills the next monster it explodes too damaging the monster after it and possibly triggering another explosion and so on You have to calculate the minimum number of bullets you have to fire to kill all monsters in the circle ,If we want to destroy the largest and smallest stone then there are only four options Destroy the stones on the left until we destroy the smallest stone Then destroy the stones on the right until we destroy the largest stone Destroy the stones on the right until we destroy the smallest stone Then destroy the stones on the left until we destroy the largest stone Destroy the stones on the left until we destroy both stones Destroy the stones on the right until we destroy both stones You need to check all four options and choose the minimum answer ,0
492,Ivan has a robot which is situated on an infinite grid Initially the robot is standing in the starting cell The robot can process commands There are four types of commands it can perform move from the cell to move from to move from to move from to Ivan entered a sequence of commands and the robot processed it After this sequence the robot ended up in the starting cell but Ivan doubts that the sequence is such that after performing it correctly the robot ends up in the same cell He thinks that some commands were ignored by robot To acknowledge whether the robot is severely bugged he needs to calculate the maximum possible number of commands that were performed correctly Help Ivan to do the calculations ,At first let s calculate the matrix of size Let will denote the maximum length of the prefix of which equals to the suffix of the prefix of of length with the additional character if and otherwise In other words is denote which maximum length of the prefix of we can reach if now we have the prefix of of length and want to add the character if and otherwise and only one possible move is to remove characters from the beginning of this prefix with an additional character This matrix can be easily calculated in without any dynamic programming It can be also calculated in using prefix function and dynamic programming Now let s calculate the following dynamic programming It means that now we have gained characters of the regular bracket sequence the balance of this sequence is the last characters of the gained prefix is the prefix of of length and equals to if we obtain the full string at least once and otherwise The stored value of the is the number of ways to reach this state Initially all other values equal The following recurrence works try to add to the current prefix character if the current balance is less than then we will move to the state is the length of and is operation if at least one is true then the result is true Let s add to the number of ways to reach the destination state the number of ways to reach the current state The same with the character Try to add to the current prefix character if the current balance is greater than then we will move to the state Also add to the number of ways to reach the destination state the number of ways to reach the current state After calculating this dynamic programming the answer is Time complexity is ,0
493,You are given string of length consisting of s and s You build an infinite string as a concatenation of an infinite number of strings or For example if then Calculate the number of prefixes of with equal to The balance of some string is equal to where is the number of occurrences of in and is the number of occurrences of in The number of such prefixes can be infinite if it is so you must say that A prefix is a string consisting of several first letters of a given string without any reorders An empty prefix is also a valid prefix For example the string abcd has 5 prefixes empty string a ab abc and abcd ,First of all let s try to find the best strategy to play minions All minions should be summoned if someone is not summoned summoning and deleting it won t make the answer worse the resulting number of minions should be exactly if it is less then we didn t need to delete the last deleted minion Furthermore if some minion should be deleted we can delete it just after it is summoned All these greedy ideas lead to the following structure of the answer we choose minions and summon them in some order we choose minions which will be summoned and instantly deleted we summon the remaining minion Let s analyze how these minions affect the answer The first minion has power and does not give bonus to anyone the second one has power and gives bonus to one minion and so on the th minion from the first group adds to the answer Minions from the second group buff minions each so they add to the answer and the last minion adds Let s unite the first group and the last minion then we will have two groups of minions those which are destroyed the second group and those which are not destroyed the first group From there we will have two possible ways to finish the solution there are minions and positions for them and for each pair minion position we may calculate the value this pair adds to the answer After that we should assign each monster a position in such a way that each position is chosen exactly once and the sum of values is maximized It can be done with mincost flows or Hungarian algorithm the minions from the first group should be played in non descending order of their Let s sort all minions by and write the following dynamic programming is the maximum answer if we considered first minions and of them were assigned to the first group Since the minions are sorted by whenever we add a minion to the first group it should add exactly to the answer and increase by and if a minion is added to the second group the answer is increased by ,0
494,You are playing a computer card game called Splay the Sire Currently you are struggling to defeat the final boss of the game The boss battle consists of turns During each turn you will get several cards Each card has two parameters its cost and damage You may play some of your cards during each turn in some sequence you choose the cards and the exact order they are played as long as After playing some possibly zero cards you end your turn and Note that you can use each card Your character has also found an artifact that boosts the damage of some of your actions every th card you play deals double damage What is the maximum possible damage you can deal during turns ,The answer is only if all have the same parity i e all are odd or all are even That s because placing the block doesn t change the parity of the element and the operation changes the parity of all elements in the array ,0
495,Berland SU holds yet another training contest for its students today students came each of them brought his laptop However it turned out that everyone has forgot their chargers Let students be numbered from to Laptop of the th student has charge at the beginning of the contest and it uses of charge per minute i e if the laptop has charge at the beginning of some minute it becomes charge at the beginning of the next minute The whole contest lasts for minutes Polycarp the coach of Berland SU decided to buy a charger so that all the students would be able to successfully finish the contest He buys the charger at the same moment the contest starts Polycarp can choose to buy the charger with any non negative zero or positive integer power output The power output is chosen before the purchase it can t be changed afterwards Let the chosen power output be from the minute contest starts to the last minute of the contest he can plug the charger into any of the student s laptops and use it for some number of minutes If the laptop is using charge per minute then it will become per minute while the charger is plugged in Negative power usage rate means that the laptop s charge is increasing The charge of any laptop isn t limited it can become infinitely large The charger can be plugged in no more than one laptop at the same time The student successfully finishes the contest if the charge of his laptop never is below zero at the beginning of some minute from the minute contest starts to the last minute of the contest zero charge is allowed The charge of the laptop of the minute the contest ends doesn t matter Help Polycarp to determine the minimal possible power output the charger should have so that all the students are able to successfully finish the contest Also report if no such charger exists ,The easiest part of the solution is to notice that if the charger of power works then the charger of power also works Thus binary search is applicable to the problem is really small and only one laptop can be charged during some minute It implies that check function can work in something polynomial on by searching for the right laptop to charge during every minute I claim that the greedy algorithm works Find the laptop that gets his charge below zero the first Charge it for one minute as early as possible Repeat until you either don t have time to charge the laptop check returns false or the contest is over check returns true Why greedy works Well check any case where check returns false If some laptop runs out of power then all the minutes up to the current one are used to charge something Moreover you can free no minute of these as by doing greedy we charged all laptops as late as possible Freeing some minute will lead to other laptop dying earlier One way to implement this is the following Keep a heap of events pop its head add to it if the time is greater than the number of charges already made and push it back to heap That will simulate the entire process in Unfortunately this may be too slow on some implementations Let s try the following linear approach Maintain not the heap but such an array that th its cell contains all indices of all the laptops to run out of charge on the beginning of minute Keep an iterator to the first non empty position Pop a single index out of this vector charge it and push it to the new position You ll still make steps and on each step you ll make instant operations That will make it for this simulation I m not really sure how to build the maximal answer case however I can estimate the upper bound of binary search You can set in such a way that it charges every laptop in one minute so that it won t run out of power until the end of the contest Choose the smallest the greatest the greatest and you ll end up with total usage Thus will always be enough Overall complexity or if you are skillful enough to squeeze it D ,1
496,A string of length is called iff is even and for each Ivan has a string consisting of lowercase Latin letters is even He wants to form some string that will be an permutation of Also Ivan has denoted the of index as and the of as the sum of among all indices such that Help Ivan to determine maximum possible of he can get ,This problem has two different solutions a mincost maxflow approach and a greedy one We will tell you about the latter First of all let Then find all pairs of indices such that let the number of these pairs be It s obvious that we have to replace at least one letter in each of these pairs For each of these pairs let s replace the letter with lower with something Let s analyze the letters we are going to replace Let be the number of occurences of letter that we have to replace There are two cases There is no letter such that Then we can replace these letters without involving anything else and get an antipalindromic string with minimal possible cost There is a letter such that It s obvious that there is at most one such letter Let s replace some occurences of with other letters that are to be replaced Then we will still have some occurences of that need to be replaced Let s take one letter from each pair such that both of letters in a pair are not equal to Among these possibilities choose the required number of letters with minimum values of Then we can replace remaining occurences of with these letters ,1
497,There are two towers consisting of blocks of two colors red and blue Both towers are represented by strings of characters and or denoting the order of blocks in them where corresponds to a blue block and corresponds to a red block You can perform the following operation any number of times choose a tower with and move its block to the of the other tower The pair of towers is if no pair of touching blocks has the same color i e no red block stands on top of another red block and no blue block stands on top of another blue block You have to check if it is possible to perform any number of operations possibly zero to make the pair of towers beautiful ,Note that it does not make sense to move several blocks first from the left tower to the right and then from the right to the left since this is similar to canceling the last actions Using the fact described above and small restrictions on the input data one of the possible solutions is the following choose which tower will be the one where we take blocks from try both options iterate over the number of operations and then check that both towers are beautiful after that number of operations There is a faster solution move all the blocks to the left tower and then check that there is no more than one pair of adjacent blocks of the same color If there are no such pairs then we can divide the tower into two in an arbitrary way and if there is exactly one pair then we need to make a cut exactly between two blocks of the same color Otherwise there will always be a pair of adjacent blocks of the same color in one of the towers ,1
498,A tea manufacturer decided to conduct a massive tea tasting sorts of tea will be tasted by tasters Both the sorts of tea and the tasters are numbered from to The manufacturer prepared milliliters of the th sort of tea The th taster can drink milliliters of tea at once The tasting will be conducted in steps During the first step the th taster tastes the th sort of tea The th taster drinks tea how much is available of the th sort and how much the th taster can drink also decreases by this amount Then all tasters move to the previous sort of tea Thus during the second step the th taster tastes the st sort of tea The th taster drinks tea The st person ends the tasting During the third step the th taster tastes the nd sort of tea The nd taster ends the tasting This goes on until everyone ends the tasting Take a look at the tasting process for In the left row there are the current amounts of each sort of tea In the right column there are current amounts of tea each taster has drunk in total The arrow tells which taster each tea goes to on the current step The number on the arrow is the amount minimum of how much is available of the sort of tea and how much the taster can drink For each taster print how many milliliters of tea he she will drink in total ,Consider how each sort of tea affects the tasters The th sort makes testers for some drink to their limit and the th taster drink the remaining tea Sometimes there is no such th taster but we ll explore the general case Let s add the remaining tea straight to the th taster answer And for each taster from to we ll add into the value denoting how many times they drank at their limit If we have these calculated we can obtain the answer by adding and In order to find we can use prefix sums Build over the sequence Now you want to find the largest such that Rewrite it as You can do this with a binary search In particular with an upper bound call The amount of the remaining tea can also be calculated from prefix sums To add on a range you can use a technique called delta encoding Add to Subtract from After everything is added propagate this values via a prefix sum This way if both and happened non strictly to the left or strictly to the right of it doesn t affect at all the segment either closes before or opens after Otherwise it adds exactly to Overall complexity per testcase ,1
499,You are given a decimal representation of an integer without leading zeros You have to perform the following reduction on it take two neighboring digits in and replace them with their sum without leading zeros if the sum is it s represented as a single For example if the possible reductions are choose the first and the second digits and replace them with the result is choose the second and the third digits and replace them with the result is also choose the third and the fourth digits and replace them with the result is still choose the fourth and the fifth digits and replace them with the result is What s the largest number that can be obtained ,Let s think how a reduction changes the length of There are two cases If two adjacent letters sum up to or greater then the length doesn t change Otherwise the length decreases by one Obviously if there exists a reduction that doesn t change the length then it s better to use it Which among such reduction should you choose Well notice that such a reduction always makes the number strictly smaller easy to see with some case analysis Thus the logical conclusion is to leave the longest possible prefix of untouched So the rightmost such reduction will change the number as little as possible If all reductions decrease the length then a similar argument can be applied The sum will be a single digit but a digit that is greater than or equal to the left one of the adjacent pair If it was just greater it s easy to see that the leftmost such reduction will make the number the largest possible The equal case adds more case analysis on top of the proof but the conclusion remains the same the leftmost reduction is the best one As an implementation note since all the reductions are of the same type the leftmost reduction always includes the first and the second digits Overall complexity per testcase ,1
500,You are playing a computer card game called Splay the Sire Currently you are struggling to defeat the final boss of the game The boss battle consists of turns During each turn you will get several cards Each card has two parameters its cost and damage You may play some of your cards during each turn in some sequence you choose the cards and the exact order they are played as long as After playing some possibly zero cards you end your turn and Note that you can use each card Your character has also found an artifact that boosts the damage of some of your actions every th card you play deals double damage What is the maximum possible damage you can deal during turns ,The first and crucial observation is that we don t need all the cards that we get during each turn In fact since the total cost is limited to we may leave three best cards of cost one best card of cost and one best card of cost and all other cards may be discarded So the problem is reduced we get only cards each turn The problem may be solved with dynamic programming is the maximum damage we may deal if we played turns and the last card we played had remainder modulo Processing each turn may be done with auxiliary dp the maximum damage we can deal during the turn if we play cards and denotes whether some card there will be only one such card obviously deals double damage To calculate this auxiliary dp we may do almost anything since we are limited to cards during each turn It is possible to calculate it in a fast way using some casework but it is easier for example to try all possible permutations of cards and play some prefix of a fixed permutation By combining these two techniques we get a solution ,1
501,You are given a permutation consisting of numbers a permutation is an array in which each element from to occurs exactly once You can perform the following operation choose some subarray contiguous subsegment of and rearrange the elements in it in any way you want But this operation cannot be applied to the whole array For example if and we want to apply the operation to the subarray the subarray containing all elements from the nd to the th then after the operation the array can become or for example Your task is to calculate the minimum number of operations described above to sort the permutation in ascending order ,To solve the problem it is enough to consider several cases if the array is already sorted the answer is if or then you can sort the array in one operation by selecting the subarray or if and you can perform the sequence of operations and and sort the array on each of them you can t do it faster since you can t move both to position and to position in only operations otherwise the array can be sorted in operations ,1
502,Authors have come up with the string consisting of lowercase Latin letters You are given two permutations of its indices not necessary equal and both of length Recall that the permutation is the array of length which contains each integer from to exactly once For all from to the following properties hold and It means that if you will write down all characters of in order of permutation indices the resulting string will be sorted in the non decreasing order Your task is to restore such string of length consisting of which suits the given permutations If there are multiple answers you can print any of them ,Let s assume that the rows are numbered from to from top to bottom and columns are numbered from to from left to right If there is no robot in the cell initially we have to perform several moves up and or left If the first row with at least one robot is the th row then we can make at most steps up and we should do at least steps up since otherwise there will me no robot in the upper row Similarly if the first column with at least one robot is the th column then we can make at most steps to the left and we should do at least steps to the left since otherwise there will me no robot in the leftmost column Now there are two possible solutions both starting with finding and we afterwards either simulate moves up and moves to the left and check that everything is fine or just check that there is a robot in the cell since only this robot can end up in ,0
503,Ivan is playing yet another roguelike computer game He controls a single hero in the game The hero has equipment slots There is a list of items for the th slot the th of them increases the hero strength by The items for each slot are pairwise distinct and are listed in the increasing order of their strength increase So For each slot Ivan chooses exactly one item Let the chosen item for the th slot be the th item in the corresponding list The sequence of choices is called The strength of a build is the sum of the strength increases of the items in it Some builds are banned from the game There is a list of pairwise distinct banned builds It s guaranteed that there s at least one build that s not banned What is the build with the maximum strength that is not banned from the game If there are multiple builds with maximum strength print any of them ,This problem has two different solutions a mincost maxflow approach and a greedy one We will tell you about the latter First of all let Then find all pairs of indices such that let the number of these pairs be It s obvious that we have to replace at least one letter in each of these pairs For each of these pairs let s replace the letter with lower with something Let s analyze the letters we are going to replace Let be the number of occurences of letter that we have to replace There are two cases There is no letter such that Then we can replace these letters without involving anything else and get an antipalindromic string with minimal possible cost There is a letter such that It s obvious that there is at most one such letter Let s replace some occurences of with other letters that are to be replaced Then we will still have some occurences of that need to be replaced Let s take one letter from each pair such that both of letters in a pair are not equal to Among these possibilities choose the required number of letters with minimum values of Then we can replace remaining occurences of with these letters ,0
504,You are given a permutation You should answer queries Each query is a pair and you should calculate Let s denote as the position of the maximum in subsegment Then if or otherwise ,Let s denote and analogically Then we can note that So we can switch to calculating and Let s be the closest from the left to element such that To calculate we will look from the other side we will look at it as the sum of lengths of segments induced by each element from Each element will add to value equal to or a piecewise linear function if we look at as a variable And is a value of a sum of linear functions induced by in a point To process it efficiently we can one by one add induced linear functions to the corresponding subsegments using BIT or Segment Tree and if we ve added functions induced by we can calculate answer for all queries which looks like To calculate we can just reverse array and all queries Result time complexity is Note that it s still works quite slow so you should use fast data structures like BIT of iterative segment tree ,1
505,Alice and Bob want to play a game They have colored paper strips the th strip is divided into cells numbered from to Each cell can have one of colors In the beginning of the game Alice and Bob put chips the th chip is put in the th cell of the th strip Then they take turns Alice is first Each player during their turn has to choose one chip and move it or cells backwards i e if the current cell is then the chip can be moved to the cell or There are two restrictions the chip cannot leave the borders of the strip for example if the current cell is then you can t move the chip cells backwards and some moves may be prohibited because of color of the current cell a matrix with size is given where if it is possible to move the chip cells backwards from the cell which has color or if such move is prohibited The player who cannot make a move loses the game Initially some cells may be uncolored Bob can color all uncolored cells as he wants but he cannot leave any cell uncolored Let s call a coloring if Bob can win the game no matter how Alice acts if the cells are colored according to this coloring Two colorings are different if at least one cell is colored in different colors in these two colorings Bob wants you to calculate the number of good colorings Can you do it for him Since the answer can be really large you have to print it modulo ,Suppose there is only one strip and we want to count the number of ways to paint it We can do it with some dynamic programming let dp i r 1 r 2 r 3 be the number of ways to paint first i cells of the strip so that r 1 denotes the result of the game if it starts in the last cell r 1 0 if the player that makes a turn from this state loses or r 1 1 if he wins r 2 the result if the game starts in the second to last and so on Then if we paint the next cell we can easily determine the result of the game starting in it using the values of r i and the set of possible moves if there is a value r i 0 such that we can move the chip i cells backwards from the cell we just painted then that cell is a winning one if the game starts in it the first player wins otherwise it is a losing one This dynamic programming works too slow since the strip can be very long but we can skip long uncolored segments converting the transitions of this dp into matrix vector multiplication each possible combination of values of r 1 r 2 r 3 can be encoded as a number from 0 to 7 and we may construct a 8 times 8 transition matrix T T i j will be equal to the number of ways to color one cell so that the previous values of r 1 r 2 r 3 have code i and the next values have code j To model painting k consecutive uncolored segments we may compute T k with fast exponentiation method Now we can solve the problem for one strip What changes if we try to apply the same method to solve the problem with many strips Unfortunately we can t analyze each cell as winning or losing now we need more information When solving a problem related to a combination of acyclic games we may use Sprague Grundy theory you can read about it here https cp algorithms com game theory sprague grundy nim html Instead of marking each cell as winning or losing we can analyze the Grundy value of each cell When considering a strip we should count the number of ways to color it so that its Grundy is exactly x we should do it for every possible value of x which can help us to solve the initial problem with the following dynamic programming z i j is the number of ways to color i first strips so that the Grundy value of their combination is exactly j The only thing that s left to consider is how do we count the number of ways to color a single strip so that its Grundy value is fixed We can to it by modifying the method described in the first paragraph let dp i r 1 r 2 r 3 be the number of ways to paint i first cells so that the Grundy value of the last cell is r 1 the value of the previous to last cell is r 2 and so on Since we have only 3 possible moves the Grundy values are limited to 3 and each possible combination of values of r 1 r 2 r 3 can be encoded as a number from 0 to 63 The transition matrix T that allows us to skip long uncolored segments will be a 64 times 64 one so if we will just exponentiate it every time we want to skip a segment we ll get TL but we can optimize it by precalculating T T 2 T 4 T 2 30 and using matrix vector multiplication instead of matrix matrix multiplication every time we skip an uncolored segment ,1
506,You are given three integers and Find two positive integers and such that the decimal representation of without leading zeroes consists of digits the decimal representation of without leading zeroes consists of digits the decimal representation of without leading zeroes consists of digits denotes the greatest common divisor GCD of integers and Output and If there are multiple answers output any of them ,This is pretty typical problem on greedy construction you are asked to build lexicographically maximal string In the majority of cases it s done like this Imagine you ve built some prefix of length with all numbers equal to the prefix of length of the original string You are also sure there exists some suffix for it that will give proper beautiful number Now you have two options you either put if possible and proceed to the same task of longer prefix or you put the smaller number and fill the entire suffix with the maximum possible beautiful number you can obtain Now you should learn how to check if any valid suffix exists It means at least the smallest possible beautiful number with current prefix is smaller than It s built like this Let be the number of digits which currently have odd number of occurences You put all zeroes but the last digits and then output these odd occurence number digits in increasing order The first part can be checked with partial sums on the number of zeroes on segment in the original string and the second part has its length not greater than and can be checked naively Overall complexity ,0
507,You are given one dimensional segments each segment is denoted by two integers its endpoints Let s define the function as the number of segments covering point a segment covers the point if where is the left endpoint and is the right endpoint of the segment An integer point is called if it belongs to more segments than any other integer point i e is true for any other integer point You are given an integer Your task is to determine whether it is possible to remove some possibly zero segments so that the given point becomes ,First of all let s delete all segments that do not cover the point because they increase the value of the function at points other than If there are no segments left then the answer is Otherwise all segments cover the point And it remains to check whether the point is the only point which is covered by all segments Note that it does not make sense to delete any of the remaining segments because if there are several points with maximum value of then deleting segments can only increase their number To check the number of points with the maximum value of you can iterate over from to and calculate because of the small number of segments in the problem A faster way is to check the size of the intersection of all segments The left boundary of the intersection is and the right boundary is if then the point is ideal otherwise it is not ,1
508,Professor GukiZ has two arrays of integers and Professor wants to make the sum of the elements in the array as close as possible to the sum of the elements in the array So he wants to minimize the value In one operation professor can swap some element from the array and some element from the array For example if the array is and the array is professor can swap the element from the array and the element from the array and get the new array and the new array Professor doesn t want to make more than two swaps Find the minimal value and some sequence of no more than two swaps that will lead to the such value Professor makes swaps one by one each new swap he makes with the new arrays and ,In this problem we can use a binary search for the answer If we can make sets then we can make sets So we need to come up with the following test whether we can make sets knowing the parameters Let otherwise we will swap them If the answer is Otherwise let s say we want to make sets of the first kind Then we get a system of inequalities Let s express from here We need to check whether these four equations have an intersection in integers If there is then the division into gifts exists ,0
509,A permutation of size is an array of size such that each integer from to occurs exactly once in this array An inversion in a permutation is a pair of indices such that and For example a permutation contains inversions You are given a permutation of size However the numbers on some positions are replaced by Let the valid permutation be such a replacement of in this sequence back to numbers from to in such a way that the resulting sequence is a permutation of size The given sequence was turned into a valid permutation randomly with the equal probability of getting each valid permutation Calculate the expected total number of inversions in the resulting valid permutation It can be shown that it is in the form of where and are non negative integers and Report the value of ,Let s run dfs on the tree and write out the vertices in order of their visisiting by dfs that permutation is called Euler walk Easy to see that subtree of any vertex is a subsegment of that permutation Note that the number of different colours is so we can store the set of colours just as mask of binary bits in bit type long long in C long in Java Let s build the segment tree over the permutation which supports two operations paint subsegment by some colour and find the mask of colours of some segment ,0
510,You are given a graph with vertices each pair of vertices in have both directed edges and there are no self loops You should find such a cycle in that visits every directed edge exactly once allowing for revisiting vertices We can write such cycle as a list of vertices a visiting order where each occurs exactly once Find the such cycle It s not hard to prove that the cycle always exists Since the answer can be too large print its segment in other words ,The solution of the problem can be found clearly in constructive way An example for 1 2 1 3 1 4 1 5 2 3 2 4 2 5 3 4 3 5 4 5 1 where brackets mean that we call here some recursive function Since on each level of recursion we have only elements and there levels then the generation of the certificate is quite easy if on the currect level of recursion we can skip the whole part let s just skip it Otherwise let s build this part Anyway the built part of the cycle will have only length so the whole algorithm has complexity The answer is lexicographically minimum by the construction since on each level of recursion there is no way to build lexicographically smaller sequence ,1
511,You have students under your control and you have to compose consisting of some subset of your students Each student had his own skill the th student skill is denoted by an integer different students can have the same skills So about the teams Firstly these two teams should have the same size Two more constraints The first team should consist of students with skills i e all skills in the first team are unique The second team should consist of students with skills i e all skills in the second team are equal Note that it is permissible that some student of the first team has the same skill as a student of the second team Consider some examples skills are given is not a good pair of teams because sizes should be the same is not a good pair of teams because the first team should not contain students with the same skills is not a good pair of teams because the second team should contain students with the same skills is a good pair of teams is a good pair of teams Your task is to find the maximum possible size for which it is possible to compose a valid pair of teams where each team size is skills in the first team needed to be unique skills in the second team should be the same between them A student cannot be part of more than one team You have to answer independent test cases ,Let the number of students with the skill is and the number of different skills is Then the size of the first team can not exceed and the size of the second team can not exceed So the answer is not greater than the minimum of these two values Moreover let s take a look at the skill with a maximum value of Then there are two cases all students with this skill go to the second team then the sizes of teams are at most and correspondingly Otherwise at least one student with this skill goes to the first team and the sizes are at most and correspondingly So the answer is Time complexity ,1
512,Alice and Bob want to play a game They have colored paper strips the th strip is divided into cells numbered from to Each cell can have one of colors In the beginning of the game Alice and Bob put chips the th chip is put in the th cell of the th strip Then they take turns Alice is first Each player during their turn has to choose one chip and move it or cells backwards i e if the current cell is then the chip can be moved to the cell or There are two restrictions the chip cannot leave the borders of the strip for example if the current cell is then you can t move the chip cells backwards and some moves may be prohibited because of color of the current cell a matrix with size is given where if it is possible to move the chip cells backwards from the cell which has color or if such move is prohibited The player who cannot make a move loses the game Initially some cells may be uncolored Bob can color all uncolored cells as he wants but he cannot leave any cell uncolored Let s call a coloring if Bob can win the game no matter how Alice acts if the cells are colored according to this coloring Two colorings are different if at least one cell is colored in different colors in these two colorings Bob wants you to calculate the number of good colorings Can you do it for him Since the answer can be really large you have to print it modulo ,As usual with tasks on an expected value let s denote as indicator function if and otherwise Then we can note that Now we can make some transformations Now we d like to make some casework if and aren t consecutive then and are independent that s why if then need further investigation For the simplicity let s transform segment to by increasing Let s denote as the probability that and Let s denote In result The final observation is the following is equal to the probability that and and can be calculated by inclusion exclusion principle where In result and can be calculated in time ,0
513,Monocarp and Polycarp are playing a computer game This game features bosses for the playing to kill numbered from to They will fight boss the following way Monocarp makes attempts to kill the boss Polycarp makes attempts to kill the boss Monocarp makes attempts to kill the boss Polycarp makes attempts to kill the boss Monocarp kills the th boss on th attempt Polycarp kills the th boss on th attempt After one of them kills the th boss they move on to the st boss The attempt counters reset for both of them Once one of them kills the th boss the game ends Find all values of from to such that Monocarp kills ,Let s introduce the dynamics if on the prefix the answer is Then in this sequence the numbers corresponding to the sizes of the segments from the partition into subsegments will be called A number at position in the sequence if it is is either to the right or to the left of the segment If it is to the left of the segment it can only be interesting if Then If it is on the right side of the segment then if then The answer for the whole sequence is if ,0
514,The girl Taylor has a beautiful calendar for the year In the calendar all days are given with their days of week Monday Tuesday Wednesday Thursday Friday Saturday and Sunday The calendar is so beautiful that she wants to know what is the next year after when the calendar will be exactly the same Help Taylor to find that year Note that leap years has days The year is leap if it is divisible by or it is divisible by but not by https en wikipedia org wiki Leap year ,Suppose we ve built the graph and chosen any simple cycle Due to the nature of the graph any simple cycle right part is part of one of the chains So let s for each chain calculate the longest simple path with its right part on this chain and denote it as Obviously Now let s look at chain If we go along the cycle in both ways we will step to vertices and of the previous chain If then we closed cycle and it s the only possible cycle so Otherwise we can either go from and and meet each other closing the cycle with part of the th chain between th and th vertices this part has edges and our cycle will have length But if we decide to go in different ways then we will meet the first and the last vertices of the th chain After that we ll go to the th and the th vertices of th chain and will make almost the same choice But instead of recurrently solving the same problem we can note that in fact we took a cycle that ends at the th chain erased the part between vertices and and merged it with our th chain part so the length of this merged cycle will be equal to Since we maximize we just choose what part or is longer and take it As a result we can iterate from left to right calculate all and print the maximum among them ,0
515, children are standing in a circle and playing the counting out game Children are numbered clockwise from to In the beginning the first child is considered the leader The game is played in steps In the th step the leader counts out people in clockwise order starting from the next person The last one to be pointed at by the leader is eliminated and the next player after him becomes the new leader For example if there are children with numbers currently in the circle the leader is child and then counting out rhyme ends on child who is eliminated Child becomes the leader You have to write a program which prints the number of the child to be eliminated on every step ,The task was just about implementing algorithm described in statement This is one of many possible ways of doing this Firstly you should notice that doing iterations in th step is equal to doing iterations based numbering That is less than Now fill array of length with ones and create pointer to current leader Then on th step move pointer to the right from cell proceed to till you encounter ones When finished write to this cell and move pointer to next cell which contains Overall complexity ,1
516,You are given an array of integers and a set of distinct integers from to In one operation you may choose two integers and can be any integer and assign This operation can be done only if does not belong to the set Calculate the minimum number of operations you should perform so the array is increasing that is or report that it is impossible ,If the edges were only added and not deleted it would be a common problem that is solved with disjoint set union All you need to do in that problem is implement a DSU which maintains not only the leader in the class of some vertex but also the distance to this leader Then if we try to connect two vertices that have the same leader in DSU and the sum of distances to this leader is even then we get a cycle with odd length and graph is no longer bipartite But in this problem we need to somehow process removing edges from the graph In the algorithm I will describe below we will need to somehow remove the last added edge from DSU or even some number of last added edges How can we process that Each time we change some variable in DSU we can store an address of this variable and its previous value somewhere for example in a stack Then to remove last added edge we rollback these changes we rewrite the previous values of the variables we changed by adding the last edge Now we can add a new edge and remove last added edge All these operations cost because path compression doesn t work in intended time if we have to rollback Let s actually start solving the problem For convinience we change all information to queries like edge exists from query number till query number It s obvious that there are no more than such queries Let s use divide and conquer technique to make a function that answers whether the graph is bipartite or not after every query from some segment of queries First of all we add to DSU all the edges that are present in the whole segment and not added yet then we solve it recursively for and then we remove edges from DSU using the rollback technique described above When we arrive to some segment then after adding the edges present in this segment we can answer if the graph is bipartite after query Remember to get rid of the edges that are already added and the edges that are not present at all in the segment when you make a recursive call Of course to solve the whole problem we need to call our function from segment Time complexity is because every edge will be added only in calls of the function ,0
517,A positive integer number is written on a blackboard It consists of not more than digits You have to transform it into a number by erasing some of the digits and you want to erase as few digits as possible The number is called beautiful if it consists of at least one digit doesn t have leading zeroes and is a multiple of For example are beautiful numbers and are not Write a program which for the given will find a beautiful number such that can be transformed into this number by erasing as few digits as possible You can erase an arbitraty set of digits For example they don t have to go one after another in the number If it s impossible to obtain a beautiful number print If there are multiple answers print any of them ,It is easy to find the value on the cube that the cat stole it is equal All other values must be Let s try to get by taking times and adding the remainder there if it is non zero We could not get more than cubes this way because otherwise but we are guaranteed that the answer exists Now until we get the cube let s find the cube with the maximum value reduce it by and add the cube with the value of We can definitely get dice because otherwise but we are guaranteed that the answer exists It remains only to add a cube with the value of to our cubes We obtained a solution with asymptotics ,0
518,Ivan wants to have a good dinner A good dinner should consist of a first course a second course a drink and a dessert There are different types of first courses Ivan can buy the th of them costs coins different types of second courses the th of them costs coins different types of drinks the th of them costs coins and different types of desserts the th of them costs coins Some dishes don t go well with each other There are pairs of first courses and second courses that don t go well with each other pairs of second courses and drinks and pairs of drinks and desserts that don t go well with each other Ivan wants to buy exactly one first course one second course one drink and one dessert so that they go well with each other and the total cost of the dinner is the minimum possible Help him to find the cheapest dinner option ,Lets find the maximum number such that all values form the non descending order array It can be done the following way Let values form the non descending order array Then values will form the non descending order array if the first occurrence of in array is after the last occurrence of In similar manner we can find the minimum number such that all values form the non descending order array Now let s find out how to get the minimum number such that all values form the non descending order array if we fixed the value We denote this value for some fixed value as Firstly conditions and should hold Secondly there should be no such a pair that conditions and hold Since the condition is satisfied it means that must be greater than where is the last occurrence of in array In this way the answer is ,0
519,Once Max found an electronic calculator from his grandfather Dovlet s chest He noticed that the numbers were written with seven segment indicators https en wikipedia org wiki Seven segment display Max starts to type all the values from to After typing each number Max resets the calculator Find the total number of segments printed on the calculator For example if and then at first the calculator will print segments then segments and at last it will print segments So the total number of printed segments is ,Let s simply iterate over all the values from to and add to the answer the number of segments of the current value To count the number of segments we should iterate over all the digits of the number and add to the answer the number of segments of the current digit These values can be calculated by the image from the problem statement and stored in some array in code ,1
520,You are given arrays each array consists of exactly integers We denote the th element of the th array as You have to choose two arrays and it is possible that After that you will obtain a new array consisting of integers such that for every Your goal is to choose and so that the value of is maximum possible ,It is obvious that we always can use only two emotes with maximum Let their values be and We have to solve the problem by some formula The best way to use emotes use the emote with the value times then use the emotion with the value then again use the emote with value times and so on So the has length and we can use the emote with the value the remaining number of times So the answer is where is the first maximum of is the second maximum of is divided by rounded down and is modulo ,0
521,You are given two strings and both consist only of lowercase Latin letters Let be the length of string Let s call a sequence a merging sequence if it consists of exactly zeros and exactly ones in some order A merge is produced from a sequence by the following rules if then remove a letter from the beginning of and append it to the end of if then remove a letter from the beginning of and append it to the end of Two merging sequences and are different if there is some position such that Let s call a string if for all from to Let for some be a substring of consecutive letters of starting from position and ending at position inclusive Let be the number of different merging sequences of and that produce merges Note that only non empty substrings of and are considered Calculate Output the answer modulo ,First let s try to calculate the number of merging sequences just for some fixed pair of strings and Imagine we build a merge letter by letter So far letters are in the merge already For the th letter we can pick a letter from either string or string put a or a into the merging sequence respectively What constraints our choice Easy to see that it s only the th letter of the merge So we can come up with the following dynamic programming is the number of merging sequences such that characters from are taken characters from are taken and the last character of the merge is can be either just a letter a dimension of size or an indicator of a string the last character was taken from for string and from string Since we know how many characters are taken from each string we can easily decide the last taken character from that indicator For each transition we can just take a character from either of the strings The sum of over all will be the total number of merging sequences Now for the substrings Recall the following definition of a substring is a substring of if you can remove some characters from the beginning of possibly none or all and some characters from the end of possibly none or all to get the string What if we incorporated that definition into our dynamic programming Let be the number of merging sequences that end exactly before the th character of exactly before the th character of and the last character is still How to remove some characters from the beginning That actually is the same as attempting to start the merge from every state of dp So if we are currently in some state then we can act as if we have just taken the th character of or the th character of as the first character of the merge How to remove some characters from the end Since is the number of merging sequences that end exactly there why not just sum up all the values of dynamic programming into the answer We will count the sequences that end in all possible positions of both strings That is almost the answer to the task The only issue we have is that we forgot the condition that asks us to get a non empty substring from each string Well there are multiple ways to resolve the issue We can remove bad sequences afterwards their count is the number of chaotic substrings of multiplied by all possible empty substrings of there are of them plus the same thing for and These can be counted with two pointers Alternatively we can add an extra dimension or two to the dp to indicate if we have ever taken a character from and from So we get with and being binary flags that tell if a character from and from was ever taken That way we can only push the states with both flags set to true to the answer Overall complexity ,1
522, Let s call a positive integer if its decimal representation without leading zeroes contains even number of digits and there exists a permutation of this representation which is palindromic For example is a beautiful number since it contains digits and there exists a palindromic permutation Given a positive integer find the largest beautiful number which is less than ,This is pretty typical problem on greedy construction you are asked to build lexicographically maximal string In the majority of cases it s done like this Imagine you ve built some prefix of length with all numbers equal to the prefix of length of the original string You are also sure there exists some suffix for it that will give proper beautiful number Now you have two options you either put if possible and proceed to the same task of longer prefix or you put the smaller number and fill the entire suffix with the maximum possible beautiful number you can obtain Now you should learn how to check if any valid suffix exists It means at least the smallest possible beautiful number with current prefix is smaller than It s built like this Let be the number of digits which currently have odd number of occurences You put all zeroes but the last digits and then output these odd occurence number digits in increasing order The first part can be checked with partial sums on the number of zeroes on segment in the original string and the second part has its length not greater than and can be checked naively Overall complexity ,1
523,You have chains the th chain consists of vertices Vertices in each chain are numbered independently from to along the chain In other words the th chain is the undirected graph with vertices and edges connecting the th and the th vertices for each Now you decided to unite chains in one graph in the following way the first chain is skipped the st vertex of the th chain is connected by an edge with the th vertex of the th chain the last th vertex of the th chain is connected by an edge with the th vertex of the th chain Calculate the length of the longest simple cycle in the resulting graph A is a chain where the first and last vertices are connected as well If you travel along the simple cycle each vertex of this cycle will be visited exactly once ,For each digit we will count how many times it has changed The number of changes for the first digit the lowest is calculated using the formula The number of changes for the second digit is calculated by the formula That is it is equivalent to the number of first digit changes for numbers from to To calculate the number of changes for the remaining digits you need to apply similar reasoning with dividing the numbers by ,0
524,Little girl Tanya is learning how to decrease a number by one but she does it wrong with a number consisting of two or more digits Tanya subtracts one from a number by the following algorithm if the last digit of the number is non zero she decreases the number by one if the last digit of the number is zero she divides the number by 10 i e removes the last digit You are given an integer number Tanya will subtract one from it times Your task is to print the result after all subtractions It is guaranteed that the result will be positive integer number ,The following greedy strategy works during each turn delete the largest possible substring consisting of characters So we have to find all blocks of characters sort them according to their length and model which blocks are taken by Alice and which by Bob Why does the greedy strategy work It s never optimal to delete some part of the block of ones because we either have to spend an additional turn to delete the remaining part or allow our opponent to take it which is never good Why don t we need to delete zeroes If we delete a whole block of zeroes our opponent can take the newly formed block of s during their turn and it is obviously worse than taking a part of that block And deleting some part of a block of zeroes doesn t do anything our opponent will never delete the remaining part because it s suboptimal ,0
525,Let s denote the following function This function takes an array of length and returns an array Initially the result is an empty array For each integer from to we add element to the end of the resulting array if it is greater than all previous elements more formally if Some examples of the function if then if then if then if then You are given two arrays array and array You can delete some elements of array possibly zero To delete the element you have to pay coins the value of can be negative then you get coins if you delete this element Calculate the minimum number of coins possibly negative you have to spend for fulfilling equality ,The naive version of the solution is just dynamic programming let be the minimum cost of removed elements or the maximum cost of remaining elements if we considered first elements of and the resulting sequence maps to the first elements of There are two versions of this solution both working in calculate this dp as it is so there are states and transitions from each state ensure that the th element is taken into so there are states since each element appears in exactly once the second state can be deduces from the first one but up to transitions from each state It turns out that we can optimize the second approach Let s calculate the values of in ascending order of first of all we calculate the values of such that then transition into states such that and so on Calculating for is easy since the first element of is always the first element of we should delete all elements before the th if we want it to be the first element in So if is the maximum possible sum of costs of remaining elements if we considered the first elements of and the th element gets included in then for indices such that Okay now let s consider advancing from to If we want to go from to such that and we should leave the element in the array and delete some elements between indices and Which ones should be deleted First of all they are all elements with negative deletion cost but we should also get rid of all elements which could replace in that is all elements that are greater than So the remaining elements are which have and and we should be able to compute the sum of such elements Even if we manage to do it in which is possible there may be up to possible pairs of and to consider The easiest way to get rid of that is to sort all occurences of and and process them in ascending order maintaining the best that was already met That way each of the elements of will be considered at most twice so this solution runs in We know how to calculate the values now but how to determine the answer We should consider all values of such that and delete all elements with negative costs and all elements that are greater than from the suffix so this is another query of the form compute the sum of over which have and The most straightforward way to process them in is to use a persistent segment tree but since does not decrease in these queries as we process them we may maintain the elements we are interested in with a much simpler data structure for example Fenwick tree ,1
526,You are given an undirected weighted graph with vertices and edges The th edge is the distance between vertices and along the edge is The graph is i e for any pair of vertices there is at least one path between them consisting only of edges of the given graph A minimum spanning tree MST in case of weights is a subset of the edges of a connected weighted undirected graph that connects all the vertices together and has minimum total cost among all such subsets total cost is the sum of costs of chosen edges You can modify the given graph The only operation you can perform is the following increase the weight of some edge by You increase the weight of each edge multiple possibly zero times Suppose that the initial MST cost is Your problem is to increase weights of some edges in such a way that the cost of MST in the obtained graph remains but MST is it means that there is only one way to choose MST in the obtained graph Your problem is to calculate the number of operations required to do it ,The first and the most straight forward approach is to construct MST with any suitable algorithm build LCA with the maximum edge on a path with binary lifting technique and then we have to increase the answer for each edge such that equals to the maximum edge on a path between and in MST The second and the most pretty and easy to implement solution is the improved Kruskal algorithm Let s do Kruskal algorithm on the given edges Sort them and let s consider all edges of the same weight at once They can be divided into two classes The first class contains edges which connect nothing and the second class contains edges which can connect something Let the number of edges of current weight be edges of the current weight of the first class be and edges with of current weight of the second class be Okay we can just skip the first class because it will never increase the answer How to calculate useless edges of the second class Let s try to merge all components connected with edges of the second class Suppose we make merges Then we have to increase weights of all remaining edges by one So we add to the answer the value and go to the next weight Why is this right This is right because if the edge of the second class cannot connect anything because of the previously considered edges then the maximum on a path between endpoints of this edge equals to this edge weight So we have to increase the weight of this edge by one If we didn t do it we would be able to replace the edge connects these components with our edge And it is obvious that this edge is totally useless with the weight increased by one Time complexity is because of edges sorting ,1
527, You are given segments on the coordinate axis Segments can intersect lie inside each other and even coincide The th segment is and it covers all integer points such that The integer point is called if it is covered by than segments Your task is to remove the minimum number of segments so that there are no points at all ,Let s run dfs on the tree and write out the vertices in order of their visisiting by dfs that permutation is called Euler walk Easy to see that subtree of any vertex is a subsegment of that permutation Note that the number of different colours is so we can store the set of colours just as mask of binary bits in bit type long long in C long in Java Let s build the segment tree over the permutation which supports two operations paint subsegment by some colour and find the mask of colours of some segment ,0
528,You are given a weighted tree undirected connected graph with no cycles loops or multiple edges with vertices The edge has weight Also each vertex has its own value assigned to it Let s call a path starting in vertex and ending in vertex where each edge can appear no more than twice regardless of direction a Vertices can appear in the 2 path multiple times even start and end vertices For some 2 path profit where is the number of times edge appears in That is vertices are counted once but edges are counted the number of times they appear in You are about to answer queries Each query is a pair of vertices For each query find 2 path from to with maximal profit ,Notice that if there are substrings of length for each letter then there are also substrings of length Thus the function on the answer is monotonous so the binary search is applicable Let s have some answer fixed by binary search We have to place blocks of letters of length somewhere in a string If we fix an order these blocks go into the string then the greedy algorithm for placing them works Put each block after the previous one but as far to the left as possible the correctness can be proven by showing that picking not the furthest to the left position can t be more optimal If there exists such an order that all blocks fit then the answer is greater than or equal to The common transition is to move from iterating over permutations to dynamic programming over submasks Let be the smallest prefix of the string such that all blocks of letters from the mask fit into this prefix The transitions are the same pick a new block and place it as early after that prefix as possible So far the solution works pretty slow since for each of masks we have to find the earliest possible position for a block Let s use some precalculations to perform the transitions in Notice that the transition doesn t depend on a mask only on a length of the previous prefix Thus for every prefix and every letter we can save the closest position for a block Let be the closest position for a prefix of length and the th letter is at least equal to However if the block can be placed at the th position then it should be updated That can happen if the closest occurrence of any letter except is not smaller than Thus we can also maintain the closest occurrence of every letter With some smart iterations we can do the precalculations in The dynamic programming works in then Overall complexity ,0
529,You are given a sequence of one dimensional segments numbered through Your task is to find two distinct indices and such that segment lies within segment Segment lies within segment iff and Print indices and If there are multiple answers print any of them If no answer exists print ,Let s sort segments firstly by their left border in increasing order and in case of equal by their right border in decreasing order If there is any valid pair then the inner segment will always go after the outer one Now you can go from left to right keep the maximum right border of processed segments and compare it to the current segment Overall complexity ,1
530,There is a toy building consisting of towers Each tower consists of several cubes standing on each other The th tower consists of cubes so it has height Let s define operation on some height as following for each tower if its height is greater than then remove some top cubes to make tower s height equal to Cost of one slice equals to the total number of removed cubes from all towers Let s name slice as one if its cost is lower or equal to Calculate the minimum number of good slices you have to do to make all towers have the same height Of course it is always possible to make it so ,If the problem was to make the array strictly increasing then we could use the following approach for every element subtract its index from it find the longest non decreasing subsequence and change every element not belonging to this sequence In this problem we can use a similar technique Let s iterate on the element we will remove after changing everything we need let s call it For every we will subtract from and for every we will subtract from Let s maintain the longest non decreasing subsequence ending in every element on prefix and the longest non decreasing subsequence starting in every element on suffix this can be done by a lot of different techniques for example two segment trees and rollbacking which is used in our model solution Then we need to somehow merge these sequences The easiest way to do it is to consider only the subsequence ending in element since if we will need to consider the subsequence ending in some index less than we would check this possibility choosing other value of and use some data structure BIT segment tree or something similar to find the longest subsequence that can be appended to the one we fixed After checking if we need to delete element we add it to the data structure on prefix remove element from the data structure on suffix check if we have to remove element and so on Model solution https pastebin com BiaFgYx6,0
531,You are given an array of integers of length The elements of the array can be either different or the same Each element of the array is colored either blue or red There are no unpainted elements in the array One of the two operations described below can be applied to an array in a single step either you can select any blue element and decrease its value by or you can select any red element and increase its value by Situations in which there are no elements of some color at all are also possible For example if the whole array is colored blue or red one of the operations becomes unavailable Determine whether it is possible to make or more steps such that the resulting array is a permutation of numbers from to In other words check whether there exists a sequence of steps possibly empty such that after applying it the array contains in some order all numbers from to inclusive each exactly once ,Firstly let s calculate the following auxiliary matrix means the maximum position that is less than or equal to and the character in order from to and so on It can be calculated naively or with some easy dynamic programming initially all are and then for each from to all values are equal to except which is After calculating this matrix we can solve the problem by the following dynamic programming let be the number of subsequences of length that ends exactly in the position Initially all values are zeros except for each from to How do we perform transitionss Let s iterate over all lengths from to then let s iterate over all positions from to in a nested loop and for the current state we can calculate it as If then we don t need to add this state of the dynamic programming to the current state Don t forget to take the minimum with after each transition This transition means that we take all subsequences that end with each possible character of the alphabet and try to add the current character to each of them You can understand that there are no overlapping subsequences in this dynamic programming After that let s iterate over all possible lengths from to and calculate the number of subsequences of the current length It equals to The same if then we don t need to add this state of the dynamic programming to Don t forget to take the minimum with If then let s add to the answer and break the cycle Otherwise let s add to the answer and decrease by If after all iterations is greater than zero then let s try to add the empty string to the answer we didn t take it into account earlier Increase the answer by and decrease by one If after this is still greater than zero then the answer is otherwise the answer is the calculated sum Time complexity ,0
532,You are given a binary string consisting of zeros and ones Your task is to divide the given string into the number of in such a way that of the string belongs to exactly and each subsequence looks like or i e the subsequence should not contain two adjacent zeros or ones Recall that a subsequence is a sequence that can be derived from the given sequence by deleting zero or more elements without changing the order of the remaining elements For example subsequences of are but not and You have to answer independent test cases ,Let s iterate over all characters of from left to right maintaining two arrays and where stores indices of all subsequences which end with and stores indices of all subsequences which end with If we met then the best choice is to append it to some existing subsequence which ends with If there are no such sequences we need to create new one which ends with Otherwise we need to convert one of sequences to sequence The same works with characters So when we don t need to create the new sequence we try to don t do that And values in arrays and help us to determine the number of sequence we assign to each character And also there is a cute proof of this solution from Gassa let be the difference between the number of and the number of on the prefix of of length We claim that the answer is and let s show why is it true Let s build a function on a plane with points Then we can match each between and with some subsequence ,1
533,Polycarp has a rectangular field of cells the size of the field does not exceed cells in each cell of which there can be candy There are rows and columns in the field Let s denote a cell with coordinates vertically and horizontally by Then the top left cell will be denoted as and the bottom right cell will be denoted as If there is candy in the cell then the cell is marked with the symbol otherwise with the symbol Polycarp made a Robot that can collect candy The Robot can move from either to or to If the Robot is in a cell that contains candy it takes it While there is at least one candy on the field the following procedure is executed Polycarp puts the Robot in an arbitrary cell on the of the field He himself chooses in which cell to place the Robot It is allowed to put the Robot in the same cell multiple times The Robot moves across the field and collects candies He controls the Robot When the Robot leaves the field Polycarp takes it If there are still candies left Polycarp repeats the procedure Find the number of times Polycarp needs to put the Robot on the topmost row of the field in order to collect all the candies It is guaranteed that Polycarp can always collect all the candies ,First let s consider the cases when the answer exists If then the thermostat is already set up and the answer is else if then it is enough to reconfigure the thermostat in operation else if exist such temperature that and then you can configure the thermostat in operations If such exists between and we can chose one of bounds or we need to make operations if times if we cannot reconfigure through one of the boundaries as above but we can through both or If we can t get the temperature in one of these ways the answer is ,0
534,Vova s house is an array consisting of elements yeah this is the first problem I think where someone in the array There are heaters in some positions of the array The th element of the array is if there is a heater in the position otherwise the th element of the array is Each heater has a value is the same for all heaters This value means that the heater at the position can warm up all the elements in range Vova likes to walk through his house while he thinks and he hates cold positions of his house Vova wants to switch some of his heaters on in such a way that each element of his house will be warmed up by at least one heater Vova s target is to warm up the whole house all the elements of the array i e if and heaters are at positions and then Vova can warm up the whole house if he switches all the heaters in the house on then the first elements will be warmed up by the first heater and the last elements will be warmed up by the second heater Initially all the heaters are off But from the other hand Vova didn t like to pay much for the electricity So he wants to switch the number of heaters on in such a way that each element of his house is warmed up by at least one heater Your task is to find this number of heaters or say that it is impossible to warm up the whole house ,During the first stage every player with an even index competes against a player with an odd index so in each match during the first stage the player whose index is smaller wins The pairs are formed in such a way that in each pair the player with an odd index has smaller index so all players with even indices get eliminated and all players with odd indices advance to the next stage All of the remaining matches are between players with odd indices so the winner of each match is the player with the larger index So the overall winner of the tournament is the player with the greatest odd index which is Note in some languages for example C standard power functions work with floating point numbers instead of integers so they will produce the answer as a floating point number which may lead to wrong formatting of the output and or calculation errors You might have to implement your own power function that works with integers or compute using a loop ,0
535,A row of cells is given all initially white Using a stamp you can stamp any two neighboring cells such that one becomes red and the other becomes blue A stamp can be rotated i e it can be used in both ways as and as During use the stamp must completely fit on the given cells it cannot be partially outside the cells The stamp can be applied multiple times to the same cell Each usage of the stamp recolors both cells that are under the stamp For example one possible sequence of stamps to make the picture could be Here and represent a white red or blue cell respectively and the cells that the stamp is used on are marked with an underline Given a final picture is it possible to make it using the stamp zero or more times ,Let s sort all people by their height in descending order Now let s go through all the people and look for the position of the person in the sorted array the height of which is strictly less than ours for example by binary search Obviously only those people who are in the sorted array later than the found person can stand in front of us all of them have a height strictly less than ours Among all these people it is more profitable for us to take a person with minimum width In order to find such a person quickly we can find a person with the minimum width for each suffix of the sorted array To handle a situation where a person is lying down we need to swap the width and height and repeat the algorithm above ,0
536, teams participate in a playoff tournament The tournament consists of games They are held as follows first of all the teams are split into pairs team plays against team team plays against team exactly in this order and so on so games are played in that phase When a team loses a game it is eliminated and each game results in elimination of one team there are no ties After that only teams remain If only one team remains it is declared the champion otherwise games are played in the first one of them the winner of the game vs plays against the winner of the game vs then the winner of the game vs plays against the winner of the game vs and so on This process repeats until only one team remains After the tournament ends the teams are assigned places according to the tournament phase when they were eliminated In particular the winner of the tournament gets place the team eliminated in the finals gets place both teams eliminated in the semifinals get place all teams eliminated in the quarterfinals get place all teams eliminated in the 1 8 finals get place and so on For example this picture describes one of the possible ways the tournament can go with and the resulting places of the teams After a tournament which was conducted by the aforementioned rules ended its results were encoded in the following way Let be the place of the th team in the tournament The hash value of the tournament is calculated as where is some given integer Unfortunately due to a system crash almost all tournament related data was lost The only pieces of data that remain are the values of and You are asked to restore the resulting placing of the teams in the tournament if it is possible at all ,After sorting we can observe that if the answer is then the area of each rectangle is Then we just need to check for each from to that and and If all conditions are satisfied for all then the answer is Otherwise the answer is ,0
537,Ivan s classes at the university have just finished and now he wants to go to the local CFK cafe and eat some fried chicken CFK sells chicken chunks in small and large portions A small portion contains chunks a large one chunks Ivan wants to eat exactly chunks Now he wonders whether he can buy exactly this amount of chicken Formally Ivan wants to know if he can choose two non negative integers and in such a way that small portions and large ones contain exactly chunks Help Ivan to answer this question for several values of ,Let and Then we can construct the following answer and Because all numbers in the answer are positive we can assume that the maximum element of is So let s sort the input array consisting of four elements and just print and ,0
538,You are given an array of integers of length The elements of the array can be either different or the same Each element of the array is colored either blue or red There are no unpainted elements in the array One of the two operations described below can be applied to an array in a single step either you can select any blue element and decrease its value by or you can select any red element and increase its value by Situations in which there are no elements of some color at all are also possible For example if the whole array is colored blue or red one of the operations becomes unavailable Determine whether it is possible to make or more steps such that the resulting array is a permutation of numbers from to In other words check whether there exists a sequence of steps possibly empty such that after applying it the array contains in some order all numbers from to inclusive each exactly once ,Note the following fact if a number in a permutation was obtained from a blue number and a number in a permutation was obtained from a red number and then by decreasing the blue number and increasing the red number exactly times each we will obtain the same permutation in which the two numbers have swapped places Thus if a permutation can be obtained at all some permutation can be obtained by making all the red numbers equal to and the blue ones equal to where is the total count of red numbers Now consider separately two red numbers and such that If is produced by increasing and is produced by increasing and in the same time then and the following is also true and So we just showed that if an answer exists it also exists if greater numbers are produced by greater values from the input The same holds for the blue numbers Let us sort all elements by the key where the color of th element and blue comes before red It remains to check that for any from to we can get the number from the th element of the obtained sorted array To do this we iterate through it and check that either and so it can be reduced to or symmetrically and ,1
539, You are given a sequence consisting of positive integers Let s define a as the sequence consisting of distinct elements let these elements are and can be equal and is as follows There are integers greater than or equal to For example sequences and are but and are not Your task is to choose the maximum by length of that is a You have to answer independent test cases Recall that the sequence is a a subsequence of the sequence if can be derived from by removing zero or more elements without changing the order of the remaining elements For example if then possible subsequences are and but not and ,If the value of is even then at least regardless of the value of Therefore we can put all the even values before the odd ones it does not matter in what order Now it remains to arrange the odd values In fact their order is not important because for odd and This means that each pair will be considered exactly time regardless of the order of the odd elements ,0
540,You are given two integers and Your task is to calculate the sum of numbers from to including and such that each number contains different digits and print this sum modulo For example if then you have to calculate all numbers from to such that each number is formed using only one digit For the answer is ,Let s calculate the answer as the difference between sum of maxima and sum of minima over all paths These sums can be found by the following approach Consider the sum of maxima Let s sort all vertices in ascending order of values of if two vertices have equal values their order doesn t matter This order has an important property that we can use for every path the maximum on this path is written on the vertex that has the greatest position in sorted order This allows us to do the following Let s denote as a tree rooted at vertex that is formed by the set of such vertices that are directly connected to or some other vertex from the set and have Consider the vertices that are connected to in this tree Let s denote them as the order doesn t matter and denote by the size of the subtree of in the tree Let s try to calculate the number of paths going through in this tree paths that have as its endpoint paths connecting a vertex from subtree of to a vertex from subtree of So vertex adds the sum of these values multiplied by to the sum of maxima To calculate these sums we will use the following algorithm Initialize a DSU disjoint set union making a set for each vertex Process the vertices in sorted order When we process some vertex find all its already processed neighbours they will be in For every neighbour denote the size of its set in DSU as Then calculate the number of paths going through using aforementioned formulas to do it in linear time use partial sums Add this number multiplied by to the sum of maxima and merge with in DSU To calculate the sum of minima you can do the same while processing vertices in reversed order Time complexity of this solution is ,0
541,You are given an array consisting of integer numbers Your task is to split this array into three parts some of which may be empty in such a way that each element of the array belongs to exactly one of the three parts and each of the parts forms a consecutive contiguous subsegment possibly empty of the original array Let the sum of elements of the first part be the sum of elements of the second part be and the sum of elements of the third part be Among all possible ways to split the array you have to choose a way such that and is maximum possible More formally if the first part of the array contains elements the second part of the array contains elements and the third part contains elements then The sum of an empty array is Your task is to find a way to split the array such that and is maximum possible ,Since the given array consists of positive integers for each value of there can be at most one value of such that We can use binary search on the array of prefix sums of to find the correct value of given that it exists If it does exist and this is a candidate solution so we store it Alternatively we can use the two pointers trick when increases cannot decrease Be careful to use 64 bit integers to store sums Overall complexity is or ,1
542,You are an upcoming movie director and you have just released your first movie You have also launched a simple review site with two buttons to press upvote and downvote However the site is not so simple on the inside There are two servers each with its separate counts for the upvotes and the downvotes reviewers enter the site one by one Each reviewer is one of the following types type a reviewer has watched the movie and they like it they press the upvote button type a reviewer has watched the movie and they dislike it they press the downvote button type a reviewer hasn t watched the movie they look at the current number of upvotes and downvotes of the movie on the server they are in and decide what button to press If there are more downvotes than upvotes then a reviewer downvotes the movie Otherwise they upvote the movie Each reviewer votes on the movie exactly once Since you have two servers you can actually manipulate the votes so that your movie gets as many upvotes as possible When a reviewer enters a site you know their type and you can send them either to the first server or to the second one What is the maximum total number of upvotes you can gather over both servers if you decide which server to send each reviewer to ,Notice that the answer depends only on the number of the reviewers of the third type who upvote the movie Optimally we would want every single reviewer of the third type to upvote We can achieve it with the following construction send all reviewers of the first type to the first server all reviewers of the second type to the second server and all reviewers of the third type to the first server Since there are no downvotes on the first server all reviewers of the third type will upvote Thus the answer is the total number of reviewers of the first and the third type Overall complexity per testcase ,1
543,You are given an unweighted tree with vertices Then following operations are applied to the tree A single operation consists of the following steps choose two leaves add the length of the simple path between them to the answer remove one of the chosen leaves from the tree Initial answer before applying operations is Obviously after such operations the tree will consist of a single vertex Calculate the maximal possible answer you can achieve and construct a sequence of operations that allows you to achieve this answer ,Iterating over all possible values of and checking them may be too slow though heavily optimized brute force is difficult to eliminate in this problem so we need to speed this approach up The resulting number consists of bits Let s use the classical meet in the middle trick try all combinations of lowest bits try all combinations of highest bits and somehow merge the results When we fix a combination of lowest bits we fix lowest bits in every Suppose that there are ones among lowest bits of Analogically when we fix a combination of highest bits we fix highest bits in every Suppose that there are ones among highest bits of We want to find a combination of lowest and highest bits such that is the same for each Let s represent each combination of lowest bits with an dimensional vector with coordinates Let s also represent each combination of highest bits with an dimensional vector with coordinates We want to find a combination of lowest bits and a combination of highest bits such that their vectors are opposite We can do so for example by precalculating all vectors for all combinations of lowest bits storing them in a map or a trie iterating on a combination of highest bits and searching for the opposite vector in the map trie ,0
544,You are given a string of length Each character is either one of the first lowercase Latin letters or a question mark You are asked to replace every question mark with one of the first lowercase Latin letters in such a way that the following value is maximized Let be the maximum length substring of string which consists entirely of the th Latin letter A substring of a string is a contiguous subsequence of that string If the th letter doesn t appear in a string then is equal to The value of a string is the minimum value among for all from to What is the maximum value the string can have ,Notice that if there are substrings of length for each letter then there are also substrings of length Thus the function on the answer is monotonous so the binary search is applicable Let s have some answer fixed by binary search We have to place blocks of letters of length somewhere in a string If we fix an order these blocks go into the string then the greedy algorithm for placing them works Put each block after the previous one but as far to the left as possible the correctness can be proven by showing that picking not the furthest to the left position can t be more optimal If there exists such an order that all blocks fit then the answer is greater than or equal to The common transition is to move from iterating over permutations to dynamic programming over submasks Let be the smallest prefix of the string such that all blocks of letters from the mask fit into this prefix The transitions are the same pick a new block and place it as early after that prefix as possible So far the solution works pretty slow since for each of masks we have to find the earliest possible position for a block Let s use some precalculations to perform the transitions in Notice that the transition doesn t depend on a mask only on a length of the previous prefix Thus for every prefix and every letter we can save the closest position for a block Let be the closest position for a prefix of length and the th letter is at least equal to However if the block can be placed at the th position then it should be updated That can happen if the closest occurrence of any letter except is not smaller than Thus we can also maintain the closest occurrence of every letter With some smart iterations we can do the precalculations in The dynamic programming works in then Overall complexity ,1
545,The robot is located on a checkered rectangular board of size rows columns The rows in the board are numbered from to from top to bottom and the columns from to from left to right The robot is able to move from the current cell to one of the four cells adjacent by side The sequence of commands executed by the robot is given Each command is denoted by one of the symbols or and triggers the movement to left right down or up respectively The robot can start its movement in cell The robot executes the commands starting from the first one strictly in the order in which they are listed in If the robot moves beyond the edge of the board it falls and breaks A command that causes the robot to break is successfully executed The robot s task is to execute as many commands as possible without falling off the board For example on board if the robot starts a sequence of actions right right down left up up from the central cell the robot will perform one command then the next command will force him to cross the edge If the robot starts moving from the cell second row first column then all commands will be executed successfully and the robot will stop at the cell first row second column Determine the cell from which the robot should start its movement in order to execute as many commands as possible ,Let s look at the answer Let s see how many commands the robot can execute Since the robot breaks goes outside the field if any command causes it to break it either leads to its total shift relative to of exactly to the left or exactly to the right or similarly of exactly up or exactly down Denote by and the sum of the maximum positive right down and maximum negative left up shifts in the corresponding direction By adding up the above constraints we get the fact that the robot will not fall off the board only if and Note that the reverse is also true if both these conditions are satisfied then starting from the point where is the maximum shift along the direction the robot will not pass any of the board s edges Thus it is sufficient to find the number of commands which when executed hold the following invariant The horizontal shift can be calculated as the difference between the number of letters and the number of letters encountered Similarly the vertical shift as the difference of the numbers of and Let s iterate over the sequence of commands maintaining relevant values of for all After executing each command if the robot goes farther in some direction than ever before we update the corresponding Either we reach the end of or we meet a command after which either becomes equal to or becomes equal to and the robot breaks so the previous command was the last one successfully executed The possible answer is where the values are calculated one command before the robot broke ,1
546,Alice guesses the strings that Bob made for her At first Bob came up with the secret string consisting of lowercase English letters The string has a length of or more characters Then from string he builds a new string and offers Alice the string so that she can guess the string Bob builds from as follows he writes all the substrings of length of the string in the order from left to right and then joins them in the same order into the string For example if Bob came up with the string then all the substrings of length of the string are Therefore the string You are given the string Help Alice to guess the string that Bob came up with It is guaranteed that was built according to the algorithm given above It can be proved that the answer to the problem is unique ,I could ve explained the jury solution however after the contest I found a much easier and more understandable solution by one of the participants I put one of jury s solutions under the spoiler along with a link to the solution I m explaining Let s restate the problem in a more convinient way Initially we are given some directed acyclic graph Let there be nodes of two kinds For a direct set operation These will have a single outgoing edge to another node For a binary operation These will have two outgoing edges to other nodes However it s important which edge is the left one and which is the right one We also have to make dummy vertices for the variables which only appeared at the right side of some operation We are allowed to remove any direct set operations we will simulate this by compressing the edges of the graph Instead of doing we ll do Value wise this is the same but variable don t rely on anymore so might be deleted We ll build the entire graph line by line Let s maintain array which will keep the current value of each variable It will store the node itself It s probably better to store both kinds of nodes in a separate array so that and the pointers to the ends of the edges could be integers If we encountered no variable getting set then the answer is 0 Otherwise let s traverse from the node representing the current value of to every reachable node While building the graph we were compressing every unoptimal operation thus all reachable nodes matter Finally the last operation on might have been just a direct set That s unoptimal so we ll handle that case separately ,0
547,You are given an array of positive integers Determine if by rearranging the elements you can make the array strictly increasing In other words determine if it is possible to rearrange the elements such that holds ,If there are two elements with the same value then the answer is because neither of these values is less than the other Otherwise the answer is since we can just sort the array The time complexity is or depending on the implementation ,1
548,Let be a string of lowercase Latin letters Its price is the sum of the indices of letters an integer between 1 and 26 that are included in it For example the price of the string is The string and the integer are given Remove the minimal number of letters from so that its price becomes less than or equal to and print the resulting string Note that the resulting string may be empty You can delete arbitrary letters they do not have to go in a row If the price of a given string is less than or equal to then nothing needs to be deleted and must be output Note that when you delete a letter from the order of the remaining letters is preserved For example if you delete the letter from the string you get ,Let s define then it should be obvious that we need at least coins to buy a bag of chips of cost Now it s not hard to prove that coins is always enough to buy a bag of chips of any cost Proof if we ll take coins of value coin and coin if we ll take coins and two coins if we ll take coins one coin and two coins So the question is how to decide is coins enough The solution is to note that there is no need to take more than coins and more than coins so we can just brute force the number of coins we ll take and the number of coins we ll take Then the number of coins and we can check is it possible to pay exactly using at most and coins respectively There exists casework solution as well but it s quite tricky so brute force is preferable The main problem for case work is the case since there are two different ways to take coins either coins and coin or coins and two coins In the first way you can t gather exactly and in the second one you can gather neither nor ,0
549,Given an array of length and an integer find the number of indices such that the subarray with length with length has the following property If you multiply the first element by the second element by and the st element by then this subarray is sorted in strictly increasing order More formally count the number of indices such that ,The task was just about implementing algorithm described in statement This is one of many possible ways of doing this Firstly you should notice that doing iterations in th step is equal to doing iterations based numbering That is less than Now fill array of length with ones and create pointer to current leader Then on th step move pointer to the right from cell proceed to till you encounter ones When finished write to this cell and move pointer to next cell which contains Overall complexity ,0
550,You have letters letters letters You want to build a string of length from them obviously you cannot use the th letter more than times A string is called if there are no palindromic contiguous substrings of odd length greater than in it For example the string is not beautiful it has several palindromic substrings of odd length greater than for example Another example the string is Calculate the number of different strings you can build and print the answer modulo ,Suppose there is no constraint on the number of letters used Then this problem can be solved with the following dynamic programming let be the number of strings of length ending with characters and that don t contain palindromes of odd length greater than obviously each forbidden palindrome contains a subpalindrome of length so we only need to ensure that there are no palindromes of length The thing we are going to use in order to ensure that all the constraints on the number of characters are met is inclusion exclusion Since each at most two characters can violate their constraints in a single string so we will iterate on some character of the alphabet and subtract the number of strings violating the constraint on this character from the answer then iterate on a pair of characters and add the number of strings violating the constraints on these two characters to the answer Okay how to calculate the number of strings violating the constraint on some fixed character Let s use dynamic programming the number of strings such that they contain characters of them have the same type that we fixed the previous to last character is and the last character is The number of states here seems to be something about but in fact and can be optimized to have only two different values since we are interested in two types of characters the ones that coincide with the character we fixed and the ones that don t Okay what about violating the constraints on two characters The same method can be used here let be the number of strings consisting of characters such that the number of occurrences of the first fixed character is the number of occurrences of the second fixed character is the previous to last character is and the last character is Again at first it seems that there are up to states but and can be optimized to have only different values so the number of states is actually It seems that we have to run this dynamic programming for each pair of characters right In fact no the only difference is which states violate the constraints and which don t We can run this dp only once and when we need an answer for the pair of characters we can use two dimensional prefix sums to query the sum over with and in In fact this dynamic programming can also be used for the first and the second part of the solution calculating the strings that don t violate any constraints and the strings that violate the constraints on one character so the hardest part of the solution runs in though with a pretty big constant factor ,1
551,You are given a string and an array of strings Each string consists of lowercase Latin letters from to consists of lowercase Latin letters from to and question marks Each string has its cost an integer number The value of some string is calculated as where is the number of occurences of string in as a substring For example You have to replace all question marks in with lowercase Latin letters from to so the value of is maximum possible ,Suppose we want to calculate the value of some already fixed string we should be able to do so at least to solve the test cases without question marks How can we do it We can use some substring searching algorithms to calculate but a better solution is to build an Aho Corasick automaton over the array and then for each node calculate the sum of costs of all strings ending in that node these are the strings represented by that node and the strings represented by other nodes reachable by suffix links After that process by the automaton and calculate the sum of the aforementioned values over all states that were reached Building an Aho Corasick automaton can be done in and processing the string in Okay what if we ve got some question marks in our string The first solution that comes to mind is to calculate we processed first positions in used a of characters for question marks and the current state of the automaton is then denotes the maximum value of first characters of we could have got But it s where and is the size of the alphabet which is too slow To speed it up we can see that there are only positions in our string where we actually choose something in our dynamic programming All substrings not containing question marks can be skipped in as follows for each substring of bounded by two question marks or bounded by one question mark and one of the ends of and each state of the automaton we may precalculate the resulting state of the automaton and the change to the value of the string if we process this substring by the automaton with the initial state This precalculation is done in overall and using this we may skip the states of dynamic programming such that is not a position with a question mark so our complexity becomes A note about the model solution it s a bit more complicated because we wanted to increase the constraints to but then we decided that it would be too complicated to code so the main function still contains some parts of the code that were used to improve its complexity We will post a clearer version of the model solution soon ,1
552,Taisia has six sided dice Each face of the die is marked with a number from to each number from to is used once Taisia rolls all dice at the same time and gets a sequence of values where is the value on the upper face of the th dice The sum of this sequence is equal to Suddenly Taisia s pet cat steals exactly dice with value and calculates the sum of the values on the remaining dice which is equal to You only know the number of dice and the values of Restore a possible sequence that fulfills the constraints ,It is easy to find the value on the cube that the cat stole it is equal All other values must be Let s try to get by taking times and adding the remainder there if it is non zero We could not get more than cubes this way because otherwise but we are guaranteed that the answer exists Now until we get the cube let s find the cube with the maximum value reduce it by and add the cube with the value of We can definitely get dice because otherwise but we are guaranteed that the answer exists It remains only to add a cube with the value of to our cubes We obtained a solution with asymptotics ,1
553,You are given a string consisting of lowercase Latin letters Polycarp wants to remove exactly characters from the string Polycarp uses the following algorithm times if there is at least one letter remove the leftmost occurrence and stop the algorithm otherwise go to next item if there is at least one letter remove the leftmost occurrence and stop the algorithm otherwise go to next item remove the leftmost occurrence of the letter and stop the algorithm This algorithm removes a single letter from the string Polycarp performs this algorithm exactly times thus removing exactly characters Help Polycarp find the resulting string ,Let the lowercase Latin letters be indexed from to There are exists at least two different solutions If exit the program Otherwise count the number of occurrences of each letter from to Let it be Now find the alphabetically smallest letter that will be in the resulting string It can be done as follows iterate over all from to and if then subtract it from otherwise will be the smallest letter that will be in the resulting string But we possibly need to remove some number of its leftmost occurrences It is obvious that letters smaller than will not appear in the resulting string Also the leftmost occurrences of letter will be removed Now let s iterate over all letters in string from left to right and construct the resulting string If the current character of let it be is smaller than then do nothing If is greater than then add it to Otherwise If then decrease by one otherwise add to The time complexity is Another solution is the following Let s carry the vector of pairs where is the th character of and is its position If we sort this vector with the standard compare function it is easy to see that the first elements of this vector will be removed from the input string Then if we will sort the last elements of this vector by its positions in the input string in increasing order we will obtain the answer The time complexity is ,1
554,You are given an integer You have to construct a permutation of size A is an array where each integer from to where is the size of permutation occurs exactly once For example is a permutation of size is a permutation of size is not a permutation the integer is absent is not a permutation the integer appears twice A of a permutation is a contiguous subsequence of that permutation For example the permutation has subsegments and The of the permutation is the number of its subsegments which are also permutations For example the value of is since the subsegments and are permutations You have to construct a permutation of size with among all permutations of size ,Let s notice that this task can be solved independently for each column total result will be the sum of results for columns The ones you should remove will always be the top ones in column It makes no profit to erase some one while there are still ones on top of it score won t become higher Go from the top of the column to the bottom and recalculate the score after removing every one Take the first position of the maximal score and update global answer with it Overall complexity can be achieved with partial sums ,0
555,You are given two strings and both consist only of lowercase Latin letters Let be the length of string Let s call a sequence a merging sequence if it consists of exactly zeros and exactly ones in some order A merge is produced from a sequence by the following rules if then remove a letter from the beginning of and append it to the end of if then remove a letter from the beginning of and append it to the end of Two merging sequences and are different if there is some position such that Let s call a string if for all from to Let for some be a substring of consecutive letters of starting from position and ending at position inclusive Let be the number of different merging sequences of and that produce merges Note that only non empty substrings of and are considered Calculate Output the answer modulo ,Let s show by construction that there can be no ambiguity in values of of the children who were leaders at least once except for probably the last leader If then on this step the value of taken was exactly Otherwise went over and in circle ended up to the left or in the same position So for this case should be Obviously counting cannot go over two or more times as this will result in We only need to check if all the numbers are unique and fill the unvisited children with remaining values to form the permutation Overall complexity ,0
556,Ivan is a programming teacher During the academic year he plans to give lectures on different topics Each topic should be used in exactly one lecture Ivan wants to choose which topic will he explain during the st nd th lecture formally he wants to choose some permutation of integers from to let s call this permutation is the index of the topic Ivan will explain during the th lecture For each topic except there exists a prerequisite topic for the topic the prerequisite topic is Ivan cannot give a lecture on a topic before giving a lecture on its prerequisite topic There exists at least one valid ordering of topics according to these prerequisite constraints Ordering the topics correctly can help students understand the lectures better Ivan has special pairs of topics such that he knows that the students will understand the th topic better if the lecture on it is conducted the lecture on the th topic Ivan wants to satisfy the constraints on every such pair that is for every there should exist some such that and Now Ivan wants to know if there exists an ordering of topics that satisfies all these constraints and if at least one exists find any of them ,We can solve the problem recursively from the root to the leaves Let s maintain a list of leaf indices for the current subtree If the list size is equal to then we can stop our recursion Otherwise we have to find the value of the root of the current subtree and split all leaves between child nodes The root value is the maximum value of among all pairs belonging to a subtree since the current root has at least child nodes there is a pair of leaves for which the current root is the least common ancestor If the value of the least common ancestor of the leaves and is less than the value of the current root then and belong to the same child of the root Using this fact we can split all the leaves between the child nodes and then restore the subtrees for them recursively ,0
557,You are given some Tetris field consisting of columns The initial height of the th column of the field is blocks On top of these columns you can place figures of size i e the height of this figure is blocks and the width of this figure is block Note that you rotate these figures Your task is to say if you can clear the whole field by placing such figures More formally the problem can be described like this The following process occurs while You place one figure choose some from to and replace with then while all are greater than zero replace each with And your task is to determine if it is possible to clear the whole field i e finish the described process choosing the places for new figures properly You have to answer independent test cases ,The answer is only if all have the same parity i e all are odd or all are even That s because placing the block doesn t change the parity of the element and the operation changes the parity of all elements in the array ,1
558, You are given a string consisting of characters each character is or You are also given an integer Your task is to change the minimum number of characters in the initial string so that after the changes there will be a string of length that is a substring of and is also a substring of the infinite string A string is a substring of string if there exists a positive integer such that For example strings are substrings of the infinite string while and are not You have to answer independent queries ,In this problem you should make the same as in the previous one but faster Let s consider three offsets of string and Let s copy the current offset of the string so that it will has the length possibly without some trailing characters and save it in the string Then let s compare the string with this offset of length and build an array of length where if Then let s iterate over all possible continuous subsegments of this array and maintain the variable denoting the current answer Firstly for the current position let s add to Then if the current position is greater than or equal to indexed let s decrease by So now we have the continuous subsegment of the array of length no more than Then if the current position is greater than or equal to indexed again the current subsegment has the length then let s update the answer with Then let s do the same with two remaining offsets ,1
559,Each day in Berland consists of hours Polycarp likes time management That s why he has a fixed schedule for each day it is a sequence each is either or where if Polycarp works during the th hour of the day and if Polycarp rests during the th hour of the day Days go one after another endlessly and Polycarp uses the same schedule for each day What is the maximal number of continuous hours during which Polycarp rests It is guaranteed that there is at least one working hour in a day ,At first consider we process the only day In this case just iterate over hours and maintain the length of the current rest block i e if the element equals then increase if the element equals then reset to The maximum intermediate value of is the answer In case of multiple days consider the given sequence as a cyclic sequence Concatenate the sequence twice and solve the previous case Sure not it is no necessary to concatenate it in explicit way just use instead of and process ,1
560,Let s call some positive integer if its decimal representation contains no more than non zero digits For example numbers are and numbers are not You are given a segment Count the number of integers such that Each testcase contains several segments for each of them you are required to solve the problem separately ,There are quite a few approaches to the problem I ll describe the two of them which I actually implemented First approach combinatoric one Problems of the form count the number of beautiful numbers from to usually require counting the numbers on and or not inclusively and and subtracting one from another Let s try this thing here counting not inclusively Let s fix some prefix of the upper border number We want to calculate the amount of numbers having the same prefix but being smaller in the next digit If we count it for all prefixes including the empty one we will get the answer And that is pretty easy Let the prefix include non zero digits the length of the suffix be and the digit after the chosen prefix is If is zero then there the result is obviously zero Otherwise we can either put or any of the non zero digits Then the formula is We choose positions from the suffix to put non zero digits in them any digit from to and fill the rest with zeros Overall complexity Second approach precalc one This is a bit easier to implement Actually there are just about 700000 valid numbers you can generate them all put them into the array in sorted order and binary search for the given queries Overall complexity ,1
561,Polycarp has invited friends to celebrate the New Year During the celebration he decided to take a group photo of all his friends Each friend can stand or lie on the side Each friend is characterized by two values their height and their width On the photo the th friend will occupy a rectangle if they are standing or if they are lying on the side The th friend can be placed in front of the th friend on the photo if his rectangle is lower and narrower than the rectangle of the th friend Formally of the following conditions must be fulfilled both friends are standing or both are lying one of the friends is standing and the other is lying For example if and then the first friend can be placed in front of the second and one of the them is standing and the other one is lying the third friend can be placed in front of the second and both friends are standing or both are lying In other cases the person in the foreground will overlap the person in the background Help Polycarp for each find any such that the th friend can be located in front of the th friend i e at least one of the conditions above is fulfilled Please note that you do not need to find the arrangement of all people for a group photo You just need to find for each friend any other friend who can be located in front of him Think about it as you need to solve separate independent subproblems ,Let s sort all people by their height in descending order Now let s go through all the people and look for the position of the person in the sorted array the height of which is strictly less than ours for example by binary search Obviously only those people who are in the sorted array later than the found person can stand in front of us all of them have a height strictly less than ours Among all these people it is more profitable for us to take a person with minimum width In order to find such a person quickly we can find a person with the minimum width for each suffix of the sorted array To handle a situation where a person is lying down we need to swap the width and height and repeat the algorithm above ,1
562, You are given a string consisting of characters each character is or You are also given an integer Your task is to change the minimum number of characters in the initial string so that after the changes there will be a string of length that is a substring of and is also a substring of the infinite string A string is a substring of string if there exists a positive integer such that For example strings are substrings of the infinite string while and are not You have to answer independent queries ,Each move we can choose the minimum element in the maximum element in and swap them if the minimum in is less than maximum in If we repeat this operation times we get the answer This can be done in but authors solution is ,0
563,Alice is a beginner composer and now she is ready to create another masterpiece And not even the single one but two at the same time Alice has a sheet with notes written on it She wants to take two such non empty non intersecting subsequences that both of them form a and sum of their lengths is maximal Subsequence forms a melody when each two adjacent notes either differs by or are congruent modulo You should write a program which will calculate maximum sum of lengths of such two non empty non intersecting subsequences that both of them form a melody ,Let s solve this problem with dynamic programming Let be the maximum answer if one melody finishes in note number and another melody in note number and are indexed if one of them is then the melody is empty How shall we update First of all we will update from previous values only if If then obviously answer is and if then we take the answer for Secondly to avoid intersections we will update only using values of where and Why Because if we update from some and then it can lead to some intersection we can t guarantee we didn t use in the first melody How can we make fast updates We will count from to Then while counting for some specific we will maintain two arrays the maximum value of encountered so far where the maximum value of encountered so far where So when we need to count it will be the maximum of four values if we add a note which is congruent modulo with the last one if we add a note which is less by than the last note if we add a note which is greater by than the last note if we just start a melody These values can be calculated in ,1
564,Consider a playoff tournament where athletes compete The athletes are numbered from to The tournament is held in stages In each stage the athletes are split into pairs in such a way that each athlete belongs exactly to one pair In each pair the athletes compete against each other and exactly one of them wins The winner of each pair advances to the next stage the athlete who was defeated gets eliminated from the tournament The pairs are formed as follows in the first stage athlete competes against athlete competes against competes against and so on in the second stage the winner of the match competes against the winner of the match the winner of the match competes against the winner of the match and so on the next stages are held according to the same rules When athletes and compete the winner is decided as follows if is odd the athlete with the lower index wins i e if then wins otherwise wins if is even the athlete with the higher index wins The following picture describes the way the tournament with goes Your task is the following one given the integer determine the index of the athlete who wins the tournament ,During the first stage every player with an even index competes against a player with an odd index so in each match during the first stage the player whose index is smaller wins The pairs are formed in such a way that in each pair the player with an odd index has smaller index so all players with even indices get eliminated and all players with odd indices advance to the next stage All of the remaining matches are between players with odd indices so the winner of each match is the player with the larger index So the overall winner of the tournament is the player with the greatest odd index which is Note in some languages for example C standard power functions work with floating point numbers instead of integers so they will produce the answer as a floating point number which may lead to wrong formatting of the output and or calculation errors You might have to implement your own power function that works with integers or compute using a loop ,1
565,You are given a circular array with elements The elements are numbered from some element with values from to in clockwise order The th cell contains the value The robot Simba is in cell Each moment of time the robot is in some of the cells at the begin he is in In one turn the robot can write out the number written in current cell or move to the adjacent cell in clockwise or counterclockwise direction To write out the number from the cell Simba doesn t spend any time but to move to adjacent cell Simba spends one unit of time Simba wants to write the number from each cell one time so the numbers will be written in a non decreasing order Find the least number of time units to write out all numbers ,The author solution for this problem uses dynamic programming I think that this problem can t be solved by greedy ideas Let s calculate two dp s z1i is the answer to the problem if all numbers less than ai are already printed but the others are not and z2i is the answer to the problem if all numbers less than or equal to ai are already printed but the others are not Let s denote dij the least distance between i and j on the circular array and odij is the distance from i to j in clockwise order Easy to see that z2i minj zj dij for all j such that the value aj is the least value greater than ai Now let s calculate the value z1i Consider all elements equals to ai in one of them we are If there is only one such element then z1i z2i Otherwise we have two alternatives to move in clockwise or counterclockwise direction Let we are moving in clockwise direction the last element from which we will write out the number would be the nearest to the i element in counterclockwise direction let s denote it u Otherwise at last we will write out the number from the nearest to the i element in clockwise direction let s denote it v Now z1i min z2u odiu z2v odvi Easy to see that the answer to the problem is mini z1i dsi over all i such that ai is the smallest value in array and s is the start position Additionally you should restore the answer To do that on my mind the simplest way is to write the recursive realization of dp test it carefully and then copy it to restore answer see my code below Of course it s possible to restore the answer without copy paste For example you can add to your dp parameter b which means it s need to restore answer or not Complexity O n2 Code ,1
566, towns are arranged in a circle sequentially The towns are numbered from to in clockwise order In the th town there lives a singer with a repertoire of minutes for each Each singer visited all towns in clockwise order starting with the town he lives in and gave exactly one concert in each town In addition in each town the th singer got inspired and came up with a song that lasts minutes The song was added to his repertoire so that he could perform it in the rest of the cities Hence for the th singer the concert in the th town will last minutes in the th town the concert will last minutes in the th town the duration of the concert will be in the town minutes You are given an array of integer numbers where is the total duration of concerts in the th town Reconstruct any correct sequence of integers or say that it is impossible ,First Consider the sum If we substitute the formula of then for every the coefficient at will be equal to so we can find the sum of all is equal to If the sum of isn t divisible by then the answer is Now let s consider the difference between two neighboring towns so If the value of we found isn t a positive integer then the answer if Otherwise we can find a single value of for every It s easy to see that these values are correct Overall complexity per testcase ,1
567,Vasya got really tired of these credits from problem F and now wants to earn the money himself He decided to make a contest to gain a profit Vasya has problems to choose from They are numbered from to The difficulty of the th problem is Moreover the problems are given in the increasing order by their difficulties In order to add the th problem to the contest you need to pay burles to its author For each problem in the contest Vasya gets burles So the total earnings for the contest are calculated as follows if Vasya takes problem to the contest he needs to pay to its author for each problem in the contest Vasya gets burles let If Vasya takes all the tasks with indices from to to the contest he also needs to pay If then Calculate the maximum profit that Vasya can earn by taking a consecutive segment of tasks ,We can first compute all values of Since we only care about the maximum such value within our segment we can use div conquer to solve every segment In particular if we know the index of the maximum value in we know that any segment crossing this index has this value as its maximum We can thus solve all segments crossing this maximum and recurse on the left and right sides To find the best crossing segment note that each problem contributes a value of We can independently find the largest sum starting from our crossing index going left and the largest sum going right and add these two together for the best overall crossing segment Unfortunately since we can t guarantee that the maximum indices will divide our interval nicely in half this does not lead to the usual runtime of div conquer but is instead in the worst case To improve on this we can precompute partial sums of and use RMQ to find the minimum sum left of the crossing index and the maximum sum right of the crossing index This reduces the crossing computation from per index to or giving an overall runtime of Code 49036431 ,1
568,Polycarp has positive integers and He can perform the following operation Choose a integer and multiply of the integers or by Can Polycarp make it so that after performing the operation the sequence of three numbers forms an arithmetic progression Note that you the order of and Formally a sequence is called an arithmetic progression AP if there exists a number called common difference such that for all from to In this problem For example the following sequences are AP and The following sequences are not AP and You need to answer independent test cases ,At first notice that if only programmers are taken then the same or even better answer can be achieved if strongest programmers are taken Now let s sort the programmers in a non increasing order and choose some assignment into the teams For each team only the rightmost taken programmer of that team matters the sorted sequence implies that the rightmost is the weakest Take a look at the team with the strongest weakest member If the number of programmers in it is less than the position of the weakest member then you can safely rearrange the programmers before him in such a way that none of parameters of later teams change and the weakest member in the first one only becomes stronger After that you can get rid of the first team as it takes exactly the prefix of all the programmers and proceed to fix the later teams Thus we can see that there is an optimal solution such that each team is a segment and all the teams together take some prefix of the programmers So we can finally run a greedy solution that takes programmers from left to right and increases the answer if the conditions for the latest team hold Overall complexity ,0
569,Let s analyze a program written on some strange programming language The variables in this language have names consisting of to characters and each character is a lowercase or an uppercase Latin letter or a digit There is an extra constraint that the first character should not be a digit There are four types of operations in the program each denoted by one of the characters or Each line of the program has one of the following formats where and are valid variable names where and are valid variable names and op is an operation character The program is executed line by line and the result of execution is stored in a variable having the name If is never assigned in the program then the result will be equal to the value of before running the program Two programs are called equivalent if no matter which operations do characters and denote but obviously performing the same operation on the same arguments gives the same result and which values do variables have before execution of program the value of after running the first program is equal to the value of after running the second program the programs are executed independently You are given a program consisting of lines Your task is to write a program consisting of minimum possible number of lines that is equivalent to the program you are given ,I could ve explained the jury solution however after the contest I found a much easier and more understandable solution by one of the participants I put one of jury s solutions under the spoiler along with a link to the solution I m explaining Let s restate the problem in a more convinient way Initially we are given some directed acyclic graph Let there be nodes of two kinds For a direct set operation These will have a single outgoing edge to another node For a binary operation These will have two outgoing edges to other nodes However it s important which edge is the left one and which is the right one We also have to make dummy vertices for the variables which only appeared at the right side of some operation We are allowed to remove any direct set operations we will simulate this by compressing the edges of the graph Instead of doing we ll do Value wise this is the same but variable don t rely on anymore so might be deleted We ll build the entire graph line by line Let s maintain array which will keep the current value of each variable It will store the node itself It s probably better to store both kinds of nodes in a separate array so that and the pointers to the ends of the edges could be integers If we encountered no variable getting set then the answer is 0 Otherwise let s traverse from the node representing the current value of to every reachable node While building the graph we were compressing every unoptimal operation thus all reachable nodes matter Finally the last operation on might have been just a direct set That s unoptimal so we ll handle that case separately ,1
570,You are given two permutations and both consisting of elements Permutation of elements is such a integer sequence that each value from to appears exactly once in it You are asked to perform two types of queries with them calculate the number of values which appear in both segment of positions in permutation and segment of positions in permutation swap values on positions and in permutation Print the answer for each query of the first type It is guaranteed that there will be at least one query of the first type in the input ,At first time limit was not that tight for the problem We didn t want any sqrt bitset or straight up solution to pass and it s close to none to pass Jury solution works faster than twice the time limit so we decided 6 seconds is alright The task is purely about implementation You renumerate numbers in permutations so that the queries are and then have the structure to make update in point and sum on rectangle Renumeration in my case was making the first permutation into identity one and changing the numbers in second appropriately You can choose the structure you want I ll tell about the one I use when the queries are offline For online the common technique is having BITs each with treap in it ordered set template from pbds is usually enough For offline you can precalculate the values to fall into each BIT beforehand and do BIT on these values inside Preprocess all the update and get queries adding into all the BITs will fall into Then sort them and leave only unique occurrences Overall complexity ,1
571,Petya is a math teacher of his students has written a test consisting of questions For each student it is known which questions he has answered correctly and which he has not If the student answers the th question correctly he gets points otherwise he gets points Moreover the points for the questions are distributed in such a way that the array is a permutation of numbers from to For the th student Petya knows that he expects to get points for the test Petya wonders how unexpected the results could be Petya believes that the of the results for students is equal to where is the number of points that the th student has got for the test Your task is to help Petya find such a permutation for which the of the results is maximum possible If there are multiple answers print any of them ,Let s design a naive solution first For each of the given triples we have two options either write the string on the tree in the order from to or in reverse order Some options conflict with each other So we can treat this problem as an instance of 2 SAT create a variable for each of the given strings which is true if the string is not reversed and false if it is reversed find all conflicting pairs of options and then run the usual algorithm for solving 2 SAT Unfortunately the number of conflicting pairs can be up to so we need to improve this solution Let s introduce a variable for each vertex of the tree which will define the character we write on it At first it looks like we can t use these variables in 2 SAT since the number of possible characters is not But if a vertex is covered by at least one path in a triple then there are only two possible characters we can write in this vertex either the character which will land on this position if we write the string from to or the character on the opposite position in the string And obviously if a vertex is not covered by any triple we can write any character on it Okay now for each vertex we have two options for a character and Let the variable be true if we write on vertex and false if we write Also for each triple let s introduce a variable which is true if the string is written from to and false if it is written in reversed order If the vertex is the th one on the path from to then we should add the following constraints in our 2 SAT if we need a constraint NOT OR NOT if we need a constraint OR NOT if we need a constraint NOT OR if we need a constraint OR Thus we add at most constraints in our 2 SAT The only thing we haven t discussed is how to actually restore each path from to this can be done either with any fast algorithm that finds LCA or by searching for LCA naively by ascending from one of those vertices until we arrive at the ancestor of another vertex this approach will visit at most vertices Overall this solution runs in ,0
572,Let s call an undirected graph if and only if for each edge the greatest common divisor of and is If there is no edge between some pair of vertices and then the value of doesn t matter The vertices are numbered from to Construct a graph with vertices and edges such that it is connected and it contains neither self loops nor multiple edges If there exists no valid graph with the given number of vertices and edges then output If there are multiple answers then print any of them ,Suppose at the end you won matches what can be your final place Look at each opponent with indexed Since the th opponent indexed won games against the other opponents even if they win against you they ll gain wins in total and can t affect your place since your place is decided by only opponents who won strictly more matches than you From the other side let s look at each opponent with indexed Even if they lose to you they still have wins you have only so all of them have strictly more wins than you As a result there is only one opponent whose match against you can affect your final place if you won against them your place will be otherwise your place will be Now let s compare your possible places if you win games with places for winning only games wins gives you places or while winning leads you to places or that objectively worse In other words it s always optimal to win as many matches as possible How to win the most number of games It s to choose the easiest opponents Let s sort array and find the maximum prefix with So we found maximum number of games we can win The last is to check can we get place or only If contains among smallest values then we ll take place Otherwise let s try to insert in this set i e let s erase the biggest among them and insert If the sum is still lower or equal to it s success and we get place Otherwise our place is The total complexity is because of sorting ,0
573,Mishka started participating in a programming contest There are problems in the contest Mishka s problem solving skill is equal to Mishka arranges all problems from the contest into a list Because of his weird principles Mishka only solves problems from one of the ends of the list Every time he chooses which end left or right he will solve the next problem from Thus each problem Mishka solves is either the leftmost or the rightmost problem in the list Mishka cannot solve a problem with difficulty greater than When Mishka solves the problem it disappears from the list so the length of the list decreases by Mishka stops when he is unable to solve any problem from any end of the list How many problems can Mishka solve ,Let some vertex be responsible for a segment of leaves Then her left son is responsible for the segment and the right for the segment Note that if we do not apply the operation to this vertex then it will not be possible to move some element from the right son s segment to the left son s segment It remains to understand when we need to apply the operation to the vertex Let the maximum on the segment be the minimum on the same segment is Then if lies in the right son and in the left then we should obviously apply the operation for the reason described above In the case when lies in the left son and in the right the application of the operation will definitely not allow you to get a solution Let s continue to act in a similar way recursively from the children of the current vertex At the end we should check whether we have received a sorted permutation The above solution works for since there are levels in the tree and at each level vertexes are responsible for sheets in total You can optimize this solution to if you pre calculate the maximum and minimum for each vertex ,0
574,A tree is an undirected connected graph without cycles You are given a tree of vertices Find the number of ways to choose exactly vertices in this tree i e a element subset of vertices so that all pairwise distances between the selected vertices are equal in other words there exists an integer such that for all are in selected vertices where is the distance from to Since the answer may be very large you need to output it modulo ,First of all we will calculate the sum of maximum and minimum values on all segments separatedly Then the answer is the difference between the sum of maximum values and minimum values How can we calculate the sum of minimum values for example For each element we will try to find the number of segments where it is the So we will calculate two arrays means that is the maximum index such that and and means that is the minimum index such that and So actually and represent the borders of the largest segment where is the and we need to exclude those borders While knowing these values we can calculate the number of subsegments where is the How can we calculate for example the array We will use a stack where we will store some indices in the array in such a way that if we change all indices to the values in the array they will be in sorted order the maximum element will be at the top of the stack and the minimum at the bottom Let s calculate from the minimum index to the maximum When we calculate we remove all elements such that from the stack since the stack is sorted all these elements will be at the top of the stack and when we encounter the first element such that it is guaranteed that all elements below it don t need to be deleted Then if there s any element on top of the stack it becomes the value of then we push into the stack Since every element will be added and deleted not more than one time the complexity of this algorithm is linear We can apply the same technique to calculate the values of and the sum of maximums ,0
575,For a sequence of strings let s define the function as the number of different strings that are subsequences of string i e the number of such strings for an empty sequence is You are given a sequence of strings Every string in this sequence consists of lowercase Latin letters and is i e each string begins with several maybe zero characters then several maybe zero characters ends with several maybe zero characters For each of subsequences of calculate the value of the function modulo ,For a string let s define its as the mask of bits where th bit is if and only if is a subsequence of Let s suppose we somehow calculate the number of strings for each and we denote this as for a mask How can we use this information to find Suppose this set of strings is represented by a mask then the strings which are included in are the strings such that their characteristic mask has bitwise AND with equal to i e these characteristic masks are submasks of We can use SOS DP to calculate these sums of over submasks in The only problem is how to calculate for every mask Let s analyze when a string is a subsequence of a sorted string The subsequence should be sorted as well and the number of occurrences of every character in a subsequence should not exceed the number of occurrences of that character in So if there are characters in characters in and so on then the number of its subsequences is What about subsequences of every string from a set These conditions on the number of occurrences should apply to every string in the set so for each character we can calculate the minimum number of occurrences of this character in each string of the set add and multiply these numbers to get the number of strings that are subsequences of each string in a set These values can be calculated in for all subsequences of using recursive approach Can these numbers be used as Not so fast Unfortunately these values let s call them are the numbers of subsequences of the chosen sets of strings but we have no information about the strings that are not included in the chosen set of strings To handle it we can use the following equation where means that is a submask of To transform the values of into the values of we can flip all bits in the masks so is the sum of over all submasks of apply inverse SOS DP also known as Mobius transformation and then flip all bits in the masks again So we found a way to calculate all values of in and we have already discussed what to do with them in the first paragraph of the editorial The overall complexity of the solution is ,1
576,A permutation of length is an array which contains every integer from to inclusive and moreover each number appears exactly once For example is a permutation of length For a given number find a permutation in which absolute difference that is the absolute value of difference of any two neighboring adjacent elements is between and inclusive Formally find such permutation that for each Print any such permutation for the given integer or determine that it does not exist ,If then there is no answer You can do some handwork to be sure Otherwise the answer exists and there is one simple way to construct it firstly let s put all odd integers into the answer in decreasing order then put and all other even numbers in increasing order To test that it always works you can run some kind of checker locally you can check all tests very fast in less than one second this may be very helpful sometimes ,1
577,Polycarp wants to cook a soup To do it he needs to buy exactly liters of water There are only two types of water bottles in the nearby shop liter bottles and liter bottles There are infinitely many bottles of these two types in the shop The bottle of the first type costs burles and the bottle of the second type costs burles correspondingly Polycarp wants to spend as few money as possible Your task is to find the minimum amount of money in burles Polycarp needs to buy exactly liters of water in the nearby shop if the bottle of the first type costs burles and the bottle of the second type costs burles You also have to answer independent queries ,The answer can be calculated by easy formula where is divided by rounded down and is modulo ,1
578,Let s denote the function that takes a string consisting of lowercase Latin letters and dots and returns a string consisting of lowercase Latin letters as follows let be an empty string process the characters of from left to right For each character do the following if is a lowercase Latin letter append at the end of the string otherwise delete the last character from if is empty before deleting the last character the function crashes return as the result of the function You are given two strings and You have to delete the minimum possible number of characters from so that and the function does not crash Note that you aren t allowed to insert new characters into or reorder the existing ones ,The core idea of the solution is the following dynamic programming is the minimum number of characters we have to delete if we considered a subsequence of first characters of and it maps to first characters of There are three obvious transitions in this dynamic programming we can go from to by skipping if we can go from to if is a dot we can go from to Unfortunately these transitions cannot fully handle the case when we want to put some character and then delete it these transitions don t allow us to do it for any character only for some specific ones in specific situations To handle it suppose we want to take the character and then delete it and we model it as follows there exists the fourth transition from to without deleting anything where is the length of the shortest substring of starting from that becomes empty if we apply the function to it This substring can be described as a regular bracket sequence where opening brackets correspond to letters and closing brackets to dots We can precalculate this substring for each in Why is this transition enough Suppose we don t want to take some letter from this shortest substring in the optimal answer since it is the shortest substring meeting these constraints the number of letters on each prefix of it excluding the substring itself is greater than the number of dots so we can instead skip the first letter and try applying this transition from so this case is handled And skipping any dots from this shortest substring is also suboptimal since we have to get rid of the character ,1
579,Leha is planning his journey from Moscow to Saratov He hates trains so he has decided to get from one city to another by car The path from Moscow to Saratov can be represented as a straight line well it s not that straight in reality but in this problem we will consider it to be straight and the distance between Moscow and Saratov is km Let s say that Moscow is situated at the point with coordinate km and Saratov at coordinate km Driving for a long time may be really difficult Formally if Leha has already covered kilometers since he stopped to have a rest he considers the th kilometer as It is guaranteed that for every The difficulty of the journey is denoted as the sum of difficulties of each kilometer in the journey Fortunately there may be some rest sites between Moscow and Saratov Every integer point from to may contain a rest site When Leha enters a rest site he may have a rest and the next kilometer will have difficulty the kilometer after it difficulty and so on For example if and there is a rest site in coordinate the difficulty of journey will be the first kilometer will have difficulty the second one then Leha will have a rest and the third kilometer will have difficulty the fourth and the last one Another example if and there are rest sites in coordinates and the difficulty of Leha s journey is Leha doesn t know which integer points contain rest sites So he has to consider every possible situation Obviously there are different distributions of rest sites two distributions are different if there exists some point such that it contains a rest site in exactly one of these distributions Leha considers all these distributions to be equiprobable He wants to calculate the expected value of difficulty of his journey Obviously is an integer number You have to calculate it modulo ,Firstly if we may obtain reliability at least then we may obtain reliability not less than with the same number of archers So we may use binary search and check whether we may obtain reliability at least How can we check it Let s find the leftmost section such that its defense level is less than Let its index be We obviously have to add some archers controlling this section and since every section to the left of it is already controlled the best option where to add archers is the section with index After we added enough archers we move to next section such that its defense level is less than and do the same If we run out of archers without protecting all the sections then it s impossible to obtain reliability To do checking in we may use prefix sums or sliding window technique ,0
580,You are given strings of length at most For each string determine if there exist two strings and such that That is is the concatenation of and Note that be equal to Recall that the concatenation of strings and is where and are the lengths of strings and respectively For example concatenation of and is ,Use some data structure that allows you to answer queries of the form does the string appear in the array For example in C you can use a while in Python you can use a dictionary Afterwards for each string brute force all strings and such that There are at most such strings because has length at most Then check if both and appear in the array using your data structure The time complexity is per test case where is the maximum length of an input string ,1
581,There are three doors in front of you numbered from to from left to right Each door has a lock on it which can only be opened with a key with the same number on it as the number on the door There are three keys one for each door Two of them are hidden behind the doors so that there is no more than one key behind each door So two doors have one key behind them one door doesn t have a key behind it To obtain a key hidden behind a door you should first unlock that door The remaining key is in your hands Can you open all the doors ,Note that we never have a choice in what door should we open First we open the door with the same number as the key in our hand Then the door with the same number as the key behind the first opened door Finally the door with the same number as the key behind the second opened door If any of the first and second opened doors didn t have a key behind it then it s impossible Otherwise we open every door Let be the keys behind the corresponding doors Then we should check if is not zero and is not zero Overall complexity per testcase ,1
582,Petya has a simple graph that is a graph without loops or multiple edges consisting of vertices and edges The weight of the th vertex is The weight of the th edge is A subgraph of a graph is some set of the graph vertices and some set of the graph edges The set of edges must meet the condition both ends of each edge from the set must belong to the chosen set of vertices The weight of a subgraph is the sum of the weights of its edges minus the sum of the weights of its vertices You need to find the maximum weight of subgraph of given graph ,We can notice that the answer is the number of zeros between the leftmost occurrence of and the rightmost occurrence of Why is it true Let s take the leftmost maximum by inclusion segment of and just shift it right We can see that using this algorithm we will do exactly described amount of moves and there is no way improve the answer ,0
583,There are three doors in front of you numbered from to from left to right Each door has a lock on it which can only be opened with a key with the same number on it as the number on the door There are three keys one for each door Two of them are hidden behind the doors so that there is no more than one key behind each door So two doors have one key behind them one door doesn t have a key behind it To obtain a key hidden behind a door you should first unlock that door The remaining key is in your hands Can you open all the doors ,Statement the function of the sum is a polynomial of degree over variable This statement can be proved by induction to make step you should take the derivative Denote the value of the sum for We can easily calculate the values of for from to in time If then we already have the answer Otherwise let s use Lagrange polynomial to get the value of the sum for the given value The Largange polynomial have the following form In our case and To calculate in a linear time we should use that for all It s help us because with that property we can recalculate the inner product for from the inner product for simply by multiplying by two values and dividing by two values So we can calculate the sum in linear time over ,0
584,You have a string consisting of lowercase Latin alphabet letters You can color some letters in colors from to It is not necessary to paint all the letters But for each color there must be a letter painted in that color Then you can swap any two symbols painted in the same color as many times as you want After that strings will be created th of them will contain all the characters colored in the color written in the order of their sequence in the string Your task is to color the characters of the string so that all the resulting strings are palindromes and the length of the shortest of these strings is as as possible Read the note for the first test case of the example if you need a clarification Recall that a string is a palindrome if it reads the same way both from left to right and from right to left For example the strings and are palindromes but the strings and are not ,Let be the number of xor sequences of length with the last element equal to Let be equal to one if contains the number of ones in binary presentation that is multiple of three Otherwise let be equal to zero Consider a vectors and a matrix Easy to see that So Let s use the associative property of matrix multiplication at first let s calculate with binary matrix exponentiation and then multiply it to the vector ,0
585,You are given a set of strings Each string consists of lowercase Latin letters For each string in this set you want to calculate the minimum number of seconds required to type this string To type a string you have to start with an empty string and transform it into the string you want to type using the following actions if the current string is choose some lowercase Latin letter and append it to the back of so the current string becomes This action takes second use autocompletion When you try to autocomplete the current string a list of all strings such that is a prefix of is shown to you and the strings are ordered lexicographically You can transform into the th string from this list in seconds Note that you may choose any string from this list you want it is not necessarily the string you are trying to type What is the minimum number of seconds that you have to spend to type each string from ,First of all the information given in the input is the structure of a trie built on and some other strings so we can store this information in the same way as we store a trie Okay now let s calculate the number of seconds required to type each string with dynamic programming let be the number of seconds required to arrive to the th vertex of the trie For regular vertices where is the parent of vertex for vertices corresponding to strings from values should be updated with the time required to autocomplete some of the parents to the current vertex To do these updates let s calculate the answers for all strings in lexicographical order We will run DFS on the trie and maintain a segment tree on the path from the root to the current vertex In the segment tree we will store the values of where is the number of seconds required to autocomplete from to the current vertex Obviously if we are currently in a vertex representing a word from then we have to find the minimum in this segment tree and that will be the cost to get to current vertex using autocompletion How to maintain Recall that we are running DFS on trie in lexicographical order When we want to compute the answer for the first string the value of for all vertices is since our string will be the first in all autocompletion lists And here s a trick to maintain these values for other strings whenever we compute the answer for some string add on the whole tree For vertices that are ancestors of both current string and some next string this will stay and increase the cost to autocomplete the next string accordingly but for vertices which are not on the path to some next string the values of will be already deleted from the segment tree and replaced by new values so this addition does not affect them Overall this works in but it can be written in with a vector instead of a segment tree since all additions and minimum queries affect the whole structure ,1
586,Ivan recently bought a detective book The book is so interesting that each page of this book introduces some sort of a mystery which will be explained later The th page contains some mystery that will be explained on page Ivan wants to read the whole book Each day he reads the first page he didn t read earlier and continues to read the following pages one by one until all the mysteries he read about are explained and clear to him Ivan stops if there does not exist any page such that Ivan already has read it but hasn t read page After that he closes the book and continues to read it on the following day from the next page How many days will it take to read the whole book ,Firstly let s generate first primes It can be done in almost naively just check all elements in range It also can be done with Eratosthenes sieve in or We also can calculate for each number in this range the maximum its divisor non equal to it if this number is not a prime And in other case we can calculate the index of this prime Using all this information we can restore the array Let s maintain a multiset a set in which multiple copies of the same element are allowed of all elements in While it is not empty let s take the maximum element from this set If it is prime we can check it using the information calculated earlier then it is some Let s find the index of this prime using calculated information remove this element and push in and continue Otherwise this element is not a prime and then it is some Let s remove it and its maximum divisor non equal to it from the multiset push in and continue ,0
587,Polycarp plays a computer game In this game the players summon armies of magical minions which then fight each other Polycarp can summon different minions The initial power level of the th minion is and when it is summoned all previously summoned minions power levels are increased by The minions can be summoned in any order Unfortunately Polycarp cannot have more than minions under his control To get rid of unwanted minions after summoning them he may destroy them Each minion can be summoned and destroyed only once Polycarp s goal is to summon the strongest possible army Formally he wants to maximize the sum of power levels of all minions under his control those which are summoned and not destroyed Help Polycarp to make up a plan of actions to summon the strongest possible army ,The problem can be solved by the next greedy algorithm At first we need to store the last character of the alphabet we haven t obtained for example in variable initially it will be equal to Then we will just iterate over all characters of the string from left to right and if the current character of the string is not greater than we just replace it to and increase by 1 If in any moment will be greater than we got the answer And if after iterating over the string will be not greater than the answer is 1 ,0
588,Vlad came home and found out that someone had reconfigured the old thermostat to the temperature of The thermostat can only be set to a temperature from to inclusive the temperature cannot change by less than Formally in one operation you can reconfigure the thermostat from temperature to temperature if and You are given and Find the minimum number of operations required to get temperature from temperature or say that it is impossible ,It s quite easy to see that ab x bmod a bmod b x bmod a bmod b What does it mean The property given in the statement holds for x if and only if it holds for x bmod ab It allows us to answer each testcase in O ab q as follows for each number from 0 to ab 1 we may check the given property before processing the queries and build an array of prefix sums on it to efficiently count the number of integers satisfying the property from the segment 0 y where y ab Then each query l r can be divided into two prefix queries 0 l 1 and 0 r To answer a prefix query 0 p in O 1 we can calculate the number of full segments of length ab inside this prefix that is lfloor frac p ab rfloor and the length of the last segment of numbers that don t belong into a full segment that is p bmod ab To handle full segments we multiply the number of integers satisfying the property on one segment by the number of such segments and to handle the last part of segment we use prefix sums ,0
589,Yet another round on DecoForces is coming Grandpa Maks wanted to participate in it but someone has stolen his precious sofa And how can one perform well with such a major loss Fortunately the thief had left a note for Grandpa Maks This note got Maks to the sofa storehouse Still he had no idea which sofa belongs to him as they all looked the same The storehouse is represented as matrix Every sofa takes two neighbouring by some side cells No cell is covered by more than one sofa There can be empty cells Sofa is standing to the left of sofa if there exist two such cells and that is covered by and is covered by Sofa is standing to the top of sofa if there exist two such cells and that is covered by and is covered by Right and bottom conditions are declared the same way Also some sofa can be both to the top of another sofa and to the bottom of it The same is for left and right conditions The note also stated that there are sofas to the left of Grandpa Maks s sofa to the right to the top and to the bottom Grandpa Maks asks you to help him to identify his sofa It is guaranteed that there is no more than one sofa of given conditions Output the number of Grandpa Maks s sofa If there is no such sofa that all the conditions are met for it then output ,We can notice that the answer is the number of zeros between the leftmost occurrence of and the rightmost occurrence of Why is it true Let s take the leftmost maximum by inclusion segment of and just shift it right We can see that using this algorithm we will do exactly described amount of moves and there is no way improve the answer ,0
590,You are given an undirected tree of vertices Some vertices are colored blue some are colored red and some are uncolored It is guaranteed that the tree contains at least one red vertex and at least one blue vertex You choose an edge and remove it from the tree Tree falls apart into two connected components Let s call an edge if neither of the resulting components contain vertices of both red and blue colors How many edges are there in the given tree ,Let s root the tree by some vertex The edge where is the parent of is now nice if and only if the subtree of contains either all red vertices of the tree and no blue vertices or all blue vertices of the tree and no red vertices That s because removing that edge splits the tree into the subtree of and the component of every other vertex Thus the task is to calculate the number of red and blue vertices in each subtree with dfs and check a couple of conditions Overall complexity ,1
591,You are given an integer and a string that consists only of characters a a lowercase Latin letter and an asterisk Each asterisk should be replaced with several from to inclusive lowercase Latin letters b Different asterisk can be replaced with different counts of letter b The result of the replacement is called a Two strings and are different if they either have different lengths or there exists such a position that A string is lexicographically smaller than a string if and only if one of the following holds is a prefix of but in the first position where and differ the string has a letter that appears earlier in the alphabet than the corresponding letter in Now consider all different BA strings and find the th lexicographically smallest of them ,Firstly let s approach this problem as if the steps were and Then the answer is if and It s easy to see that if the answer to this problem is then the answer to the original one is also Let s return to the original problem and take a look at some sequence of steps It ends in some point Define as and as The parity of is the same as the parity of It is like this because every type of move changes parity of both and So the answer is if and Overall complexity ,0
592,Grandma Laura came to the market to sell some apples During the day she sold all the apples she had But grandma is old so she forgot how many apples she had brought to the market She precisely remembers she had buyers and each of them bought exactly half of the apples she had at the moment of the purchase and also she gave a half of an apple to some of them as a gift if the number of apples at the moment of purchase was odd until she sold all the apples she had So each buyer took some integral positive number of apples but maybe he didn t pay for a half of an apple if the number of apples at the moment of the purchase was odd For each buyer grandma remembers if she gave a half of an apple as a gift or not The cost of an apple is the number is even Print the total money grandma should have at the end of the day to check if some buyers cheated her ,Consider the process from the end The last buyer will always buy a half of an apple and get a half for free so the last string always is halfplus After that each buyer increases the number of apples twice and also maybe by one So we simply have the binary presentation of the number of apples from the end To calculate the answer we should simply restore that value from the end and also calculate the total money grandma should have ,1
593, children are standing in a circle and playing the counting out game Children are numbered clockwise from to In the beginning the first child is considered the leader The game is played in steps In the th step the leader counts out people in clockwise order starting from the next person The last one to be pointed at by the leader is eliminated and the next player after him becomes the new leader For example if there are children with numbers currently in the circle the leader is child and then counting out rhyme ends on child who is eliminated Child becomes the leader You have to write a program which prints the number of the child to be eliminated on every step ,At first notice that if there exists a value for the second shop then the value divisible by also exists For any you can round it up to the nearest multiple of That won t change the price for the second shop and only increase the price for the first shop You can also guess that if there exists a value for the first shop then the value with modulo also exists exactly donut on top of some number of full boxes Following the same logic the second shop needs an entire new box and the first shop needs only an extra donut So let s take a look at the smallest values of two kinds this value is valid for the second shop if one box is cheaper than donuts in the first shop Otherwise no matter how many boxes will you take they will never be cheaper than the corresponding number of donuts this value is valid for the first shop if one donut is cheaper than one box in the second shop Apply the same idea otherwise no value for the first shop is valid Overall complexity per testcase ,0
594,Vova s house is an array consisting of elements yeah this is the first problem I think where someone in the array There are heaters in some positions of the array The th element of the array is if there is a heater in the position otherwise the th element of the array is Each heater has a value is the same for all heaters This value means that the heater at the position can warm up all the elements in range Vova likes to walk through his house while he thinks and he hates cold positions of his house Vova wants to switch some of his heaters on in such a way that each element of his house will be warmed up by at least one heater Vova s target is to warm up the whole house all the elements of the array i e if and heaters are at positions and then Vova can warm up the whole house if he switches all the heaters in the house on then the first elements will be warmed up by the first heater and the last elements will be warmed up by the second heater Initially all the heaters are off But from the other hand Vova didn t like to pay much for the electricity So he wants to switch the number of heaters on in such a way that each element of his house is warmed up by at least one heater Your task is to find this number of heaters or say that it is impossible to warm up the whole house ,Let s solve this problem greedily Let be the last position from the left covered by at least one heater Initially equals While lets repeat the following process firstly we have to find the rightmost heater in range It can be done in time because of given constrains or in using precalculated prefix values for each in range If there is no such heater then the answer is otherwise let s set increase the answer by and repeat the process if There is another one solution to this problem Assume that the initial answer equals to the total number of heaters Let s calculate an array of length where means the number of heaters covering the th element It can be done in This array will mean that we are switch all the heaters on and we know for each element the number of heaters covers this element Now if for at least holds then the answer is Otherwise let s switch useless heaters off Let s iterate over all heaters from left to right Let the current heater have position We need to check if it is useless or not Let s iterate in range and check if there is at least one element in this segment such that If there is then the current heater is not useless and we cannot switch it off Otherwise we can decrease the answer by switch this heater off decrease for all in range and continue the process ,1
595,Alice and Bob play a game The game consists of several sets and each set consists of several rounds Each round is won either by Alice or by Bob and the set ends when one of the players has won rounds in a row For example if Bob won five rounds in a row and then two sets ends You know that Alice and Bob have already played rounds and you know the results of some rounds For each from to calculate the maximum possible number of sets that could have already finished if each set lasts until one of the players wins rounds in a row It is possible that the last set is still not finished in that case you should not count it in the answer ,The prerequisites for each lecture form a rooted tree so let s forget about the legend and learn how to find such an order of vertices of a tree that all conditions work Let s introduce some algorithm that produces an ordering of vertices for every possible case If any valid ordering exists it should produce a valid one So we will only have to check if the resulting ordering is fine and output it if it is If there were no special pairs the task would be perfectly solvable with an algorithm of topological sorting Thus let s come up with a way to modify the graph so that topsort could still be a solution We know that the vertices that are in the special pairs should follow each other in the ordering Look at these special pairs as edges as well Let s first imagine they are undirected These edges connect some vertices in the tree into components Each component should be a segment of vertices in a valid answer So how about we compress them into one vertex first each find some answer for a compressed version and decompress them back Let each of these connected components be a vertex in the new graph Two components are connected by an edge if there is a edge in the tree between vertices of the corresponding components Topsort in this graph will tell us the order the components should go However we should also find the order the vertices should go inside each component Let s topsort the graph of all directed special pairs and sort the vertices in that order in every component We can sort the entire graph instead of sorting each component separately because the components are totally independent Finally write down the answer iterate over the compressed vertices of the first new graph in the order of its topsort for each one write down all the actual vertices inside it in the order of the topsort of the second new graph Check if each vertex has its parent earlier than itself in the answer If all the graphs were topologically sortable and that holds then the answer exists and we found it Otherwise the answer doesn t exist Overall complexity O n log n ,0
596,You are given an array consisting of integers You are also given an integer value Let be the maximum sum of a contiguous subarray of after applying the following operation add to the elements on exactly positions An empty subarray should also be considered it has sum Note that the subarray doesn t have to include all of the increased elements Calculate the maximum value of for all from to independently ,Consider the naive solution Iterate over Then iterate over the segment that will have the maximum sum Let its length be Since is non negative it s always optimal to increase the elements inside the segment So if then the sum of the segment increases by Otherwise only the elements inside the segment will affect the sum thus it will increase by That can be written as Notice that we only care about two parameters for each segment Its length and its sum Moreover if there are several segments with the same length we only care about the one with the greatest sum Thus the idea of the solution is the following For each length find the segment of this length with the greatest sum Then calculate in by iterating over the length of the segment Overall complexity per testcase ,1
597,You are given an array consisting of integers You are also given an integer value Let be the maximum sum of a contiguous subarray of after applying the following operation add to the elements on exactly positions An empty subarray should also be considered it has sum Note that the subarray doesn t have to include all of the increased elements Calculate the maximum value of for all from to independently ,Of course there is no need to press home more than once and no need to press end at all because suppose we did something on suffix then pressed home did something on prefix and then pressed end and continue doing something on suffix Then we can merge these two sequences of moves on suffix and press home after we did anything we wanted on suffix and the answer will not get worse Now let s iterate over the position at which we will press home in range from to In other words we iterate over the position till which we press only left and backspace to fix the suffix So now we have the string and we want to get some suffix of from this string but we actually don t know which suffix of we want So let s iterate over the length of this suffix in a range from to Now we have the string and the string and we have to check if we can obtain this suffix of from this suffix of This part can be precalculated in greedily we just can store for each suffix of the rightmost position in in which this suffix is obtainable If we can obtain the current suffix then we obviously can say the number of moves to do that it is and actually do not depend on the suffix length because if we meet the character we need we just press left and move to the next character otherwise we press backspace and move to the next character deleting the one we don t need After that we press home and now we have to check if we can obtain from This part can also be precalculated greedily in like the part with rightmost positions for suffixes But the minimum number of moves required to obtain the prefix is tricky Actually if we consider these prefixes from right to left we want to match as many characters from the beginning as possible In other words if we reverse and we want to find their longest common prefix and this will be the number of characters we don t want to touch at all and if it is the longest common prefix it means that the next character is bad and we want to remove it anyway so the length of LCP of these two reversed prefixes is the only thing affecting the number of moves on the prefix This part can be precalculated in with simple dynamic programming using memory or with z function in time and memory we just need to build a z function on a string where is the concatenation of strings and is the reverse operation The required value of the z function for the fixed values and will be in the position And the answer for the prefix will be this is the number of extra characters on the prefix we have to delete plus plus because we have to press home But there is a corner case If the prefix is empty then we don t need to do all of this and the answer for prefix will be Complexity time and memory ,0
598,You are given two matrices and Each matrix contains exactly rows and columns Each element of is either or each element of is initially You may perform some operations with matrix During each operation you choose any submatrix of having size and replace every element in the chosen submatrix with In other words you choose two integers and such that and and then set and to Your goal is to make matrix equal to matrix Two matrices and are equal if and only if every element of matrix is equal to the corresponding element of matrix Is it possible to make these matrices equal If it is you have to come up with a sequence of operations that makes equal to Note that you don t have to minimize the number of operations ,Let s look at the answer Let s see how many commands the robot can execute Since the robot breaks goes outside the field if any command causes it to break it either leads to its total shift relative to of exactly to the left or exactly to the right or similarly of exactly up or exactly down Denote by and the sum of the maximum positive right down and maximum negative left up shifts in the corresponding direction By adding up the above constraints we get the fact that the robot will not fall off the board only if and Note that the reverse is also true if both these conditions are satisfied then starting from the point where is the maximum shift along the direction the robot will not pass any of the board s edges Thus it is sufficient to find the number of commands which when executed hold the following invariant The horizontal shift can be calculated as the difference between the number of letters and the number of letters encountered Similarly the vertical shift as the difference of the numbers of and Let s iterate over the sequence of commands maintaining relevant values of for all After executing each command if the robot goes farther in some direction than ever before we update the corresponding Either we reach the end of or we meet a command after which either becomes equal to or becomes equal to and the robot breaks so the previous command was the last one successfully executed The possible answer is where the values are calculated one command before the robot broke ,0
599,PizzaForces is Petya s favorite pizzeria PizzaForces makes and sells pizzas of three sizes small pizzas consist of slices medium ones consist of slices and large pizzas consist of slices each Baking them takes and minutes respectively Petya s birthday is today and of his friends will come so he decided to make an order from his favorite pizzeria Petya wants to order so much pizza that each of his friends gets at least one slice of pizza The cooking time of the order is the total baking time of all the pizzas in the order Your task is to determine the minimum number of minutes that is needed to make pizzas containing at least slices in total For example if friends come to Petya s birthday he has to order pizzas containing at least slices in total He can order two small pizzas containing exactly slices and the time to bake them is minutes if friends come to Petya s birthday he has to order pizzas containing at least slices in total He can order a small pizza and a large pizza containing slices and the time to bake them is minutes if friends come to Petya s birthday he has to order pizzas containing at least slices in total He can order small pizzas medium pizzas and large pizzas in total they contain slices and the total time to bake them is minutes if only one friend comes to Petya s birthday he can order a small pizza and the time to bake it is minutes ,Note that the speed of cooking 1 slice of pizza is the same for all sizes 1 slice of pizza for 2 5 minutes If n is odd then we will increase it by 1 since the pizza is cooked only with an even number of pieces Now the value of n is always even If n 6 then for such n the answer is equal to the answer for n 6 so we can say that n max n 6 While n ge 12 we can order a small pizza Eventually the value of n will be equal to 6 8 or 10 This means that for any n there will be a set of pizzas with exactly n slices Then the answer is n 2 5 in the solution it is better to use the formula n 2 5 ,1
600,There are two rival donut shops The first shop sells donuts at retail each donut costs dollars The second shop sells donuts only in bulk box of donuts costs dollars So if you want to buy donuts from this shop then you have to buy the smallest number of boxes such that the total number of donuts in them is greater or equal to You want to determine two values how many donuts can you buy so that they are strictly cheaper in the first shop than in the second shop how many donuts can you buy so that they are strictly cheaper in the second shop than in the first shop If any of these values doesn t exist then that value should be equal to If there are multiple possible answers then print any of them ,Firstly let s calculate for each from to two following values and means the maximum length of the increasing sequence starting in the position and means the maximum length of the increasing sequence ending in the position Initially all values are the element itself The array can be calculated in order from right to left with the following condition if then otherwise it still remain The same with the array but we have to calculate its values in order from left to right and if then otherwise it still remain Having these arrays we can calculate the answer The initial answer if we don t remove any element is the maximum value of the array And if we remove the th element where then we can update the answer with the value if Time complexity ,0
601,You have a large rectangular board which is divided into cells the board has rows and columns Each cell is either white or black You paint each white cell either red or blue Obviously the number of different ways to paint them is where is the number of white cells After painting the white cells of the board you want to place the maximum number of dominoes on it according to the following rules each domino covers two adjacent cells each cell is covered by at most one domino if a domino is placed horizontally it covers two adjacent cells in one of the rows it should cover only red cells if a domino is placed vertically it covers two adjacent cells in one of the columns it should cover only blue cells Let the of the board be the maximum number of dominoes you can place Calculate the sum of of the board over all possible ways to paint it Since it can be huge print it modulo ,There are different solutions to this problem involving combinatorics and or dynamic programming but in my opinion it s a bit easier to look at the problem from the perspective of probability theory Let s suppose a coloring is already chosen Then it can be covered with dominoes greedily red and blue cells are independent from each other and for example red cells can be analyzed as a set of strips of them of different length Let s say that we cover each strip from left to right so in each strip the first domino covers the cells and the second domino the cells and and so on Let s calculate the value of the coloring that is the expected value of the coloring if it is chosen randomly Let it be then the answer is By linearity of expectation can be calculated as where is the set of all places we can use for a domino and is the probability that there is a domino in place in our domino covering which we construct greedily Each domino covers two adjacent cells so we can iterate on pairs of adjacent cells and for each pair find the probability that this pair is covered Let s suppose that we want to cover the cells and with a domino Then both of these cells should be red the length of the red strip before these cells should be even otherwise the cell will be paired with the cell The only thing we need to know in order to calculate the probability of these two conditions being true is the number of white cells before the cell which can be easily maintained Knowing the number of white cells before we can either use dynamic programming to calculate the required probability or do the math on several easy examples and try to notice the pattern if there are white cells before the current one the probability of that pair being covered with a domino let s call it is both these cells should be red if there is white cell before the current one the probability of that pair being covered with a domino let s call it is the cells and should be red but the cell before them should not be red is either the chosen two cells are red and the cell before them is not red or all four cells are red is and so on So knowing the number of white cells before and we easily calculate the probability of this pair being covered by a domino By summing up the probabilities over all pairs of adjacent white cells don t forget the vertical ones we get the average or expected value of the coloring All that s left is to multiply it by ,1
602,Limak is a grizzly bear He is big and dreadful You were chilling in the forest when you suddenly met him It s very unfortunate for you He will eat all your cookies unless you can demonstrate your mathematical skills To test you Limak is going to give you a puzzle to solve It s a well known fact that Limak as every bear owns a set of numbers You know some information about the set The elements of the set are distinct positive integers The number of elements in the set is The number is divisible by All elements are between and inclusive bears don t know numbers greater than For each in the set contains exactly elements that give remainder when divided by That is there are elements divisible by elements of the form elements of the form and so on Limak smiles mysteriously and gives you hints about his set The th hint is the following sentence If you only look at elements that are between and inclusive you will find exactly such elements in my set In a moment Limak will tell you the actual puzzle but something doesn t seem right That smile was very strange You start to think about a possible reason Maybe Limak cheated you Or is he a fair grizzly bear Given and hints check whether Limak can be fair i e there exists at least one set satisfying the given conditions If it s possible then print Otherwise print ,For each digit we will count how many times it has changed The number of changes for the first digit the lowest is calculated using the formula The number of changes for the second digit is calculated by the formula That is it is equivalent to the number of first digit changes for numbers from to To calculate the number of changes for the remaining digits you need to apply similar reasoning with dividing the numbers by ,0
603,In this problem we will consider undirected graphs consisting of vertices with weighted edges The weight of each edge is an integer from to An undirected graph is considered if the sum of weights of all edges incident to vertex is equal to the weight of MST in the graph MST is the minimum spanning tree a tree consisting of edges of the graph which connects all vertices and has the minimum sum of weights among all such trees the weight of MST is the sum of weights of all edges in it Calculate the number of graphs having exactly vertices and the weights of edges from to Since the answer might be large print it modulo ,Let the weight of the edge between the vertex to the vertex be Suppose there exists a pair of vertices and with indices greater than such that or Then if we choose the spanning tree with all vertices connected to it won t be an MST we can remove either the edge or the edge add the edge instead and the cost of the spanning tree will decrease So we should have for every pair It can be shown that this condition is not only necessary but sufficient as well if for every pair the condition holds the MST can t have the weight less than We can prove this by induction suppose that for simplicity in the spanning tree there should be at least one edge incident to vertex and its weight is at least there should be at least two edges incident to vertices and and their weights are at least there should be at least edges incident to vertices from to and their weights are at least Okay now let s show how to calculate the number of such graphs We can run the following dynamic programming let be the number of graphs where we have already connected vertices to the vertex and the maximum weight we have used is We start with and for each transition from we will iterate on the number of vertices we connect to the vertex with edges with weight let the number of those vertices be choose them with a binomial coefficient and also choose the weights for the edges that connect one of the chosen vertices with one of the vertices already connected to since for each of those edges we know that their weights should be in so we need to multiply the value in transition by where is the number of such edges Implementing this dynamic programming can be done in or both are sufficient ,1
604, You are given a sequence consisting of positive integers Let s define a as the sequence consisting of distinct elements let these elements are and can be equal and is as follows There are integers greater than or equal to For example sequences and are but and are not Your task is to choose the maximum by length of that is a You have to answer independent test cases Recall that the sequence is a a subsequence of the sequence if can be derived from by removing zero or more elements without changing the order of the remaining elements For example if then possible subsequences are and but not and ,If we want to destroy the largest and smallest stone then there are only four options Destroy the stones on the left until we destroy the smallest stone Then destroy the stones on the right until we destroy the largest stone Destroy the stones on the right until we destroy the smallest stone Then destroy the stones on the left until we destroy the largest stone Destroy the stones on the left until we destroy both stones Destroy the stones on the right until we destroy both stones You need to check all four options and choose the minimum answer ,0
605,You are given a matrix with rows numbered from to and columns numbered from to A number is written in the cell belonging to the th row and the th column each number is either or A chip is initially in the cell and it will be moved to the cell During each move it either moves to the next cell in the current row or in the current column if the current cell is then after the move it can be either or The chip cannot leave the matrix Consider each path of the chip from to A path is called if the number in the first cell is equal to the number in the last cell the number in the second cell is equal to the number in the second to last cell and so on Your goal is to change the values in the minimum number of cells so that path is ,The solution is to choose some diameter of given tree then delete all the leaves which don t belong to diameter iteratively and then delete the diameter I e while tree includes vertices aside from the ones forming diameter we choose some leaf increase answer by the length of the path between this leaf and farthest endpoint of the diameter from this leaf and delete this leaf Then while tree consists of more than one vertex we choose two endpoints of diameter increase answer by the length of the path between it and delete any of them At first we need to prove that we can choose any diameter It can be proved by next fact we can find the diameter by two graph traversals DFS BFS we need to find farthest vertex and then again find farthest vertex from found farthest vertex given path is a diameter of the tree It means that for each vertex that doesn t belongs to the diameter we will add maximal possible path length by the algorithm described above And finally obviously that at some moment we need to delete the diameter and there is no way to do this better than we do it in described solution ,0
606,Polycarp has coins the value of the th coin is Polycarp wants to distribute all the coins between his pockets but he cannot put two coins with the same value into the same pocket For example if Polycarp has got six coins represented as an array he can distribute the coins into two pockets as follows Polycarp wants to distribute all the coins with the minimum number of used pockets Help him to do that ,We have to find the maximum number of elements with the same value it can be done by counting This number will be the answer because if there are no more than elements with the same value in the array it is obvious that we cannot use less than pockets but we also doesn t need to use more than pockets because of the other values can be also distributed using pockets Overall complexity is ,1
607,Polycarp grew a tree from vertices We remind you that a tree of vertices is an undirected connected graph of vertices and edges that does not contain cycles He calls a set of vertices if there is such a path in the tree that passes through each vertex of this set without passing through any edge twice The path can visit other vertices not from this set In other words a set of vertices is called if there is a simple path that passes through all the vertices of this set and possibly some other For example for a tree below sets are and are not Polycarp asks you to answer queries Each query is a set of vertices For each query you need to determine whether the corresponding set of vertices is ,Let s calculate the array of triples Triple means that the sum of the sequence without the element at position will be equal to Triples can be easily calculated in a following manner for each sequence find its sum then iterate over all its elements and subtract each of them one after another Now sort array with the standard compare function Finally the answer is if and only if there exist two adjacent elements with equal sums and different sequences it is very easy to see So if we find such a pair then the answer will be otherwise the answer will be Time complexity of the solution is ,0
608,Leha is planning his journey from Moscow to Saratov He hates trains so he has decided to get from one city to another by car The path from Moscow to Saratov can be represented as a straight line well it s not that straight in reality but in this problem we will consider it to be straight and the distance between Moscow and Saratov is km Let s say that Moscow is situated at the point with coordinate km and Saratov at coordinate km Driving for a long time may be really difficult Formally if Leha has already covered kilometers since he stopped to have a rest he considers the th kilometer as It is guaranteed that for every The difficulty of the journey is denoted as the sum of difficulties of each kilometer in the journey Fortunately there may be some rest sites between Moscow and Saratov Every integer point from to may contain a rest site When Leha enters a rest site he may have a rest and the next kilometer will have difficulty the kilometer after it difficulty and so on For example if and there is a rest site in coordinate the difficulty of journey will be the first kilometer will have difficulty the second one then Leha will have a rest and the third kilometer will have difficulty the fourth and the last one Another example if and there are rest sites in coordinates and the difficulty of Leha s journey is Leha doesn t know which integer points contain rest sites So he has to consider every possible situation Obviously there are different distributions of rest sites two distributions are different if there exists some point such that it contains a rest site in exactly one of these distributions Leha considers all these distributions to be equiprobable He wants to calculate the expected value of difficulty of his journey Obviously is an integer number You have to calculate it modulo ,Let s consider each kilometer of the journey separatedly and calculate the expected value of its difficulty and then use linearity of expectation to obtain the answer The difficulty of each kilometer depends on the rest site right before it or if there were no rest sites on the distance from Moscow to this kilometer So when considering the difficulty of th kilometer one indexed we may obtain a formula The denominator of the last summand is because it represents the situation where the last rest was in Moscow and its probability is exactly We can actually rewrite this as follows thus calculating all that we need in linear time ,1
609,Vova is playing a computer game There are in total turns in the game and Vova really wants to play all of them The initial charge of his laptop battery i e the charge before the start of the game is During each turn Vova can choose what to do If the current charge of his laptop battery is strictly greater than Vova can and then the charge of his laptop battery will decrease by if the current charge of his laptop battery is strictly greater than Vova can his laptop and then the charge of his laptop battery will decrease by if the current charge of his laptop battery is less than or equal to and at the same time then Vova cannot do anything and loses the game Vova wants to complete the game Vova can complete the game if after each of turns the charge of the laptop battery is Vova has to play Among all possible ways to complete the game Vova wants to choose the one where the number of turns when he is the possible It is possible that Vova cannot complete the game at all Your task is to find out the possible number of turns Vova can make the or report that Vova cannot complete the game You have to answer independent queries ,Suppose we ve built the graph and chosen any simple cycle Due to the nature of the graph any simple cycle right part is part of one of the chains So let s for each chain calculate the longest simple path with its right part on this chain and denote it as Obviously Now let s look at chain If we go along the cycle in both ways we will step to vertices and of the previous chain If then we closed cycle and it s the only possible cycle so Otherwise we can either go from and and meet each other closing the cycle with part of the th chain between th and th vertices this part has edges and our cycle will have length But if we decide to go in different ways then we will meet the first and the last vertices of the th chain After that we ll go to the th and the th vertices of th chain and will make almost the same choice But instead of recurrently solving the same problem we can note that in fact we took a cycle that ends at the th chain erased the part between vertices and and merged it with our th chain part so the length of this merged cycle will be equal to Since we maximize we just choose what part or is longer and take it As a result we can iterate from left to right calculate all and print the maximum among them ,0
610,Today Adilbek is taking his probability theory test Unfortunately when Adilbek arrived at the university there had already been a long queue of students wanting to take the same test Adilbek has estimated that he will be able to start the test only seconds after coming Fortunately Adilbek can spend time without revising any boring theorems or formulas He has an app on this smartphone which contains Japanese crosswords to solve Adilbek has decided to solve them all one by one in the order they are listed in the app without skipping any crossword For each crossword a number is given that represents the time it takes an average crossword expert to solve this crossword the time is given in seconds Adilbek is a true crossword expert but unfortunately he is sometimes unlucky in choosing the way to solve the crossword So it takes him either seconds or seconds to solve the th crossword equiprobably with probability he solves the crossword in exactly seconds and with probability he has to spend an additional second to finish the crossword All these events are independent After seconds pass or after solving the last crossword if he manages to do it in less than seconds Adilbek closes the app if he finishes some crossword at the same moment that crossword is considered solved otherwise Adilbek does not finish solving the current crossword at all He thinks it would be an interesting probability theory problem to calculate the expected number of crosswords he will be able to solve completely Can you calculate it Recall that the expected value of a discrete random variable is the probability weighted average of all possible values in this problem it means that the expected value of the number of solved crosswords can be calculated as where is the probability that Adilbek will solve exactly crosswords We can represent as rational fraction with To give the answer you should print ,Strategy is quite easy we go from to and if we take this variant we set otherwise we set Note that all are in range so there won t be any overflow underflow It s also not hard to prove that this strategy maximizes the sum By contradiction suppose the optimal answer has some index where but Let s find first position where and swap operations between and As a result all from were increased while remained the same i e there is no violation of the rules and the total sum increased contradiction ,0
611,You are given an array of length which consists of non negative integers An array is called if the parity of each index matches the parity of the element at that index More formally an array is good if for all the equality holds where is the remainder of dividing by 2 For example the arrays and are good and the array is bad because for the parities of and are different but In one move you can take two elements of the array and swap them these elements are not necessarily adjacent Find the minimum number of moves in which you can make the array good or say that this is not possible ,The prerequisites for each lecture form a rooted tree so let s forget about the legend and learn how to find such an order of vertices of a tree that all conditions work Let s introduce some algorithm that produces an ordering of vertices for every possible case If any valid ordering exists it should produce a valid one So we will only have to check if the resulting ordering is fine and output it if it is If there were no special pairs the task would be perfectly solvable with an algorithm of topological sorting Thus let s come up with a way to modify the graph so that topsort could still be a solution We know that the vertices that are in the special pairs should follow each other in the ordering Look at these special pairs as edges as well Let s first imagine they are undirected These edges connect some vertices in the tree into components Each component should be a segment of vertices in a valid answer So how about we compress them into one vertex first each find some answer for a compressed version and decompress them back Let each of these connected components be a vertex in the new graph Two components are connected by an edge if there is a edge in the tree between vertices of the corresponding components Topsort in this graph will tell us the order the components should go However we should also find the order the vertices should go inside each component Let s topsort the graph of all directed special pairs and sort the vertices in that order in every component We can sort the entire graph instead of sorting each component separately because the components are totally independent Finally write down the answer iterate over the compressed vertices of the first new graph in the order of its topsort for each one write down all the actual vertices inside it in the order of the topsort of the second new graph Check if each vertex has its parent earlier than itself in the answer If all the graphs were topologically sortable and that holds then the answer exists and we found it Otherwise the answer doesn t exist Overall complexity O n log n ,0
612,There is a bookshelf which can fit books The th position of bookshelf is if there is a book on this position and otherwise It is guaranteed that there is on the bookshelf In one move you can choose some contiguous segment consisting of books i e for each from to the condition holds and Shift it to the right by move the book at index to for all This move can be done only if and there is no book at the position Shift it to the left by move the book at index to for all This move can be done only if and there is no book at the position Your task is to find the number of moves required to collect all the books on the shelf as a consecutive segment i e the segment without any gaps For example for there is a gap between books when and for there are no gaps between books and for there are also no gaps between books You have to answer independent test cases ,If the edges were only added and not deleted it would be a common problem that is solved with disjoint set union All you need to do in that problem is implement a DSU which maintains not only the leader in the class of some vertex but also the distance to this leader Then if we try to connect two vertices that have the same leader in DSU and the sum of distances to this leader is even then we get a cycle with odd length and graph is no longer bipartite But in this problem we need to somehow process removing edges from the graph In the algorithm I will describe below we will need to somehow remove the last added edge from DSU or even some number of last added edges How can we process that Each time we change some variable in DSU we can store an address of this variable and its previous value somewhere for example in a stack Then to remove last added edge we rollback these changes we rewrite the previous values of the variables we changed by adding the last edge Now we can add a new edge and remove last added edge All these operations cost because path compression doesn t work in intended time if we have to rollback Let s actually start solving the problem For convinience we change all information to queries like edge exists from query number till query number It s obvious that there are no more than such queries Let s use divide and conquer technique to make a function that answers whether the graph is bipartite or not after every query from some segment of queries First of all we add to DSU all the edges that are present in the whole segment and not added yet then we solve it recursively for and then we remove edges from DSU using the rollback technique described above When we arrive to some segment then after adding the edges present in this segment we can answer if the graph is bipartite after query Remember to get rid of the edges that are already added and the edges that are not present at all in the segment when you make a recursive call Of course to solve the whole problem we need to call our function from segment Time complexity is because every edge will be added only in calls of the function ,0
613,You are given two integers and and queries The th query consists of two numbers and and the answer to it is the number of integers such that and Calculate the answer for each query Recall that is the remainder of the division of by For example ,It s quite easy to see that ab x bmod a bmod b x bmod a bmod b What does it mean The property given in the statement holds for x if and only if it holds for x bmod ab It allows us to answer each testcase in O ab q as follows for each number from 0 to ab 1 we may check the given property before processing the queries and build an array of prefix sums on it to efficiently count the number of integers satisfying the property from the segment 0 y where y ab Then each query l r can be divided into two prefix queries 0 l 1 and 0 r To answer a prefix query 0 p in O 1 we can calculate the number of full segments of length ab inside this prefix that is lfloor frac p ab rfloor and the length of the last segment of numbers that don t belong into a full segment that is p bmod ab To handle full segments we multiply the number of integers satisfying the property on one segment by the number of such segments and to handle the last part of segment we use prefix sums ,1
614,Little town Nsk consists of junctions connected by bidirectional roads Each road connects two distinct junctions and no two roads connect the same pair of junctions It is possible to get from any junction to any other junction by these roads The distance between two junctions is equal to the minimum possible number of roads on a path between them In order to improve the transportation system the city council asks mayor to build one new road The problem is that the mayor has just bought a wonderful new car and he really enjoys a ride from his home located near junction to work located near junction Thus he wants to build a new road in such a way that the distance between these two junctions won t decrease You are assigned a task to compute the number of pairs of junctions that are not connected by the road such that if the new road between these two junctions is built the distance between and won t decrease ,We can think that it is given a bipartite graph Boys and girls are the vertices of the graph If a boy and a girl are ready to dance together then an edge is drawn between them In this graph you need to select two edges that do not intersect at the vertices Let the number of edges included in the vertex Iterate over the first edge It will block of other edges all adjacent to vertex to vertex but the edge will be blocked twice All non blocked edges do not intersect with at the vertices So you can add to the answer ,0
615,You are given a string consisting of characters Each character of is either or A substring of is a contiguous subsequence of its characters You have to choose two substrings of possibly intersecting possibly the same possibly non intersecting just any two substrings After choosing them you calculate the value of the chosen pair of substrings as follows let be the first substring be the second chosen substring and be the integer such that is its binary representation for example if is the value is the of and Calculate the maximum possible value you can get and print it ,We should use that the letter queries are given in increasing order of room numbers We will store in a variable the number of rooms in already considered dormitories this variable should have 64 bit type and in a variable we will store the minimum number of dormitory where the room from the current letter possibly is Initially and We will iterate through the letters Let the current letter should be delivered to the room While we increase by and increase by one So we got the dormitory number where room is It only remains to print two integers the dormitory number and the room number in this dormitory ,0
616,You are given an array consisting of elements The of some subsegment of this array is the difference between the maximum and minimum element from this segment The of the array is the sum of of all subsegments of this array For example the of array is because there are different subsegments of this array from index to index is from index to index is from index to index is from index to index is from index to index is from index to index is You have to determine the of the array ,First of all we will calculate the sum of maximum and minimum values on all segments separatedly Then the answer is the difference between the sum of maximum values and minimum values How can we calculate the sum of minimum values for example For each element we will try to find the number of segments where it is the So we will calculate two arrays means that is the maximum index such that and and means that is the minimum index such that and So actually and represent the borders of the largest segment where is the and we need to exclude those borders While knowing these values we can calculate the number of subsegments where is the How can we calculate for example the array We will use a stack where we will store some indices in the array in such a way that if we change all indices to the values in the array they will be in sorted order the maximum element will be at the top of the stack and the minimum at the bottom Let s calculate from the minimum index to the maximum When we calculate we remove all elements such that from the stack since the stack is sorted all these elements will be at the top of the stack and when we encounter the first element such that it is guaranteed that all elements below it don t need to be deleted Then if there s any element on top of the stack it becomes the value of then we push into the stack Since every element will be added and deleted not more than one time the complexity of this algorithm is linear We can apply the same technique to calculate the values of and the sum of maximums ,1
617,Polycarp has a rectangular field of cells the size of the field does not exceed cells in each cell of which there can be candy There are rows and columns in the field Let s denote a cell with coordinates vertically and horizontally by Then the top left cell will be denoted as and the bottom right cell will be denoted as If there is candy in the cell then the cell is marked with the symbol otherwise with the symbol Polycarp made a Robot that can collect candy The Robot can move from either to or to If the Robot is in a cell that contains candy it takes it While there is at least one candy on the field the following procedure is executed Polycarp puts the Robot in an arbitrary cell on the of the field He himself chooses in which cell to place the Robot It is allowed to put the Robot in the same cell multiple times The Robot moves across the field and collects candies He controls the Robot When the Robot leaves the field Polycarp takes it If there are still candies left Polycarp repeats the procedure Find the number of times Polycarp needs to put the Robot on the topmost row of the field in order to collect all the candies It is guaranteed that Polycarp can always collect all the candies ,Note first that we can solve the two subtasks independently if we consider the coloring as on a chessboard since at any move of the robot the parity of does not change Now replace the moves with moves respectively This can be done because we simply shifted the rows by some value with the Robot walking on the same cells it walked on in the original board Let s look at the even numbered gray cells Then we ll go through the columns from left to right keeping the minimum by size set of cells the Robot should be in Then the transition to the next column will be as follows Go through the cells from bottom to top which contain the candy For each cell find the closest cell of our set find the Robot that is above the current cell Then we change the square from the set to the current square If there is no robot for the square in the array then we need to increase the answer by and add the robot to our current square you can think of it as adding the robot to the very top square in the column and getting all the candies that were above In the picture the red circles indicate the cells where we will put the robot as needed The pink cells mean that this cell is contained in the set The final asymptotic depends on the implementation you can use a set as data structure or you can use a vector with two pointers and respectively ,1
