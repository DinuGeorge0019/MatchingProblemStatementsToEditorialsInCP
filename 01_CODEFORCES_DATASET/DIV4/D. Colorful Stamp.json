{"link": "https://codeforces.com//contest/1669/problem/D", "problemId": "1375141", "shortId": "1669D", "contest_number": "1669", "name": "D. Colorful Stamp", "statement": "A row of  cells is given, all initially white. Using a stamp, you can stamp any two neighboring cells such that one becomes red and the other becomes blue. A stamp can be rotated, i.e. it can be used in both ways: as  and as .During use, the stamp must completely fit on the given  cells (it cannot be partially outside the cells). The stamp can be applied multiple times to the same cell. Each usage of the stamp recolors both cells that are under the stamp.For example, one possible sequence of stamps to make the picture  could be . Here , , and  represent a white, red, or blue cell, respectively, and the cells that the stamp is used on are marked with an underline.Given a final picture, is it possible to make it using the stamp zero or more times?", "input": "The first line contains an integer  ()\u00a0\u2014 the number of test cases. The first line of each test case contains an integer  ()\u00a0\u2014 the length of the picture. The second line of each test case contains a string \u00a0\u2014 the picture you need to make. It is guaranteed that the length of  is  and that  only consists of the characters , , and , representing a white, red, or blue cell, respectively. It is guaranteed that the sum of  over all test cases does not exceed .", "output": "Output  lines, each of which contains the answer to the corresponding test case. As an answer, output \"\" if it possible to make the picture using the stamp zero or more times, and \"\" otherwise. You can output the answer in any case (for example, the strings \"\", \"\", \"\" and \"\" will be recognized as a positive answer).", "tutorial": "First note that parts of the picture separated by  are independent. That is, any stamps used on one part doesn't have any impact on the other, since a character  means no stamp has been placed on that cell. So let's split the string by s (for example, with  method in Python), and consider the resulting strings containing only  and . Call one of these parts .In the final stamp we place on , we must have placed , so it should have both the characters  and . Therefore, if the string has only  or only , the answer is .Otherwise, the answer is . Let's show it. As we have just shown, we must have  next to  for the string to be possible. Consider the way to make . The final stamp can be . For the rest of the cells, we can make them one by one as below.  so now we have made the prefix of the string before the final stamp. Similarly:  Now we have made the prefix and the suffix by stamping \"one character\" at a time (actually, we stamp two characters, but then cover it up with another stamp).Finally, we can put the final stamp to make the whole string.  This method easily generalizes to any string. We can find the final stamp and then make the prefix and suffix one by one. The solution runs in .", "solution": "for i in range(int(input())):\n    n = int(input())\n    l = input().split('W')\n    bad = False\n    for s in l:\n    \tb1 = 'R' in s\n    \tb2 = 'B' in s\n    \tif (b1 ^ b2):\n    \t\tbad = True\n    print(\"NO\" if bad else \"YES\")", "interactive": false, "noSolution": false, "noTutorial": false}