{"link": "https://codeforces.com//contest/1722/problem/E", "problemId": "1524437", "shortId": "1722E", "contest_number": "1722", "name": "E. Counting Rectangles", "statement": "You have  rectangles, the -th rectangle has height  and width .You are asked  queries of the form . For each query output, the total area of rectangles you own that a rectangle of height  and width  while also  a rectangle of height  and width . In other words, print  for  such that  and .  Also note that you  rotate rectangles.Please note that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like  for C++).", "input": "The first line of the input contains an integer  ()\u00a0\u2014 the number of test cases. The first line of each test case two integers  (; )\u00a0\u2014 the number of rectangles you own and the number of queries. Then  lines follow, each containing two integers  ()\u00a0\u2014 the height and width of the -th rectangle. Then  lines follow, each containing four integers  ()\u00a0\u2014 the description of each query. The sum of  over all test cases does not exceed , and the sum of  over all test cases does not exceed .", "output": "For each test case, output  lines, the -th line containing the answer to the -th query.", "tutorial": "Consider the 2D array with  for all . Increase  by  if there is an  rectangle in the input.Now for each query, we need to find the sum of all  in a rectangle with lower-left corner at  and upper-right corner at . This is the standard problem that can be solved with 2D prefix sums.The time complexity is  per testcase.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long a[1005][1005];\nlong long pref[1005][1005];\n\nvoid solve()\n{\n    long long n, q;\n    cin >> n >> q;\n    for(int i = 0; i <= 1001; i++)\n    {\n        for(int j = 0; j <= 1001; j++)\n        {\n            a[i][j] = pref[i][j] = 0;\n        }\n    }\n    for(int i = 0; i < n; i++)\n    {\n        long long h, w;\n        cin >> h >> w;\n        a[h][w]+=h*w;\n    }\n    for(int i = 1; i <= 1000; i++)\n    {\n        for(int j = 1; j <= 1000; j++)\n        {\n            pref[i][j] = pref[i-1][j]+pref[i][j-1]-pref[i-1][j-1]+a[i][j];\n        }\n    }\n    for(int i = 0; i < q; i++)\n    {\n        long long hs, ws, hb, wb;\n        cin >> hs >> ws >> hb >> wb;\n        cout << pref[hb-1][wb-1]-pref[hb-1][ws]-pref[hs][wb-1]+pref[hs][ws] << endl;\n    }\n}\n \nint main() {\n    int t = 1;\n    cin >> t;\n    while(t--)\n    {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}