{"link": "https://codeforces.com//contest/1807/problem/D", "problemId": "1838164", "shortId": "1807D", "contest_number": "1807", "name": "D. Odd Queries", "statement": "You have an array . Answer  queries of the following form:   If we change all elements in the range  of the array to , will the sum of the entire array be odd?  Note that queries are  and do not affect future queries.", "input": "Each test contains multiple test cases. The first line contains the number of test cases  (). The description of the test cases follows. The first line of each test case consists of  integers  and  (; )\u00a0\u2014 the length of the array and the number of queries. The second line of each test case consists of  integers  ()\u00a0\u2014 the array . The next  lines of each test case consists of  integers  (; )\u00a0\u2014 the queries. It is guaranteed that the sum of  over all test cases doesn't exceed , and the sum of  doesn't exceed .", "output": "For each query, output \"\" if the sum of the entire array becomes odd, and \"\" otherwise. You can output the answer in any case (upper or lower). For example, the strings \"\", \"\", \"\", and \"\" will be recognized as positive responses.", "tutorial": "Note that for each question, the resulting array is So, the sum of the elements of the new array after each question is We can compute  and  in  time by precomputing the sum of all prefixes and suffixes, or alternatively by using the prefix sums technique. So we can find the sum each time in  per question, and just check if it's odd or not. The time complexity is .", "solution": "#include <iostream>\n \nusing namespace std;\nlong long n,a[200005],q,sum=0,pref[200005],t;\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    cin>>t;\n    while(t--)\n    {\n        sum = 0;\n        cin >> n >> q;\n        for(int i=1;i<=n;i++){\n            cin >> a[i];\n            sum+=a[i];\n            pref[i]=pref[i-1];\n            pref[i]+=a[i];\n        }\n        for(int i = 0; i < q; i++){\n            long long l,r,k;\n            cin >> l >> r >> k;\n            long long ans = pref[n]-(pref[r]-pref[l-1])+k*(r-l+1);\n            if(ans%2==1){\n                cout<<\"YES\"<<endl;\n            }\n            else\n            {\n                cout<<\"NO\"<<endl;\n            }\n        }\n    }\n}\n \n\n", "interactive": false, "noSolution": false, "noTutorial": false}