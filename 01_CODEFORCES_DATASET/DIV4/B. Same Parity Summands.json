{"link": "https://codeforces.com//contest/1352/problem/B", "problemId": "616894", "shortId": "1352B", "contest_number": "1352", "name": "B. Same Parity Summands", "statement": "You are given two positive integers  () and  (). Represent the number  as the sum of  positive integers of the same parity (have the same remainder when divided by ).In other words, find  such that all ,  and either all  are even or all  are odd at the same time.If such a representation does not exist, then report it.", "input": "The first line contains an integer  () \u2014 the number of test cases in the input. Next,  test cases are given, one per line. Each test case is two positive integers  () and  ().", "output": "For each test case print:    and the required values , if the answer exists (if there are several answers, print any of them);   if the answer does not exist.  The letters in the words  and  can be printed in any case.", "tutorial": "Consider two cases: when we choose all odd numbers and all even numbers. In both cases let's try to maximize the maximum. So, if we choose odd numbers, let's try to take  ones and the remainder . But we need to sure that  is greater than zero and odd. And in case of even numbers, let's try to take  twos and the remainder . We also need to check that the remainder is greater than zero and even. If none of these cases is true, print \"\".", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n, k;\n\t\tcin >> n >> k;\n\t\tint n1 = n - (k - 1);\n\t\tif (n1 > 0 && n1 % 2 == 1) {\n\t\t\tcout << \"YES\" << endl;\n\t\t\tfor (int i = 0; i < k - 1; ++i) cout << \"1 \";\n\t\t\tcout << n1 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint n2 = n - 2 * (k - 1);\n\t\tif (n2 > 0 && n2 % 2 == 0) {\n\t\t\tcout << \"YES\" << endl;\n\t\t\tfor (int i = 0; i < k - 1; ++i) cout << \"2 \";\n\t\t\tcout << n2 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tcout << \"NO\" << endl;\n\t}\n}", "interactive": false, "noSolution": false, "noTutorial": false}