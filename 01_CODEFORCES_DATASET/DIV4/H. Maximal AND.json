{"link": "https://codeforces.com//contest/1669/problem/H", "problemId": "1375145", "shortId": "1669H", "contest_number": "1669", "name": "H. Maximal AND", "statement": "Let  denote the bitwise AND operation, and  denote the bitwise OR operation.You are given an array  of length  and a non-negative integer . You can perform   operations on the array of the following type:  Select an index  () and replace  with    where  is any integer between  and  . In other words, in an operation you can choose an index  () and set the -th bit of  to  (). Output the maximum possible value of        after performing   operations. ", "input": "The first line of the input contains a single integer  () \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains the integers  and  (, ). Then a single line follows, containing  integers describing the arrays  (). It is guaranteed that the sum of  over all test cases does not exceed .", "output": "For each test case, output a single line containing the maximum possible  value of        after performing   operations.", "tutorial": "The optimal strategy is to greedily take the highest bit we have enough operations to set in every array element. To do this, we maintain a count for each bit with the number of elements that have it set already. The cost to set the -th bit will be . We go from the highest bit to the lowest:   If we have enough operations left, we set the bit, subtract its cost from the operations and move to the next lower bit.  If we don't have enough operations, we move on to the next lower bit and don't modify the operations.  We stop once we processed bit .The time complexity is .", "solution": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nint main() {\n    int t; cin >> t;\n    while(t--) {\n        int n, k; cin >> n >> k;\n        vector<int> cnt(31, 0), a(n);\n        for(int i = 0;i < n; ++i) {\n            cin >> a[i];\n            for(int j = 30; j >= 0; --j) {\n                if(a[i] & (1 << j)) ++cnt[j];\n            }\n        }\n        int ans = 0;\n        for(int i = 30; i >= 0; --i) {\n            int need = n - cnt[i];\n            if(need <= k) {\n                k -= need;\n                ans += (1 << i);\n            }\n        }\n        cout << ans << \"\\n\";\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}