{"link": "https://codeforces.com//contest/1692/problem/F", "problemId": "1429120", "shortId": "1692F", "contest_number": "1692", "name": "F. 3SUM", "statement": "Given an array  of positive integers with length , determine if there exist three  indices , ,  such that  ends in the digit .", "input": "The first line contains an integer  ()\u00a0\u2014 the number of test cases. The first line of each test case contains an integer  ()\u00a0\u2014 the length of the array. The second line of each test case contains  integers  ()\u00a0\u2014 the elements of the array. The sum of  across all test cases does not exceed .", "output": "Output  lines, each of which contains the answer to the corresponding test case. Output \"\" if there exist three  indices , ,  satisfying the constraints in the statement, and \"\" otherwise. You can output the answer in any case (for example, the strings \"\", \"\", \"\" and \"\" will be recognized as a positive answer).", "tutorial": "Since we only care about the last digit of the sum , we can ignore all numbers other than the last digits of the elements of . (For example, we can consider  to be the same as .)Now note that if a number appears more than  times in the array, we can ignore all copies that occur more than  times, since our sum  only involves three numbers. (For example, we can consider  to be the same as .)Using these observations, note that there are only  digits, and each digit can occur at most  times. So we can always reduce the array to one of length . Since  is very small, we can brute force all triples , which runs quickly enough.Time complexity: .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid solve() {\n\tint n;\n\tcin >> n;\n\tint cnt[10] = {};\n\tfor (int i = 0; i < n; i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tcnt[x % 10]++;\n\t}\n\tvector<int> v;\n\tfor (int i = 0; i < 10; i++) {\n\t\tfor (int j = 0; j < min(cnt[i], 3); j++) {\n\t\t\tv.push_back(i);\n\t\t}\t\n\t}\n\tint m = v.size();\n\tfor (int i = 0; i < m; i++) {\n\t\tfor (int j = i + 1; j < m; j++) {\n\t\t\tfor (int k = j + 1; k < m; k++) {\n\t\t\t\tif ((v[i] + v[j] + v[k]) % 10 == 3) {cout << \"YES\\n\"; return;}\n\t\t\t}\n\t\t}\n\t}\n\tcout << \"NO\\n\";\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int tt; cin >> tt; for (int i = 1; i <= tt; i++) {solve();}\n    // solve();\n}  ", "interactive": false, "noSolution": false, "noTutorial": false}