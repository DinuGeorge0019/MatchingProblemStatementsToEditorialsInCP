{"link": "https://codeforces.com//contest/1791/problem/B", "problemId": "1764442", "shortId": "1791B", "contest_number": "1791", "name": "B. Following Directions", "statement": "Alperen is standing at the point . He is given a string  of length  and performs  moves. The -th move is as follows:   if , then move one unit left;  if , then move one unit right;  if , then move one unit up;  if , then move one unit down.        There is a candy at  (that is, one unit above and one unit to the right of Alperen's starting point). You need to determine if Alperen ever passes the candy.      ", "input": "The first line of the input contains an integer  ()\u00a0\u2014 the number of testcases. The first line of each test case contains an integer  ()\u00a0\u2014 the length of the string. The second line of each test case contains a string  of length  consisting of characters , , , and , denoting the moves Alperen makes.", "output": "For each test case, output \"\" (without quotes) if Alperen passes the candy, and \"\" (without quotes) otherwise. You can output the answer in any case (for example, the strings \"\", \"\", \"\" and \"\" will be recognized as a positive answer).", "tutorial": "We can keep track of our current point  as we iterate over the string:   if , then decrement  (set );  if , then increment  (set );  if , then increment  (set );  if , then decrement  (set ).  Initially, set . If  is ever true, then we should output ; otherwise, we output .The time complexity is .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAX = 200007;\nconst int MOD = 1000000007;\n\nvoid solve() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tint x = 0, y = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == 'L') {x--;}\n\t\tif (s[i] == 'R') {x++;}\n\t\tif (s[i] == 'D') {y--;}\n\t\tif (s[i] == 'U') {y++;}\n\t\tif (x == 1 && y == 1) {cout << \"YES\\n\"; return;}\n\t}\t\n\tcout << \"NO\\n\";\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tint tt; cin >> tt; for (int i = 1; i <= tt; i++) {solve();}\n\t// solve();\n}", "interactive": false, "noSolution": false, "noTutorial": false}