{"link": "https://codeforces.com//contest/1760/problem/D", "problemId": "1654041", "shortId": "1760D", "contest_number": "1760", "name": "D. Challenging Valleys", "statement": "You are given an array  of  integers. This array is called a \"\" if there exists  subarray  such that:  ,  ,   or ,   or . Here are three examples:  The first image shows the array [], it  because only subarray with indices  satisfies the condition.The second image shows the array [], it  because only subarray with indices  satisfies the codition.The third image shows the array [], it  because two subarrays  and  that satisfy the condition.You are asked whether the given array is a valley or not.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. The first line of each test case contains a single integer  ()\u00a0\u2014 the length of the array. The second line of each test case contains  integers  ()\u00a0\u2014 the elements of the array. It is guaranteed that the sum of  over all test cases is smaller than .", "output": "For each test case, output \"\" (without quotes) if the array is a valley, and \"\" (without quotes) otherwise. You can output the answer in any case (for example, the strings \"\", \"\", \"\" and \"\" will be recognized as a positive answer).", "tutorial": "One possible solution is to represent a range of equal element as a single element with that value. Construct this array  and loop through it and check how many element  satisfy the conditions  or  and  or . If exactly one index satisfies these conditions, print \"YES\" and othewise \"NO\".Complexity: ", "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve()\n{\n    int n;\n    cin >> n;\n    vector<int> a;\n    for(int i = 0; i < n; i++)\n    {\n        int x;\n        cin >> x;\n        if(i == 0 || x != a.back())\n        {\n            a.push_back(x);\n        }\n    }\n    int num_valley = 0;\n    for(int i = 0; i < a.size(); i++)\n    {\n        if((i == 0 || a[i-1] > a[i]) && (i == a.size()-1 || a[i] < a[i+1]))\n        {\n            num_valley++;\n        }\n    }\n    if(num_valley == 1)\n    {\n        cout << \"YES\" << endl;\n    }\n    else\n    {\n        cout << \"NO\" << endl;\n    }\n}\n\nint32_t main(){\n    int t = 1;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}