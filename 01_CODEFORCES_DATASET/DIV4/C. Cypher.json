{"link": "https://codeforces.com//contest/1703/problem/C", "problemId": "1459217", "shortId": "1703C", "contest_number": "1703", "name": "C. Cypher", "statement": "Luca has a cypher made up of a sequence of  wheels, each with a digit  written on it. On the -th wheel, he made  moves. Each move is one of two types:    move (denoted by ): it increases the -th digit by . After applying the up move on , it becomes .   move (denoted by ): it decreases the -th digit by . After applying the down move on , it becomes .      Luca knows the final sequence of wheels and the moves for each wheel. Help him find the original sequence and crack the cypher.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. The first line of each test case contains a single integer  ()\u00a0\u2014 the number of wheels. The second line contains  integers  ()\u00a0\u2014 the digit shown on the -th wheel after all moves have been performed. Then  lines follow, the -th of which contains the integer  () and  characters that are either  or \u00a0\u2014 the number of moves performed on the -th wheel, and the moves performed.  and  represent an  move and a  move respectively.", "output": "For each test case, output  space-separated digits \u00a0\u2014 the initial sequence of the cypher.", "tutorial": "We will perform each move in reverse from the final sequence of the cypher.    move: it increases the -th digit by . After applying the up move on , it becomes .   move (denoted by ): it decreases the -th digit by . After applying the down move on , it becomes .  Now we just need to implement the two types of moves. The time complexity is  per test case.", "solution": "#include <bits/stdc++.h>\nusing namespace std;\n \nvoid solve()\n{\n    int n;\n    cin >> n;\n    int a[n];\n    for(int i = 0; i < n; i++)\n    {\n        cin >> a[i];\n    }\n    for(int i = 0; i < n; i++)\n    {\n        int b;\n        cin >> b;\n        if(b == 0)\n        {\n            continue;\n        }\n        string now;\n        cin >> now;\n        for(int j = 0; j < b; j++)\n        {\n            if(now[j] == 'U'){a[i]--;}\n            else if(now[j] == 'D'){a[i]++;}\n            if(a[i] < 0){a[i]+=10;}\n            if(a[i] > 9){a[i]-=10;}\n        }\n    }\n    for(int i = 0; i < n; i++)\n    {\n        cout << a[i] << \" \";\n    }\n    cout << endl;\n}\n \nint main(){\n    int t;\n    cin>> t;\n    while(t--)\n    {\n        solve();\n    }\n    return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}