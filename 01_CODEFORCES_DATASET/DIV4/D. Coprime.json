{"link": "https://codeforces.com//contest/1742/problem/D", "problemId": "1584059", "shortId": "1742D", "contest_number": "1742", "name": "D. Coprime", "statement": "Given an array of  positive integers  (). Find the maximum value of  such that  and  are coprime, or  if no such ,  exist.For example consider the array . The maximum value of  that can be obtained is , since  and  are coprime. Two integers  and  are coprime if the only positive integer that is a divisor of both of them is  (that is, their greatest common divisor is ).", "input": "The input consists of multiple test cases. The first line contains an integer  ()\u00a0\u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains an integer  ()\u00a0\u2014 the length of the array. The following line contains  space-separated positive integers , ,...,  ()\u00a0\u2014 the elements of the array. It is guaranteed that the sum of  over all test cases does not exceed .", "output": "For each test case, output a single integer \u00a0\u2014 the maximum value of  such that  and  satisfy the condition that  and  are coprime, or output  in case no ,  satisfy the condition.", "tutorial": "Note that the array has at most  distinct elements, since . For each value, store the largest index it is in. Then we can brute force all pairs of values, and find the coprime pair with largest sum of indices.The time complexity is  per testcase.", "solution": "#include \"bits/stdc++.h\"\nusing namespace std;\n \n#define ll long long\n \n#define       forn(i,n)              for(int i=0;i<n;i++)\n#define          all(v)              v.begin(), v.end()\n#define         rall(v)              v.rbegin(),v.rend()\n \n#define            pb                push_back\n#define          sz(a)               (int)a.size()\n\nvector<int> pairs[1001];\nvoid solve() {\n    int n; cin >> n;\n    vector<int> id[1001];\n    for(int i = 1; i <= n; ++i) {\n        int x; cin >> x;\n        id[x].push_back(i);\n    }\n    int ans = -1;\n    for(int i = 1; i <= 1000; ++i) {\n        for(int j: pairs[i]) {\n            if(!id[i].empty() && !id[j].empty()) {\n                ans = max(ans, id[i].back() + id[j].back());\n            }\n        }\n    }\n    cout << ans << \"\\n\";\n}   \n \nint32_t main() {\n    for(int i = 1; i <= 1000; ++i) {\n        for(int j = 1; j <= 1000; ++j) {\n            if(__gcd(i, j) == 1) {\n                pairs[i].push_back(j);\n            }\n        }\n    }\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t = 1;\n    cin >> t;\n    while(t--) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}