{"link": "https://codeforces.com//contest/1669/problem/C", "problemId": "1375140", "shortId": "1669C", "contest_number": "1669", "name": "C. Odd Even Increments", "statement": "Given an array  of  positive integers, you can do operations of two types on it:  Add  to  element with an  index. In other words change the array as follows: .  Add  to  element with an  index. In other words change the array as follows: .Determine if after any number of operations it is possible to make the final array contain only even numbers or only odd numbers. In other words, determine if you can make all elements of the array have the same parity after any number of operations.Note that you can do operations of both types any number of times (even none). Operations of different types can be performed a different number of times.", "input": "The first line contains an integer  ()\u00a0\u2014 the number of test cases. The first line of each test case contains an integer  ()\u00a0\u2014 the length of the array. The second line of each test case contains  integers  ()\u00a0\u2014 the elements of the array. Note that after the performed operations the elements in the array can become greater than .", "output": "Output  lines, each of which contains the answer to the corresponding test case. As an answer, output \"\" if after any number of operations it is possible to make the final array contain only even numbers or only odd numbers, and \"\" otherwise. You can output the answer in any case (for example, the strings \"\", \"\", \"\" and \"\" will be recognized as a positive answer).", "tutorial": "Note is that after doing two operations of the same type, they are \"cancelled out\" in terms of parity, since we would change the parity of all elements once, then change it back again. So, we know that we will do each operation exactly  or  time. It is possible to check all possible cases just by simulating, or we can notice that all elements on all indices of the same parity  have the same parity and if they do we can always find an answer, by doing just a single type of operation a single time (in case the array doesn't already contain all elements of the same parity).The time complexity is .", "solution": "#include \"bits/stdc++.h\"\nusing namespace std;\n \nint main() {\n    int t; cin >> t;\n    while(t--) {\n        int n; cin >> n;\n        vector<int> a(n);\n\n        int even1 = 0, even2 = 0, odd1 = 0, odd2 = 0;\n        for(int i = 0; i < n; ++i) {\n            cin >> a[i];\n            if(i % 2 == 0) {\n                if(a[i] % 2 == 1) odd1 = 1;\n                else even1 = 1; \n            } else {\n                if(a[i] % 2 == 1) odd2 = 1;\n                else even2 = 1;\n            }\n        }\n\n        if(even1 && odd1) {\n            cout << \"NO\\n\";\n        } else if(even2 && odd2) {\n            cout << \"NO\\n\";\n        } else {\n            cout << \"YES\\n\";\n        }\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}