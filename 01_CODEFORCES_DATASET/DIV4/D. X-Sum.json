{"link": "https://codeforces.com//contest/1676/problem/D", "problemId": "1394656", "shortId": "1676D", "contest_number": "1676", "name": "D. X-Sum", "statement": "Timur's grandfather gifted him a chessboard to practice his chess skills. This chessboard is a grid  with  rows and  columns with each cell having a  integer written on it. Timur's challenge is to place a bishop on the board such that the sum of all cells attacked by the bishop is . The bishop attacks in all directions diagonally, and there is no limit to the distance which the bishop can attack. Note that the cell on which the bishop is placed is also considered attacked. Help him find the maximal sum he can get.", "input": "The first line of the input contains a single integer  () \u2014 the number of test cases. The description of test cases follows. The first line of each test case contains the integers  and  (, ). The following  lines contain  integers each, the -th element of the -th line  is the number written in the -th cell of the -th row  It is guaranteed that the sum of  over all test cases does not exceed .", "output": "For each test case output a single integer, the maximum sum over all possible placements of the bishop.", "tutorial": "The solution is to check the sum over all diagonals for each cell.For a cell () we can iterate over all elements in all its diagonals. This will be in total  elements.The complexity will be . solutions involving precomputation are also possible but aren't needed.", "solution": "#include <bits/stdc++.h>\nusing namespace std;\n \nvoid solve()\n{\n\tint n, m;\n\tcin >> n >> m;\n\tint a[n][m];\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tfor(int j = 0; j < m; j++)\n\t\t{\n\t\t\tcin >> a[i][j];\n\t\t}\n\t}\n\tint mx = 0;\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tfor(int j = 0; j < m; j++)\n\t\t{\n\t\t\tint now = 0;\n\t\t\tint ci = i, cj = j;\n\t\t\twhile(ci >= 0 && ci < n && cj >= 0 && cj < m)\n\t\t\t{\n\t\t\t\tnow+=a[ci][cj];\n\t\t\t\tci--;\n\t\t\t\tcj--;\n\t\t\t}\n\t\t\tci = i, cj = j;\n\t\t\twhile(ci >= 0 && ci < n && cj >= 0 && cj < m)\n\t\t\t{\n\t\t\t\tnow+=a[ci][cj];\n\t\t\t\tci++;\n\t\t\t\tcj--;\n\t\t\t}\n\t\t\tci = i, cj = j;\n\t\t\twhile(ci >= 0 && ci < n && cj >= 0 && cj < m)\n\t\t\t{\n\t\t\t\tnow+=a[ci][cj];\n\t\t\t\tci--;\n\t\t\t\tcj++;\n\t\t\t}\n\t\t\tci = i, cj = j;\n\t\t\twhile(ci >= 0 && ci < n && cj >= 0 && cj < m)\n\t\t\t{\n\t\t\t\tnow+=a[ci][cj];\n\t\t\t\tci++;\n\t\t\t\tcj++;\n\t\t\t}\n\t\t\tnow-=a[i][j]*3;\n\t\t\tmx = max(mx, now);\n\t\t}\n\t}\n\tcout << mx << endl;\n}\n\nint main() {\n\tint t;\n\tcin >> t;\n\twhile(t--)\n\t{\n\t\tsolve();\n\t}\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}