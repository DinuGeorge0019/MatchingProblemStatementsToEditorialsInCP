{"link": "https://codeforces.com//contest/1703/problem/B", "problemId": "1459216", "shortId": "1703B", "contest_number": "1703", "name": "B. ICPC Balloons", "statement": "In an ICPC contest, balloons are distributed as follows:   Whenever a team solves a problem, that team gets a balloon.  The first team to solve a problem gets an additional balloon.  A contest has 26 problems, labelled , , , ..., . You are given the order of solved problems in the contest, denoted as a string , where the -th character indicates that the problem  has been solved by some team. No team will solve the same problem twice.Determine the total number of balloons that the teams received. Note that some problems may be solved by none of the teams.", "input": "The first line of the input contains an integer  ()\u00a0\u2014 the number of testcases. The first line of each test case contains an integer  ()\u00a0\u2014 the length of the string. The second line of each test case contains a string  of length  consisting of uppercase English letters, denoting the order of solved problems.", "output": "For each test case, output a single integer\u00a0\u2014 the total number of balloons that the teams received.", "tutorial": "Let's keep an array  of booleans,  denoting whether or not some team has solved the th problem already. Now we can iterate through the string from left to right and keep a running total . If  is true (the -th problem has already been solved), increase  by ; otherwise, increase  by  and set  to true.The time complexity is .Bonus: the answer is always . Can you see why?", "solution": "#include <bits/stdc++.h>\n \nusing namespace std;\n \nconst int MAX = 200007;\nconst int MOD = 1000000007;\n \nvoid solve() {\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tbool vis[26] = {};\n\tint res = 0;\n\tfor (char c : s) {\n\t\tif (!vis[c - 'A']) {res += 2; vis[c - 'A'] = true;}\n\t\telse {res++;}\n\t}\n\tcout << res << '\\n';\n}\n \nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tint tt; cin >> tt; for (int i = 1; i <= tt; i++) {solve();}\n\t// solve();\n}", "interactive": false, "noSolution": false, "noTutorial": false}