{"link": "https://codeforces.com//contest/1538/problem/F", "problemId": "1011926", "shortId": "1538F", "contest_number": "1538", "name": "F. Interesting Function", "statement": "You are given two integers  and , where . We will add  to  until the result is equal to . Thus, there will be exactly  additions performed. For each such addition, let's look at the number of digits that will be changed after it.For example:   if , then adding one will result in  and  digits will be changed;  if you add one to , the result will be  and  digits will also be changed;  if you add one to , the result will be  and  digits will be changed. Changed digits always form a suffix of the result written in the decimal system.Output the total number of changed digits, if you want to get  from , adding  each time.", "input": "The first line contains an integer  (). Then  test cases follow. Each test case is characterized by two integers  and  ().", "output": "For each test case, calculate the total number of changed digits if you want to get  from , adding one each time.", "tutorial": "For each digit, we will count how many times it has changed.The number of changes for the first digit (the lowest) is calculated using the formula .The number of changes for the second digit is calculated by the formula . That is, it is equivalent to the number of first-digit changes for numbers from  to .To calculate the number of changes for the remaining digits, you need to apply similar reasoning with dividing the numbers by .", "solution": "#include <iostream>\n\nusing namespace std;\n\nvoid solve () {\n  int L, R;\n  cin >> L >> R;\n\n  int ans = 0;\n  while (L != 0 || R != 0) {\n    ans += R - L;\n    L /= 10;\n    R /= 10;\n  }\n  cout << ans << '\\n';\n}\n\nint main () {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  \n  int testc;\n  cin >> testc;\n\n  for (int i = 0; i < testc; i++) {\n    solve();\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}