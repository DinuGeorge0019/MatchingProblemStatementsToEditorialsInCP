{"link": "https://codeforces.com//contest/1624/problem/A", "problemId": "1256437", "shortId": "1624A", "contest_number": "1624", "name": "A. Plus One on the Subset", "statement": "Polycarp got an array of integers  as a gift. Now he wants to perform a certain number of operations (possibly zero) so that all elements of the array become the same (that is, to become ). In one operation, he can take some indices in the array and increase the elements of the array at those indices by .For example, let . He can perform the following operation: select indices 1, 2, and 4 and increase elements of the array in those indices by . As a result, in one operation, he can get a new state of the array .What is the minimum number of operations it can take so that all elements of the array become equal to each other (that is, to become )?", "input": "The first line of the input contains a single integer  () \u00a0\u2014 the number of test cases in the test. The following are descriptions of the input test cases. The first line of the description of each test case contains one integer  () \u00a0\u2014 the array . The second line of the description of each test case contains  integers  () \u00a0\u2014 elements of the array .", "output": "For each test case, print one integer \u00a0\u2014 the minimum number of operations to make all elements of the array  equal.", "tutorial": "Let's sort the numbers in ascending order. It becomes immediately clear that it is not profitable for us to increase the numbers that are equal to the last number (the maximum of the array). It turns out that every time you need to take such a subset of the array, in which all the numbers, except the maximums. And once for each operation, the numbers in the subset are increased by one, then how many times can the operation be performed on the array? Accordingly .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\n\nvoid solve() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; ++i) {\n        cin >> a[i];\n    }\n    int MIN = INT_MAX;\n    int MAX = INT_MIN;\n    for (int i = 0; i < n; ++i) {\n        MIN = min(MIN, a[i]);\n        MAX = max(MAX, a[i]);\n    }\n    cout << MAX - MIN << '\\n';\n}\nint main() {\n    int tests;\n    cin >> tests;\n    forn(tt, tests) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}