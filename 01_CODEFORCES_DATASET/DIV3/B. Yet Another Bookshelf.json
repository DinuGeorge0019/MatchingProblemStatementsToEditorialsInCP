{"link": "https://codeforces.com//contest/1433/problem/B", "problemId": "766657", "shortId": "1433B", "contest_number": "1433", "name": "B. Yet Another Bookshelf", "statement": "There is a bookshelf which can fit  books. The -th position of bookshelf is  if there is a book on this position and  otherwise. It is guaranteed that there is  on the bookshelf.In one move, you can choose some contiguous segment  consisting of books (i.e. for each  from  to  the condition  holds) and:  Shift it to the right by : move the book at index  to  for all . This move can be done only if  and there is no book at the position .  Shift it to the left by : move the book at index  to  for all . This move can be done only if  and there is no book at the position . Your task is to find the  number of moves required to collect all the books on the shelf as a  (consecutive) segment (i.e. the segment without any gaps).For example, for  there is a gap between books ( when  and ), for  there are no gaps between books and for  there are also no gaps between books.You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The first line of the test case contains one integer  () \u2014 the number of places on a bookshelf. The second line of the test case contains  integers  (), where  is  if there is a book at this position and  otherwise. It is guaranteed that there is  on the bookshelf.", "output": "For each test case, print one integer: the  number of moves required to collect all the books on the shelf as a contiguous (consecutive) segment (i.e. the segment without gaps).", "tutorial": "We can notice that the answer is the number of zeros between the leftmost occurrence of  and the rightmost occurrence of . Why is it true? Let's take the leftmost maximum by inclusion segment of  and just shift it right. We can see that using this algorithm we will do exactly described amount of moves and there is no way improve the answer.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> a(n);\n\t\tfor (auto &it : a) cin >> it;\n\t\twhile (a.back() == 0) a.pop_back();\n\t\treverse(a.begin(), a.end());\n\t\twhile (a.back() == 0) a.pop_back();\n\t\tcout << count(a.begin(), a.end(), 0) << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}