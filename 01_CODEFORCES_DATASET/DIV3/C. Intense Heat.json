{"link": "https://codeforces.com//contest/1003/problem/C", "problemId": "194983", "shortId": "1003C", "contest_number": "1003", "name": "C. Intense Heat", "statement": "The heat during the last few days has been really intense. Scientists from all over the Berland study how the temperatures and weather change, and they claim that this summer is abnormally hot. But any scientific claim sounds a lot more reasonable if there are some numbers involved, so they have decided to actually calculate some value which would represent how high the temperatures are.Mathematicians of Berland State University came up with a special . This value is calculated as follows:Suppose we want to analyze the segment of  consecutive days. We have measured the temperatures during these  days; the temperature during -th day equals .We denote the  of a segment of some consecutive days as the arithmetic mean of the temperature measures during this segment of days. So, if we want to analyze the  from day  to day , we calculate it as  (note that division is performed without any rounding). The  is the maximum of  over all segments of not less than  consecutive days. For example, if analyzing the measures  and , we are interested in segments ,  and  (we want to find the maximum value of  over these segments).You have been hired by Berland State University to write a program that would compute the  of a given period of days. Are you up to this task?", "input": "The first line contains two integers  and  () \u2014 the number of days in the given period, and the minimum number of days in a segment we consider when calculating , respectively. The second line contains  integers , , ...,  () \u2014 the temperature measures during given  days.", "output": "Print one real number \u2014 the , i. e., the maximum of  over all segments of not less than  consecutive days. Your answer will be considered correct if the following condition holds: , where  is your answer, and  is the answer given by the jury's solution.", "tutorial": "This task is very straight-forward implementation problem. So we can iterate over all segments of the given array, calculate their sum, and if the length of the current segment is not less than $$$k$$$, try to update the answer with the mean of this segment.Overall complexity is $$$O(n^2)$$$.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define x first\n#define y second\n#define mp make_pair\n#define pb push_back\n#define sqr(a) ((a) * (a))\n#define sz(a) int(a.size())\n#define all(a) a.begin(), a.end()\n#define forn(i, n) for(int i = 0; i < int(n); i++) \n#define fore(i, l, r) for(int i = int(l); i < int(r); i++)\n\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\ntemplate <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {\n\treturn out << \"(\" << a.x << \", \" << a.y << \")\";\n}\n\ntemplate <class A> ostream& operator << (ostream& out, const vector<A> &v) {\n\tout << \"[\";\n\tforn(i, sz(v)) {\n\t\tif(i) out << \", \";\n\t\tout << v[i];\n\t}\n\treturn out << \"]\";\n}\n\nmt19937 rnd(time(NULL));\n\nconst int INF = int(2e9);\nconst li INF64 = li(1e18);\nconst int MOD = INF + 7;\nconst ld EPS = 1e-9;\nconst ld PI = acos(-1.0);\n\nconst int N = 10000 + 7;\n\nint n, k;\nint a[N];\n\nbool read () {\n\tif (scanf(\"%d%d\", &n, &k) != 2)\n\t\treturn false;\n\tforn(i, n) scanf(\"%d\", &a[i]);\n\treturn true;\n}\n\nint pr[N];\n\nvoid solve() {\n\tpr[0] = 0;\n\tforn(i, n) pr[i + 1] = pr[i] + a[i];\n\t\n\tld ans = 0;\n\tforn(r, n) forn(l, r + 1){\n\t\tif (r - l + 1 >= k){\n\t\t\tans = max(ans, (pr[r + 1] - pr[l]) / ld(r - l + 1));\n\t\t}\n\t}\n\t\n\tprintf(\"%.15f\\n\", double(ans));\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n\t\n\tint tt = clock();\n\t\n#endif\n\t\n\tcerr.precision(15);\n\tcout.precision(15);\n\tcerr << fixed;\n\tcout << fixed;\n\n\twhile(read()) {\t\n\t\tsolve();\n\t\t\n#ifdef _DEBUG\n\tcerr << \"TIME = \" << clock() - tt << endl;\n\ttt = clock();\n#endif\n\n\t}\n}", "interactive": false, "noSolution": false, "noTutorial": false}