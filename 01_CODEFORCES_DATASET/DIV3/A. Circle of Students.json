{"link": "https://codeforces.com//contest/1203/problem/A", "problemId": "388102", "shortId": "1203A", "contest_number": "1203", "name": "A. Circle of Students", "statement": "There are  students standing in a circle in some order. The index of the -th student is . It is guaranteed that all indices of students are distinct integers from  to  (i.\u2009e. they form a permutation).Students want to start a round dance. A  round dance can be started if the student  comes right after the student  in clockwise order (there are no students between them), the student  comes right after the student  in clockwise order, and so on, and the student  comes right after the student  in clockwise order. A  round dance is almost the same thing \u2014 the only difference is that the student  should be right after the student  in counterclockwise order (this condition should be met for every  from  to ). For example, if the indices of students listed in clockwise order are , then they can start a clockwise round dance. If the students have indices  in clockwise order, then they can start a counterclockwise round dance.Your task is to determine whether it is possible to start a round dance. Note that the students cannot change their positions before starting the dance; they cannot swap or leave the circle, and no other student can enter the circle. You have to answer  independent queries.", "input": "The first line of the input contains one integer  () \u2014 the number of queries. Then  queries follow. The first line of the query contains one integer  () \u2014 the number of students. The second line of the query contains a permutation of indices  (), where  is the index of the -th student (in clockwise order). It is guaranteed that all  are distinct integers from  to  (i.\u2009e. they form a permutation).", "output": "For each query, print the answer on it. If a round dance can be started with the given order of students, print \"\". Otherwise print \"\".", "tutorial": "We just need to find the position of the  in the array and then check if the sequence  is going counterclockwise or clockwise from the position  or  correspondingly. We can do this by two cycles.Total complexity: .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint q;\n\tcin >> q;\n\tfor (int i = 0; i < q; ++i) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> a(n);\n\t\tint pos = -1;\n\t\tfor (int j = 0; j < n; ++j) {\n\t\t\tcin >> a[j];\n\t\t\tif (a[j] == 1) pos = j;\n\t\t}\n\t\tbool okl = true, okr = true;\n\t\tfor (int j = 1; j < n; ++j) {\n\t\t\tokl &= (a[(pos - j + n) % n] == j + 1);\n\t\t\tokr &= (a[(pos + j + n) % n] == j + 1);\n\t\t}\n\t\tif (okl || okr) cout << \"YES\" << endl;\n\t\telse cout << \"NO\" << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}