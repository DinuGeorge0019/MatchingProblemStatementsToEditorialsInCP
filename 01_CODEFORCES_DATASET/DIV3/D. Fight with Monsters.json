{"link": "https://codeforces.com//contest/1296/problem/D", "problemId": "531585", "shortId": "1296D", "contest_number": "1296", "name": "D. Fight with Monsters", "statement": "There are  monsters standing in a row numbered from  to . The -th monster has  health points (hp). You have your attack power equal to  hp and your opponent has his attack power equal to  hp.You and your opponent are fighting these monsters. Firstly, you and your opponent go to the first monster and fight it till his death, then you and your opponent go the second monster and fight it till his death, and so on. A monster is considered dead if its hp is less than or equal to .The fight with a monster happens in turns.   You hit the monster by  hp. If it is dead after your hit,  and you both proceed to the next monster.  Your opponent hits the monster by  hp. If it is dead after his hit,  and you both proceed to the next monster. You have some secret technique to force your opponent to skip his turn. You can use this technique at most  times  (for example, if there are two monsters and , then you can use the technique  times on the first monster and  time on the second monster, but not  times on the first monster and  times on the second monster).Your task is to determine the maximum number of points you can gain if you use the secret technique optimally.", "input": "The first line of the input contains four integers  and  () \u2014 the number of monsters, your attack power, the opponent's attack power and the number of times you can use the secret technique. The second line of the input contains  integers  (), where  is the health points of the -th monster.", "output": "Print one integer \u2014 the maximum number of points you can gain if you use the secret technique optimally.", "tutorial": "Let's calculate the minimum number of secret technique uses we need to kill each of the monsters. Let the current monster has  hp. Firstly, it is obvious that we can take  modulo  (except one case). If it becomes zero, let's \"rollback\" it by one pair of turns. Then the number of uses of the secret technique we need is .Let's sort all  monsters by this value and take the \"cheapest\" set of monsters (prefix of the sorted array) with the sum of values less than or equal to .Time complexity: .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, a, b, k;\n\tcin >> n >> a >> b >> k;\n\tvector<int> h(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> h[i];\n\t\th[i] %= a + b;\n\t\tif (h[i] == 0) h[i] += a + b;\n\t\th[i] = ((h[i] + a - 1) / a) - 1;\n\t}\n\tsort(h.begin(), h.end());\n\tint ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (k - h[i] < 0) break;\n\t\t++ans;\n\t\tk -= h[i];\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}