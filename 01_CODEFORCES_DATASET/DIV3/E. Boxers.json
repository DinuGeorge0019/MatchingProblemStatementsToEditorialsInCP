{"link": "https://codeforces.com//contest/1203/problem/E", "problemId": "388107", "shortId": "1203E", "contest_number": "1203", "name": "E. Boxers", "statement": "There are  boxers, the weight of the -th boxer is . Each of them can change the weight by no more than  before the competition (the weight cannot become equal to zero, that is, it must remain positive). Weight is always an integer number.It is necessary to choose the largest boxing team in terms of the number of people, that all the boxers' weights in the team are different (i.e. unique).Write a program that for given current values \u200b will find the maximum possible number of boxers in a team.It is possible that after some change the weight of some boxer is  (but no more).", "input": "The first line contains an integer  () \u2014 the number of boxers. The next line contains  integers , where  () is the weight of the -th boxer.", "output": "Print a single integer \u2014 the maximum possible number of people in a team.", "tutorial": "Let  be the last weight of the boxer taken into the team. Initially . Let's sort all boxers in order of non-increasing their weights and iterate over all boxers in order from left to right. If the current boxer has the weight  then let's try to take him with weight  (we can do it if ). If we cannot do it, let's try to take him with weight . And in case of fault let's try to take him with weight . If we cannot take him even with weight  then let's skip him. And if we take him let's replace  with him weight. The answer is the number of boxers we took.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tsort(a.rbegin(), a.rend());\n\tint lst = a[0] + 2;\n\tint ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint cur = -1;\n\t\tfor (int dx = 1; dx >= -1; --dx) {\n\t\t\tif (a[i] + dx > 0 && a[i] + dx < lst) {\n\t\t\t\tcur = a[i] + dx;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (cur == -1) continue;\n\t\t++ans;\n\t\tlst = cur;\n\t}\n\tcout << ans << endl;\n}", "interactive": false, "noSolution": false, "noTutorial": false}