{"link": "https://codeforces.com//contest/1660/problem/B", "problemId": "1349756", "shortId": "1660B", "contest_number": "1660", "name": "B. Vlad and Candies", "statement": "Not so long ago, Vlad had a birthday, for which he was presented with a package of candies. There were  types of candies, there are  candies of the type  ().Vlad decided to eat exactly one candy every time, choosing any of the candies of a type that is currently the most frequent (if there are several such types, he can choose  of them). To get the maximum pleasure from eating, Vlad  to eat two candies of the same type in a row.Help him figure out if he can eat all the candies without eating two identical candies in a row.", "input": "The first line of input data contains an integer  () \u2014 the number of input test cases. The following is a description of  test cases of input, two lines for each. The first line of the case contains the single number  () \u2014 the number of types of candies in the package. The second line of the case contains  integers  () \u2014 the number of candies of the type . It is guaranteed that the sum of  for all cases does not exceed .", "output": "Output  lines, each of which contains the answer to the corresponding test case of input. As an answer, output \"\" if Vlad can eat candy as planned, and \"\" otherwise. You can output the answer in any case (for example, the strings \"\", \"\", \"\" and \"\" will be recognized as a positive answer).", "tutorial": "There will be three cases in total, let's consider them on two types of candies: , then we will eat candies in this order  , then we will eat a candy of the type , and then we will eat in this order  (almost as in the case above) , then we will eat a candy of the type , but there will still be more of them than candies of the type  and we will have to eat a candy of the type  again. So the answer is \"\".Now we prove that it is enough to check these conditions on two maximums of the array . If the third condition is true, the answer is obvious \"\". Otherwise, we will by turns eat candies of the two maximum types until their number is equal to the third maximum, after which we will by turns eat candies of these three types and so on.", "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 1:\n        if a[0] > 1:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n        continue\n    if a[-2] + 1 < a[-1]:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "interactive": false, "noSolution": false, "noTutorial": false}