{"link": "https://codeforces.com//contest/1472/problem/A", "problemId": "854351", "shortId": "1472A", "contest_number": "1472", "name": "A. Cards for Friends", "statement": "For the New Year, Polycarp decided to send postcards to all his  friends. He wants to make postcards with his own hands. For this purpose, he has a sheet of paper of size , which can be cut into pieces.Polycarp can cut any sheet of paper  that he has in only two cases:   If  is even, then he can cut the sheet in half and get two sheets of size ;  If  is even, then he can cut the sheet in half and get two sheets of size ; If  and  are even at the same time, then Polycarp can cut the sheet according to any of the rules above.After cutting a sheet of paper, the total number of sheets of paper is increased by .Help Polycarp to find out if he can cut his sheet of size  at into  or more pieces, using only the rules described above.", "input": "The first line contains one integer  ()\u00a0\u2014 the number of test cases. Then  test cases follow. Each test case consists of one line containing three integers , ,  ()\u00a0\u2014 the width and height of the sheet Polycarp has and the number of friends he needs to send a postcard to.", "output": "For each test case, output on a separate line:    \"\", if it is possible to cut a sheet of size  into at least  pieces;  \"\" otherwise.  You can output \"\" and \"\" in any case (for example, the strings , ,  and  will be recognized as positive).", "tutorial": "If we cut the sheet in width, we will reduce its width by half, without changing the height. Therefore, the width and height dimensions do not affect each other in any way.Let's calculate the maximum number of sheets that we can get by cutting. Let's say that initially this number is . Let's cut the sheet in width. Then the sheets number will become , but they will be the same. If we can cut the sheet again, it is more profitable to cut all the sheets we have, because this way we will get more new sheets and their size will still be the same.So we can maintain the current number of identical sheets and as long as either the width or height is divided by , divide it, and multiply the number of sheets by two.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nvoid solve() {\n  int w, h, n;\n  cin >> w >> h >> n;\n  int res = 1;\n  while (w % 2 == 0) {\n    w /= 2;\n    res *= 2;\n  }\n  while (h % 2 == 0) {\n    h /= 2;\n    res *= 2;\n  }\n  cout << (res >= n ? \"YES\\n\" : \"NO\\n\");\n}\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}