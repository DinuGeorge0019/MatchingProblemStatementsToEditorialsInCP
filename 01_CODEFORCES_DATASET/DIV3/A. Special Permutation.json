{"link": "https://codeforces.com//contest/1454/problem/A", "problemId": "808360", "shortId": "1454A", "contest_number": "1454", "name": "A. Special Permutation", "statement": "You are given one integer  ().Recall that a permutation of length  is an array consisting of  distinct integers from  to  in arbitrary order. For example,  is a permutation of length , but  is not a permutation ( appears twice in the array) and  is also not a permutation ( but there is  in the array).Your task is to find a permutation  of length  that there is no index  () such that  (so, for all  from  to  the condition  should be satisfied).You have to answer  independent test cases.If there are several answers, you can print any. It can be proven that the answer exists for each .", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The only line of the test case contains one integer  () \u2014 the length of the permutation you have to find.", "output": "For each test case, print  distinct integers  \u2014 a permutation that there is no index  () such that  (so, for all  from  to  the condition  should be satisfied). If there are several answers, you can print any. It can be proven that the answer exists for each .", "tutorial": "There are many possible solutions. One of them is just to print $$$2, 3, \\ldots, n, 1$$$.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tcout << (i + 1) % n + 1 << \" \";\n\t\t}\n\t\tcout << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}