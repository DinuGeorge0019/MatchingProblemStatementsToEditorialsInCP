{"link": "https://codeforces.com//contest/1560/problem/C", "problemId": "1082098", "shortId": "1560C", "contest_number": "1560", "name": "C. Infinity Table", "statement": "Polycarp has found a table having an infinite number of rows and columns. The rows are numbered from , starting from the topmost one. The columns are numbered from , starting from the leftmost one.Initially, the table hasn't been filled and Polycarp wants to fix it. He writes integers from  and so on to the table as follows.   The leftmost topmost cell of the table is filled with the number . Then he writes in the table all positive integers beginning from  sequentially using the following algorithm.First, Polycarp selects the leftmost non-filled cell in the first row and fills it. Then, while the left neighbor of the last filled cell is filled, he goes down and fills the next cell. So he goes down until the last filled cell has a non-filled neighbor to the left (look at the vertical arrow going down in the figure above).After that, he fills the cells from the right to the left until he stops at the first column (look at the horizontal row in the figure above). Then Polycarp selects the leftmost non-filled cell in the first row, goes down, and so on.A friend of Polycarp has a favorite number . He wants to know which cell will contain the number. Help him to find the indices of the row and the column, such that the intersection of the row and the column is the cell containing the number .", "input": "The first line contains one integer  () \u2014 the number of test cases. Then  test cases follow. Each test case consists of one line containing one integer  () which location must be found.", "output": "For each test case, output in a separate line two integers  and  () separated by spaces \u2014 the indices of the row and the column containing the cell filled by the number , respectively.", "tutorial": "Let's call a set of cells being filled from the topmost row to the leftmost column a . E. g. the -st layer consists of the single number , the -nd layer consists of the numbers ,  and , the -rd layer consists of the numbers , , ,  and , etc.The number of cells in layers forms an arithmetic progression. The first layer consists of  cells, the -th layer consists of  cells. The minimum number in the -th layer  is equal to the sum of sizes of all layers from the -st to the -th plus .Suppose that  belongs to the -th layer. Consider the value of . Polycarp fills exactly  cells on the -th layer before he starts filling the cells from the right to the left (i. e. while he goes down). Therefore, if , the number  belongs to the -th row and the -th column. Otherwise, the number belongs to the -th row and the -th column.Consider a way to find the coordinates of a given number . Let's iterate by the layer number  to which given the number belongs calculating the values of  and  (going to the next layer, let's calculate the next layer parameters as follows: ; ). The iteration must be stopped if the layer number  is such that . Using the values of  and , we can calculate the given number's coordinates in the described way in . The total time of calculating the coodrinates for one given  is  where  is the number of the layer to which the given  belongs.Let's represent the value of  as : . , hence . Therefore, the coordinates of one number  may be calculated in . At the same time, as it follows from the formulas, the layer number  can be calculated as follows:  (the square root of  rounded up). To avoid accuracy problems, you can calculate the value using a loop.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint t;\n\tcin >> t;\n\n\twhile (t--)\n\t{\n\t\tint k;\n\t\tcin >> k;\n\n\t\tint a = 1;\n\t\tint x = 1;\n\t\tint i = 1;\n\n\t\twhile (k >= x + a)\n\t\t{\n\t\t\tx += a;\n\t\t\ta += 2;\n\t\t\ti += 1;\n\t\t}\n\n\t\tint m = k - x + 1;\n\t\tif (m <= i)\n\t\t\tcout << m << ' ' << i << '\\n';\n\t\telse\n\t\t\tcout << i << ' ' << (i - (m - i)) << '\\n';\n\t}\n}\n\n", "interactive": false, "noSolution": false, "noTutorial": false}