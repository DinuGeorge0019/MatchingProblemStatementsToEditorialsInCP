{"link": "https://codeforces.com//contest/1066/problem/B", "problemId": "235860", "shortId": "1066B", "contest_number": "1066", "name": "B. Heaters", "statement": "Vova's house is an array consisting of  elements (yeah, this is the first problem, I think, where someone  in the array). There are heaters in some positions of the array. The -th element of the array is  if there is a heater in the position , otherwise the -th element of the array is .Each heater has a value  ( is the same for all heaters). This value means that the heater at the position  can warm up all the elements in range .Vova likes to walk through his house while he thinks, and he hates cold positions of his house. Vova wants to switch some of his heaters on in such a way that each element of his house will be warmed up by at least one heater. Vova's target is to warm up the whole house (all the elements of the array), i.e. if ,  and heaters are at positions  and , then Vova can warm up the whole house if he switches all the heaters in the house on (then the first  elements will be warmed up by the first heater and the last  elements will be warmed up by the second heater).Initially, all the heaters are off.But from the other hand, Vova didn't like to pay much for the electricity. So he wants to switch the  number of heaters on in such a way that each element of his house is warmed up by at least one heater.Your task is to find this number of heaters or say that it is impossible to warm up the whole house.", "input": "The first line of the input contains two integers  and  () \u2014 the number of elements in the array and the value of heaters. The second line contains  integers  () \u2014 the Vova's house description.", "output": "Print one integer \u2014 the minimum number of heaters needed to warm up the whole house or  if it is impossible to do it.", "tutorial": "Let's solve this problem greedily. Let  be the last position from the left covered by at least one heater. Initially,  equals . While , lets repeat the following process: firstly, we have to find the rightmost heater in range . It can be done in time  because of given constrains or in  using precalculated prefix values for each  in range . If there is no such heater then the answer is , otherwise let's set , increase the answer by  and repeat the process if .There is another one solution to this problem. Assume that the initial answer equals to the total number of heaters. Let's calculate an array  of length , where  means the number of heaters covering the -th element. It can be done in . This array will mean that we are switch all the heaters on and we know for each element the number of heaters covers this element. Now if for at least  holds  then the answer is . Otherwise let's switch useless heaters off. Let's iterate over all heaters from left to right. Let the current heater have position . We need to check if it is useless or not. Let's iterate in range  and check if there is at least one element  in this segment such that . If there is then the current heater is not useless and we cannot switch it off. Otherwise we can decrease the answer by , switch this heater off (decrease  for all  in range ) and continue the process.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, r;\n\tcin >> n >> r;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\t\n\tint ans = 0;\n\tint last = -1;\n\twhile (last < n - 1) {\n\t\tint pos = -1;\n\t\tfor (int i = n - 1; i > max(-1, last - r + 1); --i) {\n\t\t\tif (a[i] == 1 && i - r <= last) {\n\t\t\t\tpos = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (pos == -1) {\n\t\t\tcout << -1 << \"\\n\";\n\t\t\treturn 0;\n\t\t}\n\t\t++ans;\n\t\tlast = pos + r - 1;\n\t}\n\t\n\tcout << ans << \"\\n\";\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}