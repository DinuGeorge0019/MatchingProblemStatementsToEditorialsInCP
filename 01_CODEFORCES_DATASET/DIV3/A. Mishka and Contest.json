{"link": "https://codeforces.com//contest/999/problem/A", "problemId": "192340", "shortId": "999A", "contest_number": "999", "name": "A. Mishka and Contest", "statement": "Mishka started participating in a programming contest. There are  problems in the contest. Mishka's problem-solving skill is equal to .Mishka arranges all problems from the contest into a list. Because of his weird principles, Mishka only solves problems from one of the ends of the list. Every time, he chooses which end (left or right) he will solve the next problem from. Thus, each problem Mishka solves is either the leftmost or the rightmost problem in the list.Mishka cannot solve a problem with difficulty greater than . When Mishka solves the problem, it disappears from the list, so the length of the list decreases by . Mishka stops when he is unable to solve any problem from any end of the list.How many problems can Mishka solve?", "input": "The first line of input contains two integers  and  () \u2014 the number of problems in the contest and Mishka's problem-solving skill. The second line of input contains  integers  (), where  is the difficulty of the -th problem. The problems are given in order from the leftmost to the rightmost in the list.", "output": "Print one integer \u2014 the maximum number of problems Mishka can solve.", "tutorial": "You can iterate over all the elements of the array from left to right. Count the number of problems Mishka will solve from the left end of the list and break if he cannot solve the next one. Let's denote the number of problems Mishka will solve from the left end of the list by . Do the same thing independently from right to left. Denote the number of problems Mishka will solve from the right end of the list by . Then the answer is .Time complexity \u2014 .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, k;\n\tcin >> n >> k;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i)\n\t\tcin >> a[i];\n\t\n\tint ans = 0;\n\twhile (!a.empty() && a.back() <= k) {\n\t\t++ans;\n\t\ta.pop_back();\n\t}\n\treverse(a.begin(), a.end());\n\twhile (!a.empty() && a.back() <= k) {\n\t\t++ans;\n\t\ta.pop_back();\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}