{"link": "https://codeforces.com//contest/1714/problem/B", "problemId": "1490428", "shortId": "1714B", "contest_number": "1714", "name": "B. Remove Prefix", "statement": "Polycarp was presented with some sequence of integers  of length  (). A sequence can make Polycarp happy only if it consists of  numbers (i.e. distinct numbers).In order to make his sequence like this, Polycarp is going to make some (possibly zero) number of moves.In one move, he can:   remove the first (leftmost) element of the sequence. For example, in one move, the sequence  will produce the sequence , which consists of different numbers.Determine the minimum number of moves he needs to make so that in the remaining sequence all elements are different. In other words, find the length of the smallest prefix of the given sequence , after removing which all values in the sequence will be unique.", "input": "The first line of the input contains a single integer  ()\u00a0\u2014 the number of test cases. Each test case consists of two lines. The first line contains an integer  () \u2014 the length of the given sequence . The second line contains  integers  () \u2014 elements of the given sequence . It is guaranteed that the sum of  values over all test cases does not exceed .", "output": "For each test case print your answer on a separate line\u00a0\u2014 the minimum number of elements that must be removed from the beginning of the sequence so that all remaining elements are different.", "tutorial": "Let's turn the problem around: we'll look for the longest suffix that will make Polycarp happy, since it's the same thing.Let's create an array , in which we will mark the numbers already encountered. Let's go along  from right to left and check if  does not occur to the right (in this case it is marked in ), if it occurs to the right, then removing any prefix that does not include , we get an array where  occurs twice, so we have to delete prefix of length .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nint main() {\n    int t;\n    cin >> t;\n    forn(tt, t) {\n        int n;\n        cin >> n;\n        vector<int> a(n);\n        forn(i, n)\n            cin >> a[i];\n        bool yes = false;\n        set<int> c;\n        for (int i = n - 1; i >= 0; i--) {\n            if (c.count(a[i])) {\n                cout << i + 1 << endl;\n                yes = true;\n                break;\n            }\n            c.insert(a[i]);\n        }\n        if (!yes)\n            cout << 0 << endl;\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}