{"link": "https://codeforces.com//contest/1108/problem/D", "problemId": "286770", "shortId": "1108D", "contest_number": "1108", "name": "D. Diverse Garland", "statement": "You have a garland consisting of  lamps. Each lamp is colored red, green or blue. The color of the -th lamp is  ('', '' and '' \u2014 colors of lamps in the garland).You have to recolor some lamps in this garland (recoloring a lamp means changing its initial color to another) in such a way that the obtained garland is .A garland is called  if any two adjacent (consecutive) lamps (i.\u2009e. such lamps that the distance between their positions is ) have distinct colors.In other words, if the obtained garland is  then for each  from  to  the condition  should be satisfied.Among all ways to recolor the initial garland to make it  you have to choose one with the  number of recolored lamps. If there are multiple optimal solutions, print  of them.", "input": "The first line of the input contains one integer  () \u2014 the number of lamps. The second line of the input contains the string  consisting of  characters '', '' and '' \u2014 colors of lamps in the garland.", "output": "In the first line of the output print one integer  \u2014 the  number of recolors needed to obtain a  garland from the given one. In the second line of the output print one string  of length  \u2014 a  garland obtained from the initial one with  number of recolors. If there are multiple optimal solutions, print  of them.", "tutorial": "Let's divide the initial string into blocks of consecutive equal letters. For example, if we have the string \"\" then have  blocks: the first block is two letters '', the second one is three letters '', the third one is two letters '' and the last one is four letters ''.Let's see at the current block (let it has the length ) and consider two cases.The first case is when this block has odd length. Then it seems like \"\". So, what is the minimum number of recolors we need to make this block correct? It is . Why can we always make this block correct for such number of recolors? Because we can recolor all '' at even positions to any '' which differs from ''. So our block will be look like \"\".The second case is when this block has even length. Then it seems like \"\" where '' is the next block letter (if the next block exists, because the last block doesn't have the next one). What is the minimum number of recolors in this case? It is . How can we recolor this block to make it correct? Let's recolor all '' at even positions (again) to any '' which differs from '' and differs from ''. So our block will be look like \"\".So all we have to do is to iterate over all blocks from left to right and apply the algorithm above to recolor them.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\t\n\tint ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint j = i;\n\t\twhile (j < n && s[i] == s[j]) {\n\t\t\t++j;\n\t\t}\n\t\tstring q = \"RGB\";\n\t\tq.erase(q.find(s[i]), 1);\n\t\tif (j < n) q.erase(q.find(s[j]), 1);\n\t\tfor (int k = i + 1; k < j; k += 2) {\n\t\t\t++ans;\n\t\t\ts[k] = q[0];\n\t\t}\n\t\ti = j - 1;\n\t}\n\t\n\tcout << ans << endl << s << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}