{"link": "https://codeforces.com//contest/1176/problem/C", "problemId": "356085", "shortId": "1176C", "contest_number": "1176", "name": "C. Lose it ", "statement": "You are given an array  consisting of  integers. Each  is one of the six following numbers: .Your task is to remove the minimum number of elements to make this array .An array of length  is called  if  is divisible by  and it is possible to split it into   .Examples of good arrays:   (the whole array is a required sequence);   (the first sequence is formed from first, second, fourth, fifth, seventh and tenth elements and the second one is formed from remaining elements);   (). Examples of bad arrays:    (the order of elements should be exactly );   (the length of the array is not divisible by );   (the first sequence can be formed from first six elements but the remaining array cannot form the required sequence). ", "input": "The first line of the input contains one integer  () \u2014 the number of elements in . The second line of the input contains  integers  (each  is one of the following numbers: ), where  is the -th element of .", "output": "Print one integer \u2014 the minimum number of elements you have to remove to obtain a  array.", "tutorial": "Let  be the number of subsequences ,  be the number of subsequences ,  \u2014 the number of subsequences  and so on, and  is the number of completed subsequences .Let's iterate over all elements of  in order from left to right. If the current element is  then let's increase  by one (we staring the new subsequence). Otherwise it is always better to continue some existing subsequence (just because why not?). If the current element is  then we can continue some subsequence , if it is  then we can continue some subsequence  and the same for remaining numbers. Let  be the -indexed position of the current element of  in list . Then the case  is described above, and in other case () if  then let's set  and  (we continue some of existing subsequences). The answer can be calculated as  after all  iterations.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tvector<int> p({4, 8, 15, 16, 23, 42});\n\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t\ta[i] = lower_bound(p.begin(), p.end(), a[i]) - p.begin();\n\t}\n\t\n\tvector<int> seq(6);\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (a[i] == 0) {\n\t\t\t++seq[0];\n\t\t} else {\n\t\t\tif (seq[a[i] - 1] > 0) {\n\t\t\t\t--seq[a[i] - 1];\n\t\t\t\t++seq[a[i]];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout << n - seq[5] * 6 << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}