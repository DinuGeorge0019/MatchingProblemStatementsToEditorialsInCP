{"link": "https://codeforces.com//contest/1213/problem/C", "problemId": "399401", "shortId": "1213C", "contest_number": "1213", "name": "C. Book Reading", "statement": "Polycarp is reading a book consisting of  pages numbered from  to . Every time he finishes the page with the number divisible by , he writes down the last digit of this page number. For example, if  and , pages divisible by  are . Their last digits are  correspondingly, their sum is .Your task is to calculate the sum of all digits Polycarp has written down.You have to answer  independent queries.", "input": "The first line of the input contains one integer  () \u2014 the number of queries. The following  lines contain queries, one per line. Each query is given as two integers  and  () \u2014 the number of pages in the book and required divisor, respectively.", "output": "For each query print the answer for it \u2014 the sum of digits written down by Polycarp.", "tutorial": "Let  be the number of integers from  to  divisible by . We can notice that because we write down only the last digit of each number divisible by  then the length of the \"cycle\" of digits does not exceed . In fact, we can always suppose that it is  because  for all  from  to . So let  for all  from  to . Then the answer is .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nint main() {\n    int q;\n    cin >> q;\n    forn(i, q) {\n        long long n, m;\n        cin >> n >> m;\n        n = n / m;\n        vector<int> digits(10);\n        forn(i, 10)\n            digits[i] = ((i + 1) * m) % 10;\n        long long sum = 0;\n        forn(i, n % 10)\n            sum += digits[i];\n        cout << sum + n / 10 * accumulate(digits.begin(), digits.end(), 0LL) << endl;\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}