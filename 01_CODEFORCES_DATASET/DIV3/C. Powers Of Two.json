{"link": "https://codeforces.com//contest/1095/problem/C", "problemId": "275103", "shortId": "1095C", "contest_number": "1095", "name": "C. Powers Of Two", "statement": "A positive integer  is called a  if it can be represented as , where  is a non-negative integer. So, the  are .You are given two positive integers  and . Your task is to represent  as the  of   .", "input": "The only line of the input contains two integers  and  (, ).", "output": "If it is impossible to represent  as the sum of  powers of two, print . Otherwise, print , and then print  positive integers  such that each of  is a power of two, and . If there are multiple answers, you may print any of them.", "tutorial": "First of all, let's analyze how can we calculate the minimum number of powers of two needed to get  as the sum. We can use binary representation of : each bit in it, which is equal to , becomes a summand in the answer.Firstly, if the number of summands is greater than  then the answer is . Okay, what if we don't have enough summands? Every summand  can be broken down into two summands equal to . Let's maintain all summands greater than  somewhere (stack, array, queue, multiset, anything you want), and pick an arbitrary summand and break it into two until we have exactly  summands. If , then this process will terminate since we will have some summand to pick until all of them are equal to .", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n\tint n, k;\n\tcin >> n >> k;\n\tmap<int, int> ans;\n\tqueue<int> q;\n\tfor(int i = 0; i <= 30; i++)\n\t\tif(n & (1 << i))\n\t\t{\n\t\t\tif(i > 0) q.push(1 << i);\n\t\t\tans[1 << i]++;\n\t\t}\n\tif(int(ans.size()) > k)\n\t{\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tint cnt = ans.size();\n\twhile(cnt < k && !q.empty())\n\t{\n\t\tint z = q.front();\n\t\tq.pop();\n\t\tans[z]--;\n\t\tans[z / 2] += 2;\n\t\tif(z / 2 > 1)\n\t\t{\n\t\t\tq.push(z / 2);\n\t\t\tq.push(z / 2);\n\t\t}\n\t\tcnt++;\n\t}\n\tif(cnt < k)\n\t{\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tputs(\"YES\");\n\tfor(auto x : ans)\n\t\tfor(int i = 0; i < x.second; i++)\n\t\t\tprintf(\"%d \", x.first);\n\tputs(\"\");\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}