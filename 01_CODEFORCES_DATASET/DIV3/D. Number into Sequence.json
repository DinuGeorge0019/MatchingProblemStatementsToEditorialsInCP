{"link": "https://codeforces.com//contest/1454/problem/D", "problemId": "808363", "shortId": "1454D", "contest_number": "1454", "name": "D. Number into Sequence", "statement": "You are given an integer  ().Your task is to find a sequence of integers  such that:  each  is strictly greater than ;   (i.\u00a0e. the product of this sequence is );   is divisible by  for each  from  to ;   is the  possible (i.\u00a0e. the length of this sequence is the  possible). If there are several such sequences, any of them is acceptable. It can be proven that at least one valid sequence always exists for any integer .You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The only line of the test case contains one integer  (). It is guaranteed that the sum of  does not exceed  ().", "output": "For each test case, print the answer: in the first line, print one positive integer  \u2014 the  possible length of . In the second line, print  integers  \u2014 the sequence of length  satisfying the conditions from the problem statement. If there are several answers, you can print any. It can be proven that at least one valid sequence always exists for any integer .", "tutorial": "Consider $$$n$$$ in this canonical form $$${p_1}^{a_1} \\cdot {p_2}^{a_2} \\cdot \\ldots \\cdot {p_k}^{a_k}$$$ (just find the prime factorization of $$$n$$$).Let $$$i$$$ be such an index that $$$a_i$$$ is the maximum among all values of $$$a$$$. Then the answer length can not exceed $$$a_i$$$. This is because if the answer has greater length, then some number doesn't have $$$p_i$$$ in its representation (thus, there will be problems with divisibility because we are considering primes). So, let's create the answer of length $$$a_i$$$ consisting of $$$p_i$$$. Then let's just multiply the last element by all other primes in their degrees. So, we satisfied the divisibility rule and the length of the answer is the maximum possible.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tlong long n;\n\t\tcin >> n;\n\t\n\t\tvector<pair<int, long long>> val;\n\t\tfor (long long i = 2; i * i <= n; ++i) {\n\t\t\tint cnt = 0;\n\t\t\twhile (n % i == 0) {\n\t\t\t\t++cnt;\n\t\t\t\tn /= i;\n\t\t\t}\n\t\t\tif (cnt > 0) {\n\t\t\t\tval.push_back({cnt, i});\n\t\t\t}\n\t\t}\n\t\tif (n > 1) {\n\t\t\tval.push_back({1, n});\n\t\t}\n\t\n\t\tsort(val.rbegin(), val.rend());\n\t\tvector<long long> ans(val[0].first, val[0].second);\n\t\tfor (int i = 1; i < int(val.size()); ++i) {\n\t\t\tfor (int j = 0; j < val[i].first; ++j) {\n\t\t\t\tans.back() *= val[i].second;\n\t\t\t}\n\t\t}\n\t\n\t\tcout << ans.size() << endl;\n\t\tfor (auto it : ans) cout << it << \" \";\n\t\tcout << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}