{"link": "https://codeforces.com//contest/1213/problem/B", "problemId": "399400", "shortId": "1213B", "contest_number": "1213", "name": "B. Bad Prices", "statement": "Polycarp analyzes the prices of the new berPhone. At his disposal are the prices for  last days: , where  is the price of berPhone on the day .Polycarp considers the price on the day  to be bad if later (that is, a day with a greater number) berPhone was sold at a lower price. For example, if  and , then the number of days with a bad price is  \u2014 these are days  (),  () and  ().Print the number of days with a bad price.You have to answer  independent data sets.", "input": "The first line contains an integer  () \u2014 the number of sets of input data in the test. Input data sets must be processed independently, one after another. Each input data set consists of two lines. The first line contains an integer  () \u2014 the number of days. The second line contains  integers  (), where  is the price on the -th day. It is guaranteed that the sum of  over all data sets in the test does not exceed .", "output": "Print  integers, the -th of which should be equal to the number of days with a bad price in the -th input data set.", "tutorial": "Let  be the minimum price of the berPhone during days . We can precalculate this array moving from right to left and carrying the minimum price we met (in other words, if we iterate over all  from  to  then  if  otherwise ). Then the answer is the number of such days  from  to  that .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nint main() {\n    int t;\n    cin >> t;\n    forn(tt, t) {\n        int n;\n        cin >> n;\n        vector<int> a(n);\n        forn(i, n)\n            cin >> a[i];\n        int ans = 0;\n        int right_min = INT_MAX;\n        for (int i = n -  1; i >= 0; i--) {\n            if (a[i] > right_min)\n                ans++;\n            right_min = min(right_min, a[i]);\n        }\n        cout << ans << endl;\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}