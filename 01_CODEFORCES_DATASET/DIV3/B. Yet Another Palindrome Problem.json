{"link": "https://codeforces.com//contest/1324/problem/B", "problemId": "560261", "shortId": "1324B", "contest_number": "1324", "name": "B. Yet Another Palindrome Problem", "statement": "You are given an array  consisting of  integers.Your task is to determine if  has some  of length at least  that is a palindrome.Recall that an array  is called a  of the array  if  can be obtained by removing some (possibly, zero) elements from  (not necessarily consecutive) without changing the order of remaining elements. For example, ,  and  are subsequences of , but  and  are not.Also, recall that a palindrome is an array that reads the same backward as forward. In other words, the array  of length  is the palindrome if  for all  from  to . For example, arrays , ,  and  are palindromes, but arrays  and  are not.You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Next  lines describe test cases. The first line of the test case contains one integer  () \u2014 the length of . The second line of the test case contains  integers  (), where  is the -th element of . It is guaranteed that the sum of  over all test cases does not exceed  ().", "output": "For each test case, print the answer \u2014 \"\" (without quotes) if  has some  of length at least  that is a palindrome and \"\" otherwise.", "tutorial": "The first observation is that we can always try to find the palindrome of length  (otherwise, we can remove some characters from the middle until its length becomes ).The second observation is that the palindrome of length  is two equal characters and some other (maybe, the same) character between them. Now there are two ways: find the pair of equal non-adjacent characters in  or do it in  (for each character we only need to consider its left and right occurrences).", "solution": "for i in range(int(input())):\n\tn = int(input())\n\ts = list(map(int, input().split()))\n\tok = False\n\tfor i in range(n):\n\t\tfor j in range(i + 2, n):\n\t\t\tif s[i] == s[j]: ok = True\n\tprint('YES' if ok else 'NO')", "interactive": false, "noSolution": false, "noTutorial": false}