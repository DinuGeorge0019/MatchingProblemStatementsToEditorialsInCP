{"link": "https://codeforces.com//contest/1618/problem/C", "problemId": "1227953", "shortId": "1618C", "contest_number": "1618", "name": "C. Paint the Array", "statement": "You are given an array  consisting of  positive integers. You have to choose a positive integer  and paint all elements into two colors. All elements which are divisible by  will be painted red, and all other elements will be painted blue.The coloring is called beautiful if there are no pairs of adjacent elements with the same color in the array. Your task is to find any value of  which yields a beautiful coloring, or report that it is impossible.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. The first line of each testcase contains one integer  () \u2014 the number of elements of the array. The second line of each testcase contains  integers  ().", "output": "For each testcase print a single integer. If there is no such value of  that yields a beautiful coloring, print . Otherwise, print any suitable value of  ().", "tutorial": "What does it mean that no pair of adjacent elements should have the same color? It means that either all elements on odd positions are blue and all elements on even positions are red, or vice versa. So, we need to check these two cases.Let's try to solve a case when we have to find a number  such that  are divisible by , and  are not. What does it mean that  divides all of the numbers ? It means that  divides the , where  represents the greatest common divisor. Let's calculate this  using Euclidean algorithm or some built-in functions in .Okay, now we need to check all divisors of the  and find if any of them does not divide . So, we have to factorize  and generate all of its divisors... or do we? In fact, if  divides any of the numbers , then every divisor of  also divides that number. So, the only two numbers we have to check as canditates for the answer are  and .", "solution": "#include <bits/stdc++.h>     \n\nusing namespace std;\n\nvoid solve()\n{\n    int n;\n    cin >> n;\n    vector<long long> a(n);\n    for(int i = 0; i < n; i++)\n    {\n        cin >> a[i];\n    }\n    vector<long long> g(a.begin(), a.begin() + 2);\n    for(int i = 0; i < n; i++)\n    {\n        g[i % 2] = __gcd(g[i % 2], a[i]);\n    }  \n    vector<bool> good(2, true);\n    for(int i = 0; i < n; i++)\n    {\n        good[i % 2] = good[i % 2] && (a[i] % g[(i % 2) ^ 1] > 0);\n    }   \n    long long ans = 0;\n    for(int i = 0; i < 2; i++)\n        if(good[i])\n            ans = max(ans, g[i ^ 1]);\n    cout << ans << endl;\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    for(int i = 0; i < t; i++)\n    {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}