{"link": "https://codeforces.com//contest/1512/problem/F", "problemId": "953479", "shortId": "1512F", "contest_number": "1512", "name": "F. Education", "statement": "Polycarp is wondering about buying a new computer, which costs  tugriks. To do this, he wants to get a job as a programmer in a big company.There are  positions in Polycarp's company, numbered starting from one. An employee in position  earns  tugriks every day. The higher the position number, the more tugriks the employee receives. Initially, Polycarp gets a position with the number  and has  tugriks.Each day Polycarp can do one of two things:   If Polycarp is in the position of , then he can earn  tugriks.  If Polycarp is in the position of  () and has at least  tugriks, then he can spend  tugriks on an online course and move to the position . For example, if , , , , then Polycarp can act like this:   On the first day, Polycarp is in the -st position and earns  tugrik. Now he has  tugrik;  On the second day, Polycarp is in the -st position and move to the -nd position. Now he has  tugriks;  On the third day, Polycarp is in the -nd position and earns  tugriks. Now he has  tugriks;  On the fourth day, Polycarp is in the -nd position and is transferred to the -rd position. Now he has  tugriks;  On the fifth day, Polycarp is in the -rd position and earns  tugriks. Now he has  tugriks;  On the sixth day, Polycarp is in the -rd position and earns  tugriks. Now he has  tugriks;  Six days later, Polycarp can buy himself a new computer. Find the minimum number of days after which Polycarp will be able to buy himself a new computer.", "input": "The first line contains a single integer  (). Then  test cases follow. The first line of each test case contains two integers  and  (, )\u00a0\u2014 the number of positions in the company and the cost of a new computer. The second line of each test case contains  integers  (). The third line of each test case contains  integer  (). It is guaranteed that the sum of  over all test cases does not exceed .", "output": "For each test case, output the minimum number of days after which Polycarp will be able to buy a new computer.", "tutorial": "Since the array $$$a$$$ does not decrease, if we want to get the position $$$x$$$ at some point, it is best to get it as early as possible, because if we get it earlier, we will earn no less money.Therefore, the solution looks like this\u00a0\u2014 rise to some position and earn money on it for a laptop. Let's go through the number of the position and use simple formulas to calculate the number of days it takes to raise to this position and the number of days it takes to buy a laptop.From all the options, choose the minimum one.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nvoid solve() {\n    int n, c;\n    cin >> n >> c;\n    vector<int> a(n);\n    vector<int> b(n - 1);\n    for (int &e : a) {\n        cin >> e;\n    }\n    for (int &e : b) {\n        cin >> e;\n    }\n    b.push_back(0);\n    ll ans = 1e18;\n    ll cur = 0;\n    ll bal = 0;\n    for (int i = 0; i < n; i++) {\n        ans = min(ans, cur + max(0ll, c - bal + a[i] - 1) / a[i]);\n        ll newDays = max(0ll, b[i] - bal + a[i] - 1) / a[i];\n        cur += newDays + 1;\n        bal += a[i] * newDays - b[i];\n    }\n    cout << ans << \"\\n\";\n}\n\nint main() {\n    int n;\n    cin >> n;\n    while (n--) {\n        solve();\n    }\n    return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}