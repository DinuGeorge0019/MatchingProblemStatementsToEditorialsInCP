{"link": "https://codeforces.com//contest/1102/problem/A", "problemId": "280227", "shortId": "1102A", "contest_number": "1102", "name": "A. Integer Sequence Dividing", "statement": "You are given an integer sequence . You have to divide it into two sets  and  in such a way that each element belongs to  set and  is minimum possible.The value  is the absolute value of  and  is the sum of elements of the set .", "input": "The first line of the input contains one integer  ().", "output": "Print one integer \u2014 the minimum possible value of  if you divide the initial sequence  into two sets  and .", "tutorial": "The first solution: take  modulo  and solve the problem manually (then for cases  and  the answer is  and for  and  the answer is ).Prove: Let's see what can we make for numbers , ,  and . We can add  and  in  and add  and  in . Then the difference between sums will be . We can consider last four numbers this way until we have at least four numbers. And then we have a case . We can prove the solution for these four cases using bruteforce.The second solution: if  is even then the answer is  otherwise the answer is . The formula above is just .Prove: if we have an integer sequence  then we can obtain every number from  to  as the sum of some elements of this sequence. How? Greedily! You can see how this greedy works (and prove, if you want) yourself. So what's next? If  is even then we can obtain the sum  in  and in . Otherwise we can only obtain  in  and  in  (or vice versa).", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tn %= 4;\n\tif (n == 0 || n == 3) {\n\t\tcout << 0 << endl;\n\t} else {\n\t\tcout << 1 << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}