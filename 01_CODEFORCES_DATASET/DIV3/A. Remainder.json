{"link": "https://codeforces.com//contest/1165/problem/A", "problemId": "344202", "shortId": "1165A", "contest_number": "1165", "name": "A. Remainder", "statement": "You are given a huge decimal number consisting of  digits. It is guaranteed that this number has no leading zeros. Each digit of this number is either  or .You may perform several (possibly zero) operations with this number. During each operation you are allowed to change any digit of your number; you may change  to  or  to . It is possible that after some operation you can obtain a number with leading zeroes, but it does not matter for this problem.You are also given two integers . Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder  modulo . In other words, the obtained number should have remainder  when divided by .", "input": "The first line of the input contains three integers  () \u2014 the length of the number and the integers  and , respectively. The second line of the input contains one decimal number consisting of  digits, each digit of this number is either  or . It is guaranteed that the first digit of the number is .", "output": "Print one integer \u2014 the minimum number of operations you should perform to obtain the number having remainder  modulo . In other words, the obtained number should have remainder  when divided by .", "tutorial": "As we can see, last  digits of the resulting number will be zeros except the -th. So we need to change all ones to zeros (if needed) among last  digits, if the position of the digit is not , and change zero to one (if needed) otherwise. It can be done with simple cycle.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, x, y;\n\tstring s;\n\tcin >> n >> x >> y >> s;\n\t\n\tint ans = 0;\n\tfor (int i = n - x; i < n; ++i) {\n\t\tif (i == n - y - 1) ans += s[i] != '1';\n\t\telse ans += s[i] != '0';\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}