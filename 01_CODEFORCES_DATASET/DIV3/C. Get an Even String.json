{"link": "https://codeforces.com//contest/1660/problem/C", "problemId": "1349757", "shortId": "1660C", "contest_number": "1660", "name": "C. Get an Even String", "statement": "A string  is called  if it consists of a concatenation (joining) of strings of length  consisting of the same characters. In other words, a string  is even if two conditions are satisfied :  its length  is even;  for all odd  (),  is satisfied. For example, the following strings are even: \"\" (empty string), \"\", \"\", \"\", and \"\". The following strings are not even: \"\", \"\" and \"\".Given a string  consisting of lowercase Latin letters. Find the minimum number of characters to remove from the string  to make it even. The deleted characters do not have to be consecutive.", "input": "The first line of input data contains an integer  ()\u00a0\u2014the number of test cases in the test. The descriptions of the test cases follow. Each test case consists of one string  (), where \u00a0\u2014 the length of the string . The string consists of lowercase Latin letters. It is guaranteed that the sum of  on all test cases does not exceed .", "output": "For each test case, print a single number\u00a0\u2014 the minimum number of characters that must be removed to make  even.", "tutorial": "We will act greedily: we will make an array  consisting of  elements, in which we will mark  if the letter is already encountered in the string, and  otherwise. In the variable  we will store the length of the even string that can be obtained from . We will go through the string by executing the following algorithm:   if , mark .  if , then we already have a pair of repeating characters to add to an even string \u2014 add  to the number  and clear the array . Clearing  is necessary because both characters that will make up the next pair must be in the  string after the current character. In other words, if the last character in the current pair was , then the first character in the new pair can be , where .Then we calculate the answer as .", "solution": "#include<bits/stdc++.h>\nusing namespace std;\nint sz = 26;\n \nvoid solve(){\n    string s;\n    cin >> s;\n    int m = 0, n = (int)s.size();\n    vector<bool>prev(sz, false);\n    for(auto &i : s){\n        if(prev[i - 'a']){\n            m += 2;\n            for(int j = 0; j < sz; j++) prev[j] = false;\n        }\n        else prev[i - 'a'] = true;\n    }\n \n    cout << n - m << endl;\n}\n \nint main(){\n    int t;\n    cin >> t;\n    while (t--){\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}