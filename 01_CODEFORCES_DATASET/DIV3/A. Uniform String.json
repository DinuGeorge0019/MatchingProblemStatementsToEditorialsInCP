{"link": "https://codeforces.com//contest/1092/problem/A", "problemId": "271419", "shortId": "1092A", "contest_number": "1092", "name": "A. Uniform String", "statement": "You are given two integers  and .Your task is to construct such a string  of length  that for each  from  to  there is at least one -th letter of the Latin alphabet in this string (the first letter is 'a', the second is 'b' and so on) and there are no other letters except these. You have to  of some letter (the frequency of a letter is the number of occurrences of this letter in a string). If there are several possible answers, you can print .You have to answer   queries.", "input": "The first line of the input contains one integer  () \u2014 the number of queries. The next  lines are contain queries, one per line. The -th line contains two integers  and  () \u2014 the length of the string in the -th query and the number of characters in the -th query.", "output": "Print  lines. In the -th line print the answer to the -th query:  string  satisfying the conditions in the problem statement with constraints from the -th query.", "tutorial": "The only thing you need to do is to place letters by blocks ,  and so on. The last block can contain less than  letters but it is ok. It is easy to see that this letters distribution is always not worse than others.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\tfor (int i = 0; i < t; ++i) {\n\t\tint n, k;\n\t\tcin >> n >> k;\n\t\tfor (int j = 0; j < n; ++j) {\n\t\t\tcout << char('a' + j % k);\n\t\t}\n\t\tcout << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}