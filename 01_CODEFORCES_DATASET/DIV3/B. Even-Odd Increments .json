{"link": "https://codeforces.com//contest/1744/problem/B", "problemId": "1588807", "shortId": "1744B", "contest_number": "1744", "name": "B. Even-Odd Increments ", "statement": "You are given  of integers . Process  queries of two types: query of the form \"\": add the value  to all even elements of the array , query of the form \"\": add the value  to all odd elements of the array .Note that when processing the query, we look specifically at the odd/even value of , not its index.After processing each query, print the sum of the elements of the array .Please note that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like  for C++).", "input": "The first line of the input contains an integer  ) \u2014 the number of test cases. The descriptions of the test cases follow. The first line of each test case contains two integers  and  (, ) \u2014 the length of array  and the number of queries. The second line of each test case contains exactly  integers:  () \u2014 elements of the array . The following  lines contain queries as two integers  and  , ). It is guaranteed that the sum of values  over all test cases in a test does not exceed . Similarly, the sum of values  over all test cases does not exceed .", "output": "For each test case, print  numbers: the sum of the elements of the array  after processing a query.", "tutorial": "Let \u00a0\u2014 the initial sum in the array, \u00a0\u2014 the number of even numbers,  \u2014 the number of odd numbers.Let's see how these values \u200b\u200bchange with each action. In fact, we can consider four main options: Add an even number  to all even numbers. Then  will increase by , and the number of even and odd numbers will remain the same. Add an odd number  to all even numbers. Then  will increase by , the number of even numbers will become , all numbers will become odd, so . Add an even number  to all odd numbers. Then  will increase by , and the number of even and odd numbers will remain the same. Add an odd number  to all odd numbers. Then  will increase by , the number of odd numbers will become , all numbers will become even, so .", "solution": "#include<bits/stdc++.h>\nusing namespace std;\n\nint t,n,type,x,q;\nint a[100007];\nlong long sum;\nlong long cnt[2];\n\nint main(){\n\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin>>t;\n    for(int i=1;i<=t;i++){\n        cin>>n>>q;\n        cnt[0]=cnt[1]=sum=0;\n        for(int f=0;f<n;f++){\n            cin>>a[f];\n            cnt[a[f]%2]++;\n            sum+=a[f];\n        }\n        \n        for(int f=0;f<q;f++){\n            cin>>type>>x;\n            if(type==0){\n                if(x%2==0){\n                    sum+=cnt[0]*x;\n                }else{\n                    sum+=cnt[0]*x;\n                    cnt[1]+=cnt[0]; cnt[0]=0;\n                }\n            }else{\n                if(x%2==0){\n                    sum+=cnt[1]*x;\n                }else{\n                    sum+=cnt[1]*x;\n                    cnt[0]+=cnt[1]; cnt[1]=0;\n                }\n            }\n            cout<<sum<<\"\\n\";\n        }\n    }\n\n    return 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}