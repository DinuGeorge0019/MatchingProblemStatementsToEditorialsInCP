{"link": "https://codeforces.com//contest/1454/problem/B", "problemId": "808361", "shortId": "1454B", "contest_number": "1454", "name": "B. Unique Bid Auction", "statement": "There is a game called \"Unique Bid Auction\". You can read more about it here: https://en.wikipedia.org/wiki/Unique_bid_auction (though you don't have to do it to solve this problem).Let's simplify this game a bit. Formally, there are  participants, the -th participant chose the number . The winner of the game is such a participant that the number he chose is  (i.\u00a0e. nobody else chose this number except him) and is  (i.\u00a0e. among all unique values of  the minimum one is the winning one).Your task is to find the  of the participant who won the game (or  if there is no winner). Indexing is -based, i.\u00a0e. the participants are numbered from  to .You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The first line of the test case contains one integer  () \u2014 the number of participants. The second line of the test case contains  integers  (), where  is the -th participant chosen number. It is guaranteed that the sum of  does not exceed  ().", "output": "For each test case, print the answer \u2014 the  of the participant who won the game (or  if there is no winner). .", "tutorial": "This is a simple implementation problem. Let's calculate two values for each $$$i$$$ from $$$1$$$ to $$$n$$$: $$$cnt_i$$$ \u2014 the number of occurrences of $$$i$$$ in $$$a$$$ and $$$idx_i$$$ \u2014 any position of $$$i$$$ in $$$a$$$.Then, let's iterate through $$$i$$$ from $$$1$$$ to $$$n$$$ and, if $$$cnt_i = 1$$$, just print $$$idx_i$$$ (because if it is the only such element then we found the winner). If we didn't find any such element, we have to print .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> cnt(n + 1), idx(n + 1);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\t++cnt[x];\n\t\t\tidx[x] = i + 1;\n\t\t}\n\t\tint ans = -1;\n\t\tfor (int i = 0; i <= n; ++i) {\n\t\t\tif (cnt[i] == 1) {\n\t\t\t\tans = idx[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}