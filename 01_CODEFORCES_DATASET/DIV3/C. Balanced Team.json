{"link": "https://codeforces.com//contest/1133/problem/C", "problemId": "308946", "shortId": "1133C", "contest_number": "1133", "name": "C. Balanced Team", "statement": "You are a coach at your local university. There are  students under your supervision, the programming skill of the -th student is .You have to create a team for a new programming competition. As you know, the more students some team has the more probable its victory is! So you have to create a team with the maximum number of students. But you also know that a team should be . It means that the programming skill of each pair of students in a created team should differ by no more than .Your task is to report the maximum possible number of students in a  team.", "input": "The first line of the input contains one integer  () \u2014 the number of students. The second line of the input contains  integers  (), where  is a programming skill of the -th student.", "output": "Print one integer \u2014 the maximum possible number of students in a  team.", "tutorial": "Let's sort all values in non-decreasing order. Then we can use two pointers to calculate for each student  the maximum number of students  such that  (). This is pretty standard approach. We also can use binary search to do it (or we can store for each programming skill the number of students with this skill and just iterate from some skill  to  and sum up all numbers of students).", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tsort(a.begin(), a.end());\n\tint ans = 0;\n\tint j = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\twhile (j < n && a[j] - a[i] <= 5) {\n\t\t\t++j;\n\t\t\tans = max(ans, j - i);\n\t\t}\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}