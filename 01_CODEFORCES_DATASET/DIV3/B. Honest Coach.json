{"link": "https://codeforces.com//contest/1360/problem/B", "problemId": "629822", "shortId": "1360B", "contest_number": "1360", "name": "B. Honest Coach", "statement": "There are  athletes in front of you. Athletes are numbered from  to  from left to right. You know the strength of each athlete\u00a0\u2014 the athlete number  has the strength .You want to split all athletes into two teams. Each team must have at least one athlete, and each athlete must be exactly in one team.You want the strongest athlete from the first team to differ as little as possible from the weakest athlete from the second team. Formally, you want to split the athletes into two teams  and  so that the value  is as small as possible, where  is the maximum strength of an athlete from team , and  is the minimum strength of an athlete from team .For example, if  and the strength of the athletes is , then one of the possible split into teams is:   first team: ,  second team: . In this case, the value  will be equal to . This example illustrates one of the ways of optimal split into two teams.Print the minimum value .", "input": "The first line contains an integer  ()\u00a0\u2014 the number of test cases in the input. Then  test cases follow. Each test case consists of two lines.  The first line contains positive integer  ()\u00a0\u2014 number of athletes.  The second line contains  positive integers  (), where \u00a0\u2014 is the strength of the -th athlete. Please note that  values may not be distinct.", "output": "For each test case print one integer\u00a0\u2014 the minimum value of  with the optimal split of all athletes into two teams. Each of the athletes must be a member of exactly one of the two teams.", "tutorial": "Let's found two athletes with numbers  and  (the strength of  is not greater than the strength of ), which have the minimal modulus of the difference of their strength. Obviously, we cannot get an answer less than this. Let's show how to get the partition with exactly this answer.Sort all athletes by strength. Our two athletes will stand in neighboring positions (otherwise, we can decrease the answer). Let the first team contains all athletes who stand on positions not further than , and the second team contains other athletes. We got a partition, in which the athlete with number  has the maximal strength in the first team, and the athlete with number  has the minimal strength in the second team.", "solution": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tint test;\n\tcin >> test;\n\n\tfor (int tt = 0; tt < test; tt++) {\n\t\tint n;\n\t\tcin >> n;\n\n\t\tvector<int> a(n);\n\n\t\tfor (int &x : a) {\n\t\t\tcin >> x;\n\t\t}\n\n\t\tsort(a.begin(), a.end());\n\n\t\tint result = a[n - 1] - a[0];\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\t\tresult = min(result, a[j] - a[i]);\n\t\t\t}\n\t\t}\n\n\t\tcout << result << endl;\n\t}\n\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}