{"link": "https://codeforces.com//contest/1547/problem/B", "problemId": "1041926", "shortId": "1547B", "contest_number": "1547", "name": "B. Alphabetical Strings", "statement": "A string  of length  () is called  if it can be obtained using the following algorithm:  first, write an empty string to  (i.e. perform the assignment \u00a0);  then perform the next step  times;  at the -th step take -th lowercase letter of the Latin alphabet and write it either to the left of the string  or to the right of the string  (i.e. perform the assignment \u00a0\u00a0 or \u00a0\u00a0, where  is the -th letter of the Latin alphabet). In other words, iterate over the  first letters of the Latin alphabet starting from '' and etc. Each time we prepend a letter to the left of the string  or append a letter to the right of the string . Strings that can be obtained in that way are alphabetical.For example, the following strings are alphabetical: \"\", \"\", \"\", \"\" and \"\". The following strings  alphabetical: \"\", \"\", \"\", \"\", \"\" and \"\".From the given string, determine if it is alphabetical.", "input": "The first line contains one integer  ()\u00a0\u2014 the number of test cases. Then  test cases follow. Each test case is written on a separate line that contains one string . String  consists of lowercase letters of the Latin alphabet and has a length between  and , inclusive.", "output": "Output  lines, each of them must contain the answer to the corresponding test case. Output  if the given string  is alphabetical and  otherwise. You can output  and  in any case (for example, strings , ,  and  will be recognized as a positive answer).", "tutorial": "For a start, let's find the position of the letter '' in string . If this position does not exist, then the answer would be ''. Suppose that this position exists and equals . Let's create two pointers  and . Initially . We will try to build string  using the algorithm from the statement. Suppose that we have built substring  in  iterations. Consider the next letter of the Latin alphabet . Let's look at cases:   find position  of the letter  in  (if it does not exist then '');  if  then make an assignment  and process the next letter ;  if  then make an assignment  and process the next letter ;  otherwise string  is not alphabetical and the answer is ''.  So, if we have built the string in  iteration, then string  is alphabetical and the answer is ''.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nint main() {\n    int t;\n    cin >> t;\n    forn(tt, t) {\n        string s;\n        cin >> s;\n        size_t L = s.find('a');\n        if (L == string::npos) {\n            cout << \"NO\" << endl;\n            continue;\n        }\n        size_t n = s.length(), R = L;\n        bool yes = true;\n        for (size_t i = 1; i < n; i++) {\n            size_t pos = s.find(char('a' + i));\n            if (pos == string::npos || (pos != L - 1 && pos != R + 1)) {\n                yes = false;\n                break;\n            } else {\n                L = min(L, pos);\n                R = max(R, pos);\n            }\n        }\n        cout << (yes ? \"YES\" : \"NO\") << endl;\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}