{"link": "https://codeforces.com//contest/1579/problem/A", "problemId": "1123866", "shortId": "1579A", "contest_number": "1579", "name": "A. Casimir's String Solitaire", "statement": "Casimir has a string  which consists of capital Latin letters '', '', and '' only. Each turn he can choose to do one of the two following actions:  he can either erase exactly one letter ''  exactly one letter '' from arbitrary places of the string (these letters don't have to be adjacent);  or he can erase exactly one letter ''  exactly one letter '' from arbitrary places in the string (these letters don't have to be adjacent). Therefore, each turn the length of the string is decreased exactly by . All turns are independent so for each turn, Casimir can choose any of two possible actions.For example, with \u00a0\u00a0\"\" he can obtain a string \u00a0\u00a0\"\" in one turn (by erasing the first occurrence of '' and the second occurrence of ''). There are also many other options for a turn aside from this particular example.For a given string  determine whether there is a sequence of actions leading to an empty string. In other words, Casimir's goal is to erase all letters from the string. Is there a way to do this?", "input": "The first line contains an integer  ()\u00a0\u2014 the number of test cases. Each test case is described by one string , for which you need to determine if it can be fully erased by some sequence of turns. The string  consists of capital letters '', '', '' and has a length from  to  letters, inclusive.", "output": "Print  lines, each line containing the answer to the corresponding test case. The answer to a test case should be  if there is a way to fully erase the corresponding string and  otherwise. You may print every letter in any case you want (so, for example, the strings , , , and  will all be recognized as positive answers).", "tutorial": "Note that no matter which action is chosen, after this action is performed    one letter '' is erased from the string   two letters in total are erased from the string Let's denote the length of the string  by . If  is odd, then described turns can not erase all the characters from the strings, because if he is deleting two letters on each turn, the length will always remain odd. For example, if the original length of the string is , then after one turn it will be equal to , and after two moves it will be equal to  in which case the next turn is impossible. Thus, if the length of the row is odd, the answer is .If  is even, it will take exactly  steps to erase all characters from the string. Since each action removes exactly one letter '' from the string, the string can become empty only if there are exactly  letters ''.Let us show that this condition is sufficient, that is, if a string has exactly half of the letters equal to '', then there always exists a sequence of actions leading to an empty string. Indeed, if a string of length  has exactly  letters '', exactly  letters '' and exactly  letters '', then . Then Casimir can make  moves of the first type, each time removing the first occurrence of '' and the first occurrence of '', and  moves of the second type, each time removing the first occurrence of '' and the first occurrence of ''. After  such moves, the string will become empty.Thus, checking that the number of letters '' in the string is exactly half of its length was enough to solve the problem.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        string s;\n        cin >> s;\n        cout << (count(s.begin(), s.end(), 'B') * 2 == s.size() ?\n                 \"YES\\n\" : \"NO\\n\");\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}