{"link": "https://codeforces.com//contest/1154/problem/B", "problemId": "331478", "shortId": "1154B", "contest_number": "1154", "name": "B. Make Them Equal", "statement": "You are given a sequence  consisting of  integers.You can choose any non-negative integer  (i.e. ), and for each  you can:  add  (only once), i.\u2009e. perform , or  subtract  (only once), i.\u2009e. perform , or  leave the value of  unchanged. It is possible that after an operation the value  becomes negative.Your goal is to choose such   and perform changes in such a way, that all  are equal (i.e. ).Print the required  or, if it is impossible to choose such value , print .For example, for array  the value  is minimum possible because you can obtain the array  if you will add  to  and subtract  from . And for array  the value  is also minimum possible. You can add it to  and subtract it from  and obtain the array .", "input": "The first line of the input contains one integer  () \u2014 the number of elements in . The second line of the input contains  integers  () \u2014 the sequence .", "output": "Print one integer \u2014 the  value  such that if you add this value to some , subtract this value from some  and leave some  without changes, all obtained values become equal. If it is impossible to choose such value , print .", "tutorial": "Let's leave only unique values of the given array in the array  (i.\u2009e. construct an array  that is actually array  without duplicate element) and sort it in ascending order. Then let's consider the following cases:   If the length of  is greater than  then the answer is ;  if the length of  is  then there are two cases:   if  then the answer is ;  otherwise the answer is ;   if the length of  is  then there are also two cases:   if  is even then the answer is ;  otherwise the answer is ;   and if the length of  is  then the answer is . ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tsort(a.begin(), a.end());\n\ta.resize(unique(a.begin(), a.end()) - a.begin());\n\tif (a.size() > 3) {\n\t\tcout << -1 << endl;\n\t} else {\n\t\tif (a.size() == 1) {\n\t\t\tcout << 0 << endl;\n\t\t} else if (a.size() == 2) {\n\t\t\tif ((a[1] - a[0]) % 2 == 0) {\n\t\t\t\tcout << (a[1] - a[0]) / 2 << endl;\n\t\t\t} else {\n\t\t\t\tcout << a[1] - a[0] << endl;\n\t\t\t}\n\t\t} else {\n\t\t\tif (a[1] - a[0] != a[2] - a[1]) {\n\t\t\t\tcout << -1 << endl;\n\t\t\t} else {\n\t\t\t\tcout << a[1] - a[0] << endl;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}