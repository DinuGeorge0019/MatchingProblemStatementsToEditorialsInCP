{"link": "https://codeforces.com//contest/1294/problem/C", "problemId": "521709", "shortId": "1294C", "contest_number": "1294", "name": "C. Product of Three Numbers", "statement": "You are given one integer number . Find three   such that  and  or say that it is impossible to do it.If there are several answers, you can print any.You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. The next  lines describe test cases. The -th test case is given on a new line as one integer  ().", "output": "For each test case, print the answer on it. Print \"\" if it is impossible to represent  as  for some   such that . Otherwise, print \"\" and  possible such representation.", "tutorial": "Suppose . Let's try to minimize  and maximize . Let  be the minimum divisor of  greater than . Then let  be the minimum divisor of  that isn't equal  and . If  isn't equal ,  and  then the answer is \"\", otherwise the answer is \"\".Time complexity:  per query.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint q;\n\tcin >> q;\n\tfor (int i = 0; i < q; ++i) {\n\t\tint n;\n\t\tcin >> n;\n\t\tset<int> used;\n\t\tfor (int i = 2; i * i <= n; ++i) {\n\t\t\tif (n % i == 0 && !used.count(i)) {\n\t\t\t\tused.insert(i);\n\t\t\t\tn /= i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 2; i * i <= n; ++i) {\n\t\t\tif (n % i == 0 && !used.count(i)) {\n\t\t\t\tused.insert(i);\n\t\t\t\tn /= i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (int(used.size()) < 2 || used.count(n) || n == 1) {\n\t\t\tcout << \"NO\" << endl;\n\t\t} else {\n\t\t\tcout << \"YES\" << endl;\n\t\t\tused.insert(n);\n\t\t\tfor (auto it : used) cout << it << \" \";\n\t\t\tcout << endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}