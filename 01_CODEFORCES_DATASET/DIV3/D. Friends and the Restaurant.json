{"link": "https://codeforces.com//contest/1729/problem/D", "problemId": "1538785", "shortId": "1729D", "contest_number": "1729", "name": "D. Friends and the Restaurant", "statement": "A group of  friends decide to go to a restaurant. Each of the friends plans to order meals for  burles and has a total of  burles (). The friends decide to split their visit to the restaurant into several days. Each day, some group of  friends goes to the restaurant. Each of the friends visits the restaurant no more than once (that is, these groups do not intersect). These groups must satisfy the condition that the total budget of each group must be  than the amount of burles that the friends in the group are going to spend at the restaurant. In other words, the sum of all  values in the group must not exceed the sum of  values in the group.What is the maximum number of days friends can visit the restaurant?For example, let there be  friends for whom  = [] and  = []. Then:   first and sixth friends can go to the restaurant on the first day. They will spend  burles at the restaurant, and their total budget is  burles. Since , they can actually form a group.  friends with indices  can form a second group. They will spend  burles at the restaurant, and their total budget will be  burles (). It can be shown that they will not be able to form more groups so that each group has at least two friends and each group can pay the bill.So, the maximum number of groups the friends can split into is . Friends will visit the restaurant for a maximum of two days. Note that the -rd friend will not visit the restaurant at all.Output the maximum number of days the friends can visit the restaurant for given ,  and .", "input": "The first line of the input contains an integer  () \u2014 the number of test cases in the test. The descriptions of the test cases follow. The first line of each test case contains a single integer  () \u2014 the number of friends. The second line of each test case contains exactly  integers  (). The value of  corresponds to the number of burles that the friend numbered  plans to spend at the restaurant. The third line of each test case contains exactly  integers  (). The value  corresponds to the number of burles that the friend numbered  has. It is guaranteed that the sum of  values over all test cases does not exceed .", "output": "For each test case, print the maximum number of days to visit the restaurant. If friends cannot form even one group to visit the restaurant, print .", "tutorial": "First, we sort the friends in descending order of . Now for each friend we know the amount of money he lacks, or vice versa, which he has in excess.In order to maximize the number of days, it is most advantageous for friends to break into pairs. It is the number of groups that matters, not the number of people in the group, so adding a third person to the pair won't improve the answer in any way.Let's solve the problem using two pointers: for the richest friend, find the first friend from the end such that the sum of their values  exceeds the sum of their values . Then repeat this for all subsequent friends until the pointers meet.If no pair could be formed, or none of the friends has a value  greater than , then the answer is .Otherwise, print the number of pairs formed.", "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nvoid solve(){\n    int n;\n    cin >> n;\n    vector<ll>x(n), y(n);\n    vector<pair<ll, int>>dif(n);\n\n    for(auto &i : x) cin >> i;\n    for(auto &i: y) cin >> i;\n    for(int i = 0; i < n; i++){\n        dif[i].first = y[i] - x[i];\n        dif[i].second = i;\n    }\n    sort(dif.begin(), dif.end());\n    reverse(dif.begin(), dif.end());\n\n    int j = n - 1, cnt = 0;\n\n    for(int i = 0; i < n; i++){\n        while(j > i && dif[i].first + dif[j].first < 0) j--;\n        if(j <= i) break;\n        cnt++; j--;\n    }\n    cout << cnt << endl;\n}\n\nint main() {\n    int t;\n    cin >> t;\n    while(t--){\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}