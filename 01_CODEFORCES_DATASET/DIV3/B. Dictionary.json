{"link": "https://codeforces.com//contest/1674/problem/B", "problemId": "1387198", "shortId": "1674B", "contest_number": "1674", "name": "B. Dictionary", "statement": "The Berland language consists of words having . Moreover, . Any combination of two different Berland letters (which, by the way, are the same as the lowercase letters of Latin alphabet) is a correct word in Berland language.The Berland dictionary contains all words of this language. The words are listed in a way they are usually ordered in dictionaries. Formally, word  comes earlier than word  in the dictionary if one of the following conditions hold:  the first letter of  is less than the first letter of ;  the first letters of  and  are the same, and the second letter of  is less than the second letter of . So, the dictionary looks like that:  Word :   Word :   ...  Word :   Word :   Word :   ...  Word :   Word :  You are given a word  from the Berland language. Your task is to find its index in the dictionary.", "input": "The first line contains one integer  ()\u00a0\u2014 the number of test cases. Each test case consists of one line containing \u00a0\u2014 a string consisting of  (i.\u2009e. a correct word of the Berland language).", "output": "For each test case, print one integer\u00a0\u2014 the index of the word  in the dictionary.", "tutorial": "There are many different ways to solve this problem:  generate all Berland words with two for-loops and store them in an array, then for each test case, go through the array of words to find the exact word you need;  generate all Berland words with two for-loops and store them in a dictionary-like data structure ( in C++,  in Python, etc), using words as keys and their numbers as values. This allows to search for the index of the given word quickly;  for each test case, run two for-loops to iterate over the words, count the number of words we skipped, and stop at the word from the test case;  try to invent some formulas that allow counting the number of words before the given one. ", "solution": "#include <bits/stdc++.h>\n \nusing namespace std;\n \nint main() \n{\n    string w = \"aa\";\n    map<string, int> idx;\n    int i = 1;\n    for(w[0] = 'a'; w[0] <= 'z'; w[0]++)\n        for(w[1] = 'a'; w[1] <= 'z'; w[1]++)\n            if(w[0] != w[1])\n                idx[w] = i++;\n    int t;\n    cin >> t;\n    for(int i = 0; i < t; i++)\n    {\n        string s;\n        cin >> s;\n        cout << idx[s] << endl;\n    }   \n}\n", "interactive": false, "noSolution": false, "noTutorial": false}