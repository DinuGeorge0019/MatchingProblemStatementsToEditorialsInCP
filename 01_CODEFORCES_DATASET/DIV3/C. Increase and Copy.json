{"link": "https://codeforces.com//contest/1426/problem/C", "problemId": "741032", "shortId": "1426C", "contest_number": "1426", "name": "C. Increase and Copy", "statement": "Initially, you have the array  consisting of one element  ().In one move, you can do one of the following things:  Increase some () element of  by  (choose some  from  to the current length of  and increase  by one);  Append the copy of some () element of  to the end of the array (choose some  from  to the current length of  and append  to the end of the array). For example, consider the sequence of five moves:  You take the first element , append its copy to the end of the array and get .  You take the first element , increase it by  and get .  You take the second element , append its copy to the end of the array and get .  You take the first element , append its copy to the end of the array and get .  You take the fourth element , increase it by  and get . Your task is to find the  number of moves required to obtain the array with the sum at least .You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The only line of the test case contains one integer  () \u2014 the lower bound on the sum of the array.", "output": "For each test case, print the answer: the  number of moves required to obtain the array with the sum at least .", "tutorial": "It is pretty intuitive that we firstly need to do all increments and only then copy numbers (because otherwise we can swap the order of moves and the sum will not decrease). You could notice that the answer does not exceed  so we can just iterate from  to  and fix the number we will copy. Let it be . Then we need  moves to obtain it and also need  moves to get the enough number of copies. So, we can update the answer with this number of moves.Time complexity:  per test case.Actually, the required number is always pretty near to  so it is enough to try a few options in range  to get the optimal answer. This is  solution.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tint ans = 1e9;\n\t\tfor (int x = 1; x * x <= n; ++x) {\n\t\t\tans = min(ans, x - 1 + ((n - x) + x - 1) / x);\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}