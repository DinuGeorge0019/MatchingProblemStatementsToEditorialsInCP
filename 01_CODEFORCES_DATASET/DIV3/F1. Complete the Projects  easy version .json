{"link": "https://codeforces.com//contest/1203/problem/F1", "problemId": "388108", "shortId": "1203F1", "contest_number": "1203", "name": "F1. Complete the Projects  easy version ", "statement": ".Polycarp is a very famous freelancer. His current rating is  units.Some very rich customers asked him to complete some projects for their companies. To complete the -th project, Polycarp needs to have at least  units of rating; after he completes this project, his rating will change by  (his rating will increase or decrease by ) ( can be positive or negative). Polycarp's rating should not fall below zero because then people won't trust such a low rated freelancer.Is it possible to complete all the projects? Formally, write a program to check if such an order of the projects exists, that Polycarp has enough rating before starting each project, and he has non-negative rating after completing each project.In other words, you have to check that there exists such an order of projects in which Polycarp will complete them, so he has enough rating before starting each project, and has non-negative rating after completing each project.", "input": "The first line of the input contains two integers  and  () \u2014 the number of projects and the initial rating of Polycarp, respectively. The next  lines contain projects, one per line. The -th project is represented as a pair of integers  and  (, ) \u2014 the rating required to complete the -th project and the rating change after the project completion.", "output": "Print \"\" or \"\".", "tutorial": "Firstly, let's divide all projects into two sets: all projects giving us non-negative rating changes (let this set be ) and all projects giving up negative rating changes (let this set be ). Firstly let's take all projects from the set . How do we do that? Let's sort them by  in non-decreasing order because each project we take cannot make our rating less and we need to consider them in order of their requirements. If we can take the current project  (), set  and go further, otherwise print \"\" and terminate the program.Okay, what do we do with the projects that has negative ? Firstly, let's set . This means the tighter requirement of this project, obviously. Then let's sort all projects in order of  in non-increasing order and go from left to right and take all of them. If we cannot take at least one project, the answer is \"\". Otherwise the answer is \"\".", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nbool comp(const pair<int, int>& a, const pair<int, int>& b) {\n    return a.first + a.second > b.first + b.second;\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, r;\n\tcin >> n >> r;\n\tvector<pair<int, int>> pos, neg;\n\tfor (int i = 0; i < n; ++i) {\n\t\tpair<int, int> cur;\n\t\tcin >> cur.first >> cur.second;\n\t\tif (cur.second >= 0) pos.push_back(cur);\n\t\telse {\n\t\t    cur.first = max(cur.first, abs(cur.second));\n\t\t    neg.push_back(cur);\n\t\t}\n\t}\n\t\n\tsort(pos.begin(), pos.end());\n\tsort(neg.begin(), neg.end(), comp);\n\t\n\tint taken = 0;\n\tfor (int i = 0; i < int(pos.size()); ++i) {\n\t\tif (r >= pos[i].first) {\n\t\t\tr += pos[i].second;\n\t\t\t++taken;\n\t\t}\n\t}\n\t\n\tvector<vector<int>> dp(neg.size() + 1, vector<int>(r + 1, 0));\n\tdp[0][r] = taken;\n\tfor (int i = 0; i < int(neg.size()); ++i) {\n\t\tfor (int cr = 0; cr <= r; ++cr) {\n\t\t\tif (cr >= neg[i].first && cr + neg[i].second >= 0) {\n\t\t\t\tdp[i + 1][cr + neg[i].second] = max(dp[i + 1][cr + neg[i].second], dp[i][cr] + 1);\n\t\t\t}\n\t\t\tdp[i + 1][cr] = max(dp[i + 1][cr], dp[i][cr]);\n\t\t}\n\t}\n\t\n\tint ans = 0;\n\tfor (int cr = 0; cr <= r; ++cr) ans = max(ans, dp[int(neg.size())][cr]);\n\tcout << (ans == n ? \"YES\" : \"NO\") << endl;\n\t\n\treturn 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}