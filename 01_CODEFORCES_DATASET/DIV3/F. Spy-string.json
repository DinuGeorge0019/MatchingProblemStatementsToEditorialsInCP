{"link": "https://codeforces.com//contest/1360/problem/F", "problemId": "629826", "shortId": "1360F", "contest_number": "1360", "name": "F. Spy-string", "statement": "You are given  strings : all of them have the same length . The strings consist of lowercase English letters.Find any string  of length  such that each of the given  strings differs from  in at most one position. Formally, for each given string , there is no more than one position  such that .Note that the desired string  may be equal to one of the given strings , or it may differ from all the given strings.For example, if you have the strings  and , then the answer to the problem might be the string , which differs from the first only by the last character, and from the second only by the first.", "input": "The first line contains an integer  ()\u00a0\u2014 the number of test cases. Then  test cases follow. Each test case starts with a line containing two positive integers  () and  ()\u00a0\u2014 the number of strings and their length. Then follow  strings , one per line. Each of them has length  and consists of lowercase English letters.", "output": "Print  answers to the test cases. Each answer (if it exists) is a string of length  consisting of lowercase English letters. If there are several answers, print any of them. If the answer does not exist, print \"\" (\"minus one\", without quotes).", "tutorial": "Consider all strings that differ from the first one in no more than one position (this is either the first string or the first string with one character changed). We will go through all such strings and see if they can be the answer. To do this, go through all the strings and calculate the number of positions where they differ.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ld = long double;\nusing ll = long long;\n\nvoid solve() {\n    int n, m;\n    cin >> n >> m;\n    vector<string> v(n);\n    for (int i = 0; i < n; i++) {\n        cin >> v[i];\n    }\n    string ans = v[0];\n    for (int j = 0; j < m; j++) {\n        char save = ans[j];\n        for (char d = 'a'; d <= 'z'; d++) {\n            ans[j] = d;\n            bool flag = true;\n            for (int z = 0; z < n; z++) {\n                int cntErrors = 0;\n                for (int c = 0; c < m; c++) {\n                    if (v[z][c] != ans[c]) {\n                        cntErrors++;\n                    }\n                }\n                if (cntErrors > 1) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                cout << ans << endl;\n                return;\n            }\n        }\n        ans[j] = save;\n    }\n    cout << \"-1\" << endl;\n}\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}