{"link": "https://codeforces.com//contest/1077/problem/F1", "problemId": "256065", "shortId": "1077F1", "contest_number": "1077", "name": "F1. Pictures with Kittens  easy version ", "statement": "Vova likes pictures with kittens. The news feed in the social network he uses can be represented as an array of  consecutive pictures (with kittens, of course). Vova likes all these pictures, but some are more beautiful than the others: the -th picture has beauty .Vova wants to repost exactly  pictures in such a way that:   each segment of the news feed of at least  consecutive pictures has at least one picture reposted by Vova;  the sum of beauty values of reposted pictures is maximum possible. For example, if  then Vova has to repost all the pictures in the news feed. If  then Vova can skip some pictures, but between every pair of consecutive pictures Vova has to repost at least one of them.Your task is to calculate the maximum possible sum of values of reposted pictures if Vova follows conditions described above, or say that there is no way to satisfy all conditions.", "input": "The first line of the input contains three integers  and  () \u2014 the number of pictures in the news feed, the minimum length of segment with at least one repost in it and the number of pictures Vova is ready to repost. The second line of the input contains  integers  (), where  is the beauty of the -th picture.", "output": "Print  if there is no way to repost some pictures to satisfy all the conditions in the problem statement. Otherwise print one integer \u2014 the maximum sum of values of reposted pictures if Vova follows conditions described in the problem statement.", "tutorial": "Let's solve the problem using dynamic programming. Let  be the maximum total beauty of pictures if Vova is at the -th picture now, the number of remaining reposts is  and Vova reposted the -th picture. Initially,  and all other values of  are .Let's learn to do some transitions to calculate this dynamic programming. What is the way to do it? Let's iterate over the position of the previously reposted picture and try to update  using previously calculated values. Obviously, this position can be from  to . So let's iterate over the position (let it be ) and if  (we need one more repost to repost the -th picture) is not  then try to update ) (pictures are -indexed).So, where can we find the answer? The answer is . If this value is  then the answer is .Overall complexity is .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst long long INF64 = 1e18;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, k, x;\n\tcin >> n >> k >> x;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tvector<vector<long long>> dp(n + 1, vector<long long>(x + 1, -INF64));\n\t\n\tdp[0][x] = 0;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 0; j < x; ++j) {\n\t\t\tfor (int p = 1; p <= k; ++p) {\n\t\t\t\tif (i - p < 0) break;\n\t\t\t\tif (dp[i - p][j + 1] == -INF64) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdp[i][j] = max(dp[i][j], dp[i - p][j + 1] + a[i - 1]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong long ans = -INF64;\n\tfor (int i = n - k + 1; i <= n; ++i) {\n\t\tans = max(ans, *max_element(dp[i].begin(), dp[i].end()));\n\t}\n\tif (ans == -INF64) ans = -1;\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}