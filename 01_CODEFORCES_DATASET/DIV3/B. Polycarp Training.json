{"link": "https://codeforces.com//contest/1165/problem/B", "problemId": "344203", "shortId": "1165B", "contest_number": "1165", "name": "B. Polycarp Training", "statement": "Polycarp wants to train before another programming competition. During the first day of his training he should solve exactly  problem, during the second day \u2014 exactly  problems, during the third day \u2014 exactly  problems, and so on. During the -th day he should solve  problems.Polycarp has a list of  contests, the -th contest consists of  problems. During each day Polycarp has to choose  of the contests he didn't solve yet and solve it. He solves . Other problems are discarded from it. If there are no contests consisting of at least  problems that Polycarp didn't solve yet during the -th day, then Polycarp stops his training.How many days Polycarp can train if he chooses the contests optimally?", "input": "The first line of the input contains one integer  () \u2014 the number of contests. The second line of the input contains  integers  () \u2014 the number of problems in the -th contest.", "output": "Print one integer \u2014 the maximum number of days Polycarp can train if he chooses the contests optimally.", "tutorial": "After sorting the array, we can maintain the last day Polycarp can train, in the variable . Initially it is . Let's iterate over all elements of the sorted array in non-decreasing order and if the current element  then let's increase  by one. The answer will be .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tsort(a.begin(), a.end());\n\t\n\tint pos = 1;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (a[i] >= pos) ++pos;\n\t}\n\t\n\tcout << pos - 1 << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}