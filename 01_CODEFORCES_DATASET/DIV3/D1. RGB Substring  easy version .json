{"link": "https://codeforces.com//contest/1196/problem/D1", "problemId": "377793", "shortId": "1196D1", "contest_number": "1196", "name": "D1. RGB Substring  easy version ", "statement": ".You are given a string  consisting of  characters, each character is '', '' or ''.You are also given an integer . Your task is to change the minimum number of characters in the initial string  so that after the changes there will be a string of length  that is a substring of , and is also a substring of the infinite string \"\".A string  is a substring of string  if there exists a positive integer  such that , , , ..., . For example, strings \"\", \"\", \"\" are substrings of the infinite string \"\" while \"\", \"\" and \"\" are not.You have to answer  independent queries.", "input": "The first line of the input contains one integer  ()\u00a0\u2014 the number of queries. Then  queries follow. The first line of the query contains two integers  and  ()\u00a0\u2014 the length of the string  and the length of the substring. The second line of the query contains a string  consisting of  characters '', '' and ''. It is guaranteed that the sum of  over all queries does not exceed  ().", "output": "For each query print one integer\u00a0\u2014 the minimum number of characters you need to change in the initial string  so that after changing there will be a substring of length  in  that is also a substring of the infinite string \"\".", "tutorial": "You can just implement what is written in the problem statement and solve this problem this way.Let's iterate over all starting positions of the substring  from  to  and over all possible offsets of the string  = \"\"  from  to  inclusive. Then let's iterate over all position of the current substring  from  to  and carry the variable  which denotes the answer for the current starting position and the current offset. And if  then let's increase  by . After iterating over all positions  let's update the answer with the value of .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tconst string t = \"RGB\";\n\n\tint q;\n\tcin >> q;\n\tfor (int i = 0; i < q; ++i) {\n\t\tint n, k;\n\t\tstring s;\n\t\tcin >> n >> k >> s;\n\t\tint ans = 1e9;\n\t\tfor (int j = 0; j < n - k + 1; ++j) {\n\t\t\tfor (int offset = 0; offset < 3; ++offset) {\n\t\t\t\tint cur = 0;\n\t\t\t\tfor (int pos = 0; pos < k; ++pos) {\n\t\t\t\t\tif (s[j + pos] != t[(pos + offset) % 3]) {\n\t\t\t\t\t\t++cur;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans = min(ans, cur);\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}