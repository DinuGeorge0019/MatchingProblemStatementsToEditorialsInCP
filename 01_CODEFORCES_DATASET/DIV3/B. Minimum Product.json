{"link": "https://codeforces.com//contest/1409/problem/B", "problemId": "716926", "shortId": "1409B", "contest_number": "1409", "name": "B. Minimum Product", "statement": "You are given four integers , ,  and . Initially,  and . You can do the following operation   times:  Choose either  or  and decrease it by one. However, as a result of this operation, value of  cannot become less than , and value of  cannot become less than . Your task is to find the  possible product of  and  () you can achieve by applying the given operation no more than  times.You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The only line of the test case contains five integers , , ,  and  (). Additional constraint on the input:  and  always holds.", "output": "For each test case, print one integer: the  possible product of  and  () you can achieve by applying the given operation no more than  times.", "tutorial": "The only fact required to solve the problem: if we start decreasing the number, we are better to end decreasing it and only then decrease the other number. So, we can just consider two cases: when we decrease  first, and  after that and vice versa, and just take the minimum product of these two results. The rest is just implementation.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint a, b, x, y, n;\n\t\tcin >> a >> b >> x >> y >> n;\n\t\tlong long ans = 1e18;\n\t\tfor (int i = 0; i < 2; ++i) {\n\t\t\tint da = min(n, a - x);\n\t\t\tint db = min(n - da, b - y);\n\t\t\tans = min(ans, (a - da) * 1ll * (b - db));\n\t\t\tswap(a, b);\n\t\t\tswap(x, y);\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}