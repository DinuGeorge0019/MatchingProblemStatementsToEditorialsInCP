{"link": "https://codeforces.com//contest/1157/problem/E", "problemId": "336208", "shortId": "1157E", "contest_number": "1157", "name": "E. Minimum Array", "statement": "You are given two arrays  and , both of length . All elements of both arrays are from  to .You can reorder elements of the array  (if you want, you may leave the order of elements as it is). After that, let array  be the array of length , the -th element of this array is , where  is  modulo .Your task is to reorder elements of the array  to obtain the  minimum possible array .Array  of length  is lexicographically less than array  of length , if there exists such  (), that , and for any  () .", "input": "The first line of the input contains one integer  () \u2014 the number of elements in ,  and . The second line of the input contains  integers  (), where  is the -th element of . The third line of the input contains  integers  (), where  is the -th element of .", "output": "Print the  minimum possible array . Recall that your task is to reorder elements of the array  and obtain the  minimum possible array , where the -th element of  is .", "tutorial": "Let's maintain all elements of the array $$$b$$$ in a set that allows multiple copies of equal elements ( for C++). Then let's iterate from left to right over the array $$$a$$$ and try to minimize the current element in array $$$c$$$. This order will minimize the resulting array by lexicographical comparing definition. So for the $$$i$$$-th element $$$a_i$$$ let's find the minimum element greater than or equal to $$$n - a_i$$$ in the set because $$$n - a_i$$$ will give us remainder $$$0$$$, $$$n - a_i + 1$$$ will give us remainder $$$1$$$ and so on. If there is no greater or equal element in the set then let's take the minimum element of the set and take it as a pair for $$$a_i$$$ otherwise let's take this greater or equal element and remove it from the set.Time complexity: $$$O(n \\log n)$$$.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tmultiset<int> b;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tint x;\n\t\tcin >> x;\n\t\tb.insert(x);\n\t}\n\t\n\tfor (int i = 0; i < n; ++i) {\n\t\tauto it = b.lower_bound(n - a[i]);\n\t\tif (it == b.end()) it = b.begin();\n\t\tcout << (a[i] + *it) % n << \" \";\n\t\tb.erase(it);\n\t}\n\tcout << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}