{"link": "https://codeforces.com//contest/1811/problem/A", "problemId": "1864323", "shortId": "1811A", "contest_number": "1811", "name": "A. Insert Digit", "statement": "You have a  number of length  and one additional digit.You can insert this digit anywhere in the number, including at the beginning or at the end.Your task is to make the result as large as possible.For example, you have the number , and the additional digit is . Then the maximum number you can get is , and it can be obtained in two ways \u2014 by inserting a digit after the th or after the th digit of the number.", "input": "The first line contains a single integer  () \u2014 the number of test cases. The descriptions of the test cases follow. The first line of the description of each test case contains two integers  and  (; ) \u2014 the length of the number and an additional digit, respectively. The second line of the description of each test case contains a string consisting of  digits \u2014 the number that you have initially. It is guaranteed that the number does not contain leading zeros. It is guaranteed that the sum of  for all test cases does not exceed .", "output": "For each test case, output a string consisting of  digits \u2014 the maximum possible number that can be obtained.", "tutorial": "Note that numbers of the same length are compared lexicographically. That is, until some index the numbers will match, and then the digit in our number should be greater.Let's write out the numbers  until . As soon as this condition is false or the line ends, insert the digit .We got the lexicographically maximum number, which means just the maximum number.", "solution": "#include <iostream>\n\nusing namespace std;\n\nvoid solve() {\n    int n, d;\n    cin >> n >> d;\n    string s;\n    cin >> s;\n    for (int i = 0; i < n; ++i) {\n        if (s[i] - '0' >= d) {\n            cout << s[i];\n        } else {\n            cout << d;\n            for (int j = i; j < n; ++j) {\n                cout << s[j];\n            }\n            cout << '\\n';\n            return;\n        }\n    }\n    cout << d << '\\n';\n}\n\nint main() {\n    int t;\n    cin >> t;\n    for (int _ = 0; _ < t; ++_) {\n        solve();\n    }\n    return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}