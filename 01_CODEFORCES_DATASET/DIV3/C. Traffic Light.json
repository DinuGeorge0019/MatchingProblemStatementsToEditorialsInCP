{"link": "https://codeforces.com//contest/1744/problem/C", "problemId": "1588808", "shortId": "1744C", "contest_number": "1744", "name": "C. Traffic Light", "statement": "You find yourself on an unusual crossroad with a weird traffic light. That traffic light has three possible colors: red (), yellow (), green (). It is known that the traffic light repeats its colors every  seconds and at the -th second the color  is on.That way, the order of the colors is described by a string. For example, if \"\", then the traffic light works as the following: red-green-green-red-yellow-red-green-green-red-yellow- ... and so on.More formally, you are given a string  of length . At the first second the color  is on, at the second \u2014 , ..., at the -th second the color  is on, at the -st second the color  is on and so on.You need to cross the road and that can only be done when the green color is on. You know which color is on the traffic light at the moment, but you don't know the current moment of time. You need to find the minimum amount of time in which you are guaranteed to cross the road.You can assume that you cross the road immediately. For example, with \"\" and the current color  there are two options: either the green color will be on after  second, or after . That way, the answer is equal to  \u2014 that is the number of seconds that we are guaranteed to cross the road, if the current color is .", "input": "The first line contains a single integer  ) \u2014 the number of test cases. Then the description of the test cases follows. The first line of each test case contains an integer  and a symbol  (,  is one of allowed traffic light colors ,  or )\u2014 the length of the string  and the current color of the traffic light.  The second line of each test case contains a string  of the length , consisting of the letters ,  and . It is guaranteed that the symbol  is in the string  and the symbol  is in the string .  It is guaranteed, that the sum of  over all test cases does not exceed .", "output": "For each test case output the minimal number of second in which you are guaranteed to cross the road.", "tutorial": "Let's note that for each second of color  in the traffic light, we need to find the rightmost green time, and then find the largest distance between color  and the nearest green. Also, let's not forget that traffic light states are cyclical.To get rid of cyclicity, you can write the string  twice and for each cell of color  from the first half, find the nearest green color (thus we solved the problem with cyclicity). And now we can just follow this line from right to left and maintain the index of the last occurrence of green. If we encounter color , then we try to update our answer , where  is our answer,  is the nearest time that green was on color,  \u2014 current time.", "solution": "#include<bits/stdc++.h>\nusing namespace std;\n\nint t,n,last;\nchar w;\nstring s;\nint maxs[2];\n\nint main(){\n\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin>>t;\n    for(int i=1;i<=t;i++){\n        cin>>n>>w>>s;\n        maxs[0]=maxs[1]=0;\n\n        for(int f=0;f<s.size();f++){\n            if(s[f]=='g'){last=n+f;break;}\n        }\n        for(int f=s.size()-1;f>=0;f--){\n            if(s[f]=='g')last=f;\n            if(s[f]=='r')maxs[0]=max(maxs[0],last-f);\n            if(s[f]=='y')maxs[1]=max(maxs[1],last-f);\n        }\n\n        if(w=='g'){\n            cout<<0<<\"\\n\";\n        }else if(w=='r'){\n            cout<<maxs[0]<<\"\\n\";\n        }else{\n            cout<<maxs[1]<<\"\\n\";\n        }\n    }\n\n    return 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}