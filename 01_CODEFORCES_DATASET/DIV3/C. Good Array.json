{"link": "https://codeforces.com//contest/1077/problem/C", "problemId": "256062", "shortId": "1077C", "contest_number": "1077", "name": "C. Good Array", "statement": "Let's call an array  if there is an element in the array that equals to the sum of all other elements. For example, the array  is good because there is the element  which equals to the sum .You are given an array  consisting of  integers. Your task is to print all indices  of this array such that after removing the -th element from the array it will be  (let's call such indices ).For example, if , the  indices are  and :   if you remove , the array will look like  and it is ;  if you remove , the array will look like  and it is . You have to consider all removals , i.\u2009e. remove the element, check if the resulting array is , and return the element into the array.", "input": "The first line of the input contains one integer  () \u2014 the number of elements in the array . The second line of the input contains  integers  () \u2014 elements of the array .", "output": "In the first line print one integer  \u2014 the number of indices  of the array  such that after removing the -th element from the array it will be  (i.e. print the number of the  indices). In the second line print  distinct integers  in  order \u2014  indices of the array . If there are no such indices in the array , just print  in the first line and leave the second line empty or do not print it at all.", "tutorial": "The first part: calculate the sum of the whole array:  (be careful, it can be !).The second part: let's maintain an array  of size  where  will be equal to the number of elements in the given array equals to .The third part: iterate over the array, let the current position be . Set , make . If  is even,  and  then the index  is  otherwise it doesn't. And after all make  and set .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAX = 1e6;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n);\n\tvector<int> cnt(MAX + 1);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t\t++cnt[a[i]];\n\t}\n\tlong long sum = accumulate(a.begin(), a.end(), 0ll);\n\t\n\tvector<int> ans;\n\tfor (int i = 0; i < n; ++i) {\n\t\tsum -= a[i];\n\t\t--cnt[a[i]];\n\t\tif (sum % 2 == 0 && sum / 2 <= MAX && cnt[sum / 2] > 0) {\n\t\t\tans.push_back(i);\n\t\t}\n\t\tsum += a[i];\n\t\t++cnt[a[i]];\n\t}\n\t\n\tcout << ans.size() << endl;\n\tfor (auto it : ans) cout << it + 1 << \" \";\n\tcout << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}