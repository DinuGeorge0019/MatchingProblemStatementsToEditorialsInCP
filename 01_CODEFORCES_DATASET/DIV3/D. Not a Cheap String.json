{"link": "https://codeforces.com//contest/1702/problem/D", "problemId": "1456429", "shortId": "1702D", "contest_number": "1702", "name": "D. Not a Cheap String", "statement": "Let  be a string of lowercase Latin letters. Its price is the sum of the indices of letters (an integer between 1 and 26) that are included in it. For example, the price of the string  is .The string  and the integer  are given. Remove the minimal number of letters from  so that its price becomes less than or equal to  and print the resulting string. Note that the resulting string may be empty. You can delete arbitrary letters, they do not have to go in a row. If the price of a given string  is less than or equal to , then nothing needs to be deleted and  must be output.Note that when you delete a letter from , the order of the remaining letters is preserved. For example, if you delete the letter  from the string , you get .", "input": "The first line of input contains an integer  () \u2014 the number of test cases in the test. The following are descriptions of  test cases. Each case consists of two lines. The first of them is the string , it is non-empty and consists of lowercase Latin letters. Its length does not exceed . The second line contains an integer  (). It is guaranteed that the sum of string lengths  over all test cases does not exceed .", "output": "Output exactly  rows, the -th of them should contain the answer to the -th set of input data. Print the longest string that is obtained from  by deleting letters such that its price is less or equal to . If there are several answers, then output any of them. Note that the empty string \u00a0\u2014 is one of the possible answers. In this case, just output an empty string.", "tutorial": "The main idea is that it is always better to remove the most expensive symbol. To do this quickly, we will count all the symbols and remove them from the most expensive to the cheapest, counting how many times we have removed each. During the output, we will skip the characters the number of times that we deleted.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nint main() {\n    int t;\n    cin >> t;\n    forn(tt, t) {\n        string s;\n        cin >> s;\n        int p;\n        cin >> p;\n        string w(s);\n        sort(w.rbegin(), w.rend());\n        int cost = 0;\n        forn(i, s.length())\n            cost += s[i] - 'a' + 1;\n        map<char,int> del;\n        forn(i, w.length())\n            if (cost > p) {\n                del[w[i]]++;\n                cost -= w[i] - 'a' + 1;\n            }\n        forn(i, s.length()) {\n            if (del[s[i]] > 0) {\n                del[s[i]]--;\n                continue;\n            }\n            cout << s[i];\n        }\n        cout << endl;\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}