{"link": "https://codeforces.com//contest/1690/problem/B", "problemId": "1423050", "shortId": "1690B", "contest_number": "1690", "name": "B. Array Decrements", "statement": "Kristina has two arrays  and , each containing  non-negative integers. She can perform the following operation on array  any number of times:   apply a decrement to each non-zero element of the array, that is, replace the value of each element  such that  with the value  (). If  was , its value does not change. Determine whether Kristina can get an array  from an array  in some number of operations (probably zero). In other words, can she make  after some number of operations for each ?For example, let ,  and . In this case, she can apply the operation twice:   after the first application of the operation she gets ;  after the second use of the operation she gets . Thus, in two operations, she can get an array  from an array .", "input": "The first line of the input contains an integer  ()\u00a0\u2014the number of test cases in the test. The descriptions of the test cases follow. The first line of each test case contains a single integer  (). The second line of each test case contains exactly  non-negative integers  (). The third line of each test case contains exactly  non-negative integers  (). It is guaranteed that the sum of  values over all test cases in the test does not exceed .", "output": "For each test case, output on a separate line:   , if by doing some number of operations it is possible to get an array  from an array ;   otherwise.  You can output  and  in any case (for example, strings , ,  and  will be recognized as a positive response).", "tutorial": "For all elements of the arrays to become equal after subtraction of units,  for  must be satisfied. In addition, if there exists , then the equality  can be obtained only by subtracting exactly  units from . Since the equality  must be satisfied for all , the problem is reduced to checking that for  all differences  are equal and for  the difference does not exceed .", "solution": "#include<bits/stdc++.h>\n \n#define forn(i, n) for (int i = 0; i < int(n); i++)\n \nusing namespace std;\nconst int inf = 1e9 + 7;\n \nbool equals(vector<int>&a, vector<int>&b, int n){\n    int dif = inf;\n    forn(i, n){\n        if(b[i] != 0) dif = min(dif, a[i] - b[i]);\n    }\n    if(dif < 0) return false; \n    if(dif == inf) return true;\n    forn(i, n){\n        if(a[i] - b[i] > dif) return false;\n        if(b[i] != 0 && a[i] - b[i] < dif) return false;\n    }\n    return true;\n}\n \nvoid solve(){\n    int n;\n    cin >> n;\n    vector<int>a(n), b(n);\n    forn(i, n) cin >> a[i];\n    forn(i, n) cin >> b[i];\n    cout << (equals(a, b, n) ? \"YES\\n\" : \"NO\\n\");\n \n}\n \nint main(){\n    int t;\n    cin >> t;\n    while(t--){\n        solve();\n    }\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}