{"link": "https://codeforces.com//contest/1165/problem/E", "problemId": "344206", "shortId": "1165E", "contest_number": "1165", "name": "E. Two Arrays and Sum of Functions", "statement": "You are given two arrays  and , both of length .Let's define a function .Your task is to reorder the elements (choose an arbitrary order of elements) of the array  to minimize the value of . Since the answer can be very large, you have to print it modulo . Note that you should .", "input": "The first line of the input contains one integer  () \u2014 the number of elements in  and . The second line of the input contains  integers  (), where  is the -th element of . The third line of the input contains  integers  (), where  is the -th element of .", "output": "Print one integer \u2014 the minimum possible value of  after rearranging elements of , taken modulo . Note that you should .", "tutorial": "Let's use  technique to solve this problem. How many times the value  will occur in the answer? It will occur  times. Okay, now we can see that for each position  we have the value . The only non-constant value there is . So let . . We should pair the minimum  with the maximum , the second minimum with the second maximum and so on. So, let's sort the array  and the array , reverse the array  and calculate the sum of values  (don't forget about modulo here!).", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MOD = 998244353;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n), b(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> b[i];\n\t}\n\t\n\tsort(b.begin(), b.end());\n\tvector<pair<long long, int>> val(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tval[i].first = (i + 1) * 1ll * (n - i) * a[i];\n\t\tval[i].second = i;\n\t}\n\tsort(val.rbegin(), val.rend());\n\tint ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tans = (ans + (val[i].first % MOD * 1ll * b[i]) % MOD) % MOD;\n\t}\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}