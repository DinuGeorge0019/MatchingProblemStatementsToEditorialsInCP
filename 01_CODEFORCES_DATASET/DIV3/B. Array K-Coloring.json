{"link": "https://codeforces.com//contest/1102/problem/B", "problemId": "280228", "shortId": "1102B", "contest_number": "1102", "name": "B. Array K-Coloring", "statement": "You are given an array  consisting of  integer numbers.You have to color this array in  colors in such a way that:   Each element of the array should be colored in some color;  For each  from  to  there should be  element colored in the -th color in the array;  For each  from  to  all elements colored in the -th color should be . Obviously, such coloring might be impossible. In this case, print \"\". Otherwise print \"\" and  coloring (i.e. numbers , where  and  is the color of the -th element of the given array) satisfying the conditions above. If there are multiple answers, you can print .", "input": "The first line of the input contains two integers  and  () \u2014 the length of the array  and the number of colors, respectively. The second line of the input contains  integers  () \u2014 elements of the array .", "output": "If there is no answer, print \"\". Otherwise print \"\" and  coloring (i.e. numbers , where  and  is the color of the -th element of the given array) satisfying the conditions described in the problem statement. If there are multiple answers, you can print .", "tutorial": "How can we solve this problem ? Firstly, let's sort the initial array (but maintain the initial order of the elements in the array to restore the answer). Then let's just distribute all the colors . Let's color the first element in the first color, the second one \u2014 in the second, the -th element \u2014 in the -th color, the -th \u2014 in the first color, and so on. So we color the -th element in the color  ( is just modulo operation). We can see that the answer is \"\" if there is an element with frequency at least  in the array (by pigeonhole principle). Otherwise our solution builds the correct answer. So we can try to find such element in the array naively, using counting sort or many other approaches.Time complexity \u2014  or .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, k;\n\tcin >> n >> k;\n\tvector<pair<int, int>> a(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i].first;\n\t\ta[i].second = i;\t\n\t}\n\t\n\tsort(a.begin(), a.end());\n\t\n\tvector<vector<int>> buckets(k);\n\tvector<int> res(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tbuckets[i % k].push_back(a[i].first);\n\t\tres[a[i].second] = i % k;\n\t}\n\t\n\tfor (int i = 0; i < k; ++i) {\n\t\tfor (int j = 0; j < int(buckets[i].size()) - 1; ++j) {\n\t\t\tif (buckets[i][j] == buckets[i][j + 1]) {\n\t\t\t\tcout << \"NO\" << endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout << \"YES\" << endl;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcout << res[i] + 1 << \" \";\n\t}\n\tcout << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}