{"link": "https://codeforces.com//contest/978/problem/F", "problemId": "182881", "shortId": "978F", "contest_number": "978", "name": "F. Mentors", "statement": "In BerSoft  programmers work, the programmer  is characterized by a skill .A programmer  can be a mentor of a programmer  if and only if the skill of the programmer  is strictly greater than the skill of the programmer   and programmers  and  are not in a quarrel.You are given the skills of each programmers and a list of  pairs of the programmers, which are in a quarrel (pairs are unordered). For each programmer , find the number of programmers, for which the programmer  can be a mentor.", "input": "The first line contains two integers  and  ,  \u2014 total number of programmers and number of pairs of programmers which are in a quarrel. The second line contains a sequence of integers  , where  equals to the skill of the -th programmer. Each of the following  lines contains two distinct integers ,  ,  \u2014 pair of programmers in a quarrel. The pairs are unordered, it means that if  is in a quarrel with  then  is in a quarrel with . Guaranteed, that for each pair  there are no other pairs  and  in the input.", "output": "Print  integers, the -th number should be equal to the number of programmers, for which the -th programmer can be a mentor. Programmers are numbered in the same order that their skills are given in the input.", "tutorial": "Firstly we should sort all programmers in non-decreasing order of their skills. Also we need to store initially numbers of the programmers (we can user array of pairs \u2014 skill and initial number of the programmer).We will iterate through the programmers from the left to the right. The current programmer can be a mentor of all programmers to the left of him after sort and with who he are not in a quarrel. Let the number of programmers to the left is . Subtract from  the number of already considered programmers, who skill equals to the skill of the current programmer (it can be done, for example, with help of ). Also lets brute all programmers with who the current programmer in a quarrel (we can initially save for each programmer the vector of programmers with who he in a quarell; by analogy with the stoe of graphs) and if the skill of the current programmer more than the skill of a programmers, with which he in a quarrel, we should decrease  on one, because this programmer is to the left of the current after sort and has been counted in .We should store by a number of the current programmer the value  as answer for him.", "solution": "#include <bits/stdc++.h>\n#define DIM 200007\nusing namespace std;\n\nlong long n,k,r[DIM];\nvector<long long> a[DIM],rt;\n\n\nint main()\n{\n    cin>>n>>k;\n\n    for(int i = 1; i <= n; ++i)\n        {\n            cin>>r[i];\n            rt.push_back(r[i]);\n        }\n\n    for(int i = 1; i <= k; ++i)\n    {\n        int v1,v2;\n        cin>>v1>>v2;\n        a[v1].push_back(r[v2]);\n        a[v2].push_back(r[v1]);\n    }\n\n    sort(rt.begin(),rt.end());\n    for(int i = 1; i<=n;++i)\n        sort(a[i].begin(),a[i].end());\n\n    for(int i = 1; i<=n;++i)\n    {\n        long long res = lower_bound(rt.begin(),rt.end(),r[i]) - rt.begin();\n        res -= lower_bound(a[i].begin(),a[i].end(),r[i]) - a[i].begin();\n        cout<<res<<' ';\n    }\n\n\n    return 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}