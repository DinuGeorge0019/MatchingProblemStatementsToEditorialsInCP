{"link": "https://codeforces.com//contest/1324/problem/D", "problemId": "560263", "shortId": "1324D", "contest_number": "1324", "name": "D. Pair of Topics", "statement": "The next lecture in a high school requires two topics to be discussed. The -th topic is interesting by  units for the teacher and by  units for the students.The pair of topics  and  () is called  if  (i.e. it is more interesting for the teacher).Your task is to find the number of  pairs of topics.", "input": "The first line of the input contains one integer  () \u2014 the number of topics. The second line of the input contains  integers  (), where  is the interestingness of the -th topic for the teacher. The third line of the input contains  integers  (), where  is the interestingness of the -th topic for the students.", "output": "Print one integer \u2014 the number of  pairs of topic.", "tutorial": "Let's rewrite the inequality from  to . This looks much simpler. Let's build the array  where  and sort this array. Now our problem is to find the number of pairs  such that .Let's iterate over all elements of  from left to right. For simplicity, we consider only \"greater\" summands. Because our sum () must be greater than , then at least one of these summands will be positive. So, if , just skip it. Now  and we need to calculate the number of such  that  and . It means that each  (for some ) will be okay. Such leftmost position  can be found with  or binary search. Then add the value  to the answer and consider the next element.Time complexity: .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tvector<int> a(n), b(n);\n\tfor (auto &it : a) cin >> it;\n\tfor (auto &it : b) cin >> it;\n\tvector<int> c(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tc[i] = a[i] - b[i];\n\t}\n\tsort(c.begin(), c.end());\n\t\n\tlong long ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (c[i] <= 0) continue;\n\t\tint pos = lower_bound(c.begin(), c.end(), -c[i] + 1) - c.begin();\n\t\tans += i - pos;\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}