{"link": "https://codeforces.com//contest/1472/problem/B", "problemId": "854352", "shortId": "1472B", "contest_number": "1472", "name": "B. Fair Division", "statement": "Alice and Bob received  candies from their parents. . Now they want to divide all candies among themselves fairly so that the total weight of Alice's candies is equal to the total weight of Bob's candies.Check if they can do that.Note that candies .", "input": "The first line contains one integer  ()\u00a0\u2014 the number of test cases. Then  test cases follow. The first line of each test case contains an integer  ()\u00a0\u2014 the number of candies that Alice and Bob received. The next line contains  integers \u00a0\u2014 the weights of the candies. The weight of each candy is either  or . It is guaranteed that the sum of  over all test cases does not exceed .", "output": "For each test case, output on a separate line:    \"\", if all candies can be divided into two sets with the same weight;  \"\" otherwise.  You can output \"\" and \"\" in any case (for example, the strings , ,  and  will be recognized as positive).", "tutorial": "If the sum of all the weights is not divisible by two, then it is impossible to divide the candies between two people. If the sum is divisible, then let's count the number of candies with a weight of  and . Now, if we can find a way to collect half the sum with some candies, then these candies can be given to Alice, and all the rest can be given to Bob.Simple solution\u00a0\u2014 let's iterate through how many candies of weight  we will give to Alice, then the remaining weight should be filled by candies of weight . If there are enough of them, then we have found a way of division.In fact, if the sum is even and there are at least two candies with weight  (there can't be one candy), then the answer is always \"\" (we can collect the weight as close to half as possible with weight  and then add weight ). If there are no candies with weight , then you need to check whether  is even (since all the candies have the same weight, you just need to divide them in half).", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nvoid solve() {\n  int n;\n  cin >> n;\n  int cnt1 = 0, cnt2 = 0;\n  for (int i = 0; i < n; i++) {\n    int c;\n    cin >> c;\n    if (c == 1) {\n      cnt1++;\n    } else {\n      cnt2++;\n    }\n  }\n  if ((cnt1 + 2 * cnt2) % 2 != 0) {\n    cout << \"NO\\n\";\n  } else {\n    int sum = (cnt1 + 2 * cnt2) / 2;\n    if (sum % 2 == 0 || (sum % 2 == 1 && cnt1 != 0)) {\n      cout << \"YES\\n\";\n    } else {\n      cout << \"NO\\n\";\n    }\n  }\n}\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}