{"link": "https://codeforces.com//contest/1165/problem/C", "problemId": "344204", "shortId": "1165C", "contest_number": "1165", "name": "C. Good String", "statement": "Let's call (yet again) a string  if its length is even, and every character in odd position of this string is different from the next character (the first character is different from the second, the third is different from the fourth, and so on). For example, the strings ,  and  are good strings, and the strings ,  and  are not good. .You are given a string , you have to delete minimum number of characters from this string so that it becomes good.", "input": "The first line contains one integer  () \u2014 the number of characters in . The second line contains the string , consisting of exactly  lowercase Latin letters.", "output": "In the first line, print one integer  () \u2014 the minimum number of characters you have to delete from  to make it good. In the second line, print the resulting string . .", "tutorial": "The following greedy solution works: let's iterate over all characters of the string from left to right, and if the last block of two consecutive characters in the resulting string is full, just add the current character to the resulting string, otherwise add this character if it is not equal to the first character of the last block. And don't forget about the parity of length (remove last character if the length is odd).", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nstring s;\nint n;\nstring res;\n\nint main()\n{\n\tcin >> n >> s;\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tif(res.size() % 2 == 0 || res.back() != s[i])\n\t\t\tres.push_back(s[i]);\n\t}\n\tif(res.size() % 2 == 1) res.pop_back();\n\tcout << n - int(res.size()) << endl << res << endl;\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}