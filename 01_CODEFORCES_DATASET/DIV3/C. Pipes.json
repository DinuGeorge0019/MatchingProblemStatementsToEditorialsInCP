{"link": "https://codeforces.com//contest/1234/problem/C", "problemId": "426513", "shortId": "1234C", "contest_number": "1234", "name": "C. Pipes", "statement": "You are given a system of pipes. It consists of two rows, each row consists of  pipes. The top left pipe has the coordinates  and the bottom right \u2014 .There are six types of pipes: two types of straight pipes and four types of curved pipes. Here are the examples of all six types:  Types of pipes You can turn each of the given pipes  degrees clockwise or counterclockwise  (so the types  and  can become each other and types  can become each other).You want to turn some pipes in a way that the water flow can start at  (to the left of the top left pipe), move to the pipe at , flow somehow by  to the pipe at  and flow right to .Pipes are connected if they are adjacent in the system and their ends are connected. Here are examples of connected pipes:  Examples of connected pipes Let's describe the problem using some example:  The first example input And its solution is below:   The first example answer As you can see, the water flow is the poorly drawn blue line. To obtain the answer, we need to turn the pipe at   degrees clockwise, the pipe at   degrees, the pipe at   degrees, the pipe at   degrees and the pipe at   degrees. Then the flow of water can reach  from .You have to answer  independent queries.", "input": "The first line of the input contains one integer  () \u2014 the number of queries. Then  queries follow. Each query consists of exactly three lines. The first line of the query contains one integer  () \u2014 the number of pipes in each row. The next two lines contain a description of the first and the second rows correspondingly. Each row description consists of  digits from  to  without any whitespaces between them, each digit corresponds to the type of pipe in the corresponding cell. See the problem statement to understand which digits correspond to which types of pipes. It is guaranteed that the sum of  over all queries does not exceed .", "output": "For the -th query print the answer for it \u2014 \"\" (without quotes) if it is possible to turn some pipes in a way that the water flow can reach  from , and \"\" otherwise.", "tutorial": "Let's see how the water can flow when it meets the pipe of type  or  and in the other case. When the water meets the pipe of type  or  we cannot do anything but let it flow to the right of the current cell. Otherwise (if the current pipe is curved) then there are two cases: if the pipe on the same position but in the other row is not curved then the answer is \"\" because the water has to change the row but we cannot turn the next pipe to allow it to move to the right or to the left. So, the current pipe is curved and the pipe on the same position in the other row is also curved, let's change the row and move to the right (it is obvious that we never need to move to the left).So, the answer (and the sequence of pipes) is uniquely defined by types of pipes. If after iterating over all  positions we didn't meet the case of \"\" and the current row is second, then the answer is \"\".", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint q;\n\tcin >> q;\n\tfor (int i = 0; i < q; ++i) {\n\t\tint n;\n\t\tstring s[2];\n\t\tcin >> n >> s[0] >> s[1];\n\t\tint row = 0;\n\t\tint pos = 0;\n\t\tfor (pos = 0; pos < n; ++pos) {\n\t\t\tif (s[row][pos] >= '3') {\n\t\t\t\tif (s[row ^ 1][pos] < '3') {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\trow ^= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pos == n && row == 1) {\n\t\t\tcout << \"YES\" << endl;\n\t\t} else {\n\t\t\tcout << \"NO\" << endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}