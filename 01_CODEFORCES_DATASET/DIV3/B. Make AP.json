{"link": "https://codeforces.com//contest/1624/problem/B", "problemId": "1256438", "shortId": "1624B", "contest_number": "1624", "name": "B. Make AP", "statement": "Polycarp has  positive integers ,  and . He can perform the following operation .  Choose a  integer  and multiply  of the integers ,  or  by . Can Polycarp make it so that after performing the operation, the sequence of three numbers , ,  () forms an arithmetic progression? Note that you  the order of ,  and .Formally, a sequence  is called an arithmetic progression (AP) if there exists a number  (called \"common difference\") such that  for all  from  to . In this problem, .For example, the following sequences are AP: , , , and . The following sequences are not AP: ,  and .You need to answer  independent test cases.", "input": "The first line contains the number  ()\u00a0\u2014 the number of test cases. Each of the following  lines contains  integers , ,  ().", "output": "For each test case print  (without quotes) if Polycarp can choose a  integer  and multiply  of the integers ,  or  by  to make  be an arithmetic progression. Print  (without quotes) otherwise. You can print  and  in any (upper or lower) case (for example, the strings , ,  and  will be recognized as a positive answer).", "tutorial": "Let's iterate over the number that we want to multiply by .How can we check that we can multiply the current number so that an AP is formed?Note that those  numbers that we do not touch should form an AP themselves. For instance, let at the current operation we want somehow multiply the number . Then , and .Note that . Thus, we know what  is. Also we know that . Let's check if  is divisible by . If yes, then we have found the answer, if not, then move on to the next number.We do the same for  and .Be careful with non positive numbers, integer divisions and other edge cases.", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nvoid solveTest() {\n    int a, b, c;\n    cin >> a >> b >> c;\n\n    int new_a = b - (c - b);\n    if(new_a >= a && new_a % a == 0 && new_a != 0) {\n        cout << \"YES\\n\";\n        return;\n    }\n\n    int new_b = a + (c - a)/2;\n    if(new_b >= b && (c-a)%2 == 0 && new_b % b == 0 && new_b != 0) {\n        cout << \"YES\\n\";\n        return;\n    }\n\n    int new_c = a + 2*(b - a);\n    if(new_c >= c && new_c % c == 0 && new_c != 0) {\n        cout << \"YES\\n\";\n        return;\n    }\n\n    cout << \"NO\\n\";\n    return;\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n    int tt;\n    cin >> tt;\n    while(tt--)\n        solveTest();\n    return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}