{"link": "https://codeforces.com//contest/1520/problem/E", "problemId": "976800", "shortId": "1520E", "contest_number": "1520", "name": "E. Arranging The Sheep", "statement": "You are playing the game \"Arranging The Sheep\". The goal of this game is to make the sheep line up. The level in the game is described by a string of length , consisting of the characters '' (empty space) and '' (sheep). In one move, you can move any sheep one square to the left or one square to the right, if the corresponding square . The game ends as soon as the sheep are lined up, that is, there should be no empty cells between any sheep.For example, if  and the level is described by the string \"\", then the following game scenario is possible:   the sheep at the  position moves to the right, the state of the level: \"\";  the sheep at the  position moves to the right, the state of the level: \"\";  the sheep at the  position moves to the right, the state of the level: \"\";  the sheep at the  position moves to the right, the state of the level: \"\";  the sheep at the  position moves to the right, the state of the level: \"\";  the sheep are lined up and the game ends. For a given level, determine the minimum number of moves you need to make to complete the level.", "input": "The first line contains one integer  (). Then  test cases follow. The first line of each test case contains one integer  (). The second line of each test case contains a string of length , consisting of the characters '' (empty space) and '' (sheep)\u00a0\u2014 the description of the level. It is guaranteed that the sum of  over all test cases does not exceed .", "output": "For each test case output the minimum number of moves you need to make to complete the level.", "tutorial": "Let's denote by  the number of sheep in the string, and by  () their positions in the string.Note that in the optimal solution the sheep with the number  will not make moves. This can be proved by considering the optimal solution in which the sheep with the number  makes at least one move and come to the conclusion that this solution is not optimal. Consider sheep with numbers from  to . Then the final position of the -th sheep will be , and the answer will be .", "solution": "#include<bits/stdc++.h>\n \nusing namespace std;\n \nvoid solve()\n{\n\tint n;\n\tcin >> n;\n\tstring s;\n\tcin >> s;\n\tint cnt = 0;\n\tfor(auto x : s)\n\t\tcnt += (x == '*' ? 1 : 0);\n\tint pos = -1;\n\tint cur = -1;\n\tfor(int i = 0; i < n; i++)\n\t{\n\t \tif(s[i] == '*')\n\t \t{\n\t \t    cur++;\n\t \t    if(cur == cnt / 2)\n\t \t    \tpos = i;\n\t \t}\t\n\t}\n\tlong long ans = 0;\n\tcur = pos - cnt / 2;\n\tfor(int i = 0; i < n; i++)\n\t\tif(s[i] == '*')\n\t\t{\n\t\t \tans += abs(cur - i);\n\t\t \tcur++;\n\t\t}\n\tcout << ans << endl;\n}\n \nint main()\n{\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\tint tc = 1;\n\tcin >> tc;\n\tfor(int i = 0; i < tc; i++)\n\t{\n\t \tsolve();\n\t}\n}", "interactive": false, "noSolution": false, "noTutorial": false}