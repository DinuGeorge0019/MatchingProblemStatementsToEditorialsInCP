{"link": "https://codeforces.com//contest/1520/problem/B", "problemId": "976797", "shortId": "1520B", "contest_number": "1520", "name": "B. Ordinary Numbers", "statement": "Let's call a positive integer  ordinary if in the decimal notation all its digits are the same. For example, ,  and  are ordinary numbers, but  and  are not ordinary numbers.For a given number , find the number of ordinary numbers among the numbers from  to .", "input": "The first line contains one integer  (). Then  test cases follow. Each test case is characterized by one integer  ().", "output": "For each test case output the number of ordinary numbers among numbers from  to .", "tutorial": "Note that every ordinary number can be represented as . Therefore, to count all ordinary numbers among the numbers from  to , it is enough to count the number of  pairs such that . In the given constraints, it is enough to iterate over  from  to  and  from  to .", "solution": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\nvoid solve() {\n  int n;\n  cin >> n;\n  int res = 0;\n  for (ll pw = 1; pw <= n; pw = pw * 10 + 1) {\n    for (int d = 1; d <= 9;  d++) {\n      if (pw * d <= n) {\n        res++;\n      }\n    }\n  }\n  cout << res << endl;\n}\n\nint main() {\n  int tests;\n  cin >> tests;\n  while (tests-- > 0) {\n    solve();\n  }\n  return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}