{"link": "https://codeforces.com//contest/1811/problem/C", "problemId": "1864325", "shortId": "1811C", "contest_number": "1811", "name": "C. Restore the Array", "statement": "Kristina had an array  of length  consisting of non-negative integers.She built a new array  of length , such that  ().For example, suppose Kristina had an array  = [] of length . Then she did the following:   Calculated ;  Calculated ;  Calculated ;  Calculated .  As a result, she got an array  = [] of length .You only know the array . Find any matching array  that Kristina may have originally had.", "input": "The first line of input data contains a single integer  ()\u00a0\u2014 the number of test cases. The description of the test cases follows. The first line of each test case contains one integer  () \u2014 the number of elements in the array  that Kristina originally had. The second line of each test case contains exactly  non-negative integer \u2014 elements of array  (). It is guaranteed that the sum of  over all test cases does not exceed , and that array  was built correctly from some array .", "output": "For each test case on a separate line, print exactly  non-negative integers \u2014 the elements of the array  that Kristina originally had. If there are several possible answers \u2014 output any of them.", "tutorial": "To solve the problem, you can build an array  as follows      at    Let's show that from the constructed array  we can get an array  equal to the original array :      If , then   If , then  So   at   If  and , then   If , then   If , then  By the construction of the array  it is not possible that  and . So      If , then   If , then   So  We get that  for , so  and array  is built correctly.", "solution": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nvoid solve(){\n    int n;\n    cin >> n;\n    vector<int>b(n-1), a;\n    for(int i = 0; i < n - 1; i++) cin >> b[i];\n    a.emplace_back(b[0]);\n    for(int i = 0; i < n - 2; i++){\n        a.emplace_back(min(b[i], b[i + 1]));\n    }\n    a.emplace_back(b[n - 2]);\n    for(auto &i : a) cout << i << ' ';\n    cout << \"\\n\";\n}\nint main(){\n    int t;\n    cin >> t;\n    while(t--){\n        solve();\n    }\n    return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}