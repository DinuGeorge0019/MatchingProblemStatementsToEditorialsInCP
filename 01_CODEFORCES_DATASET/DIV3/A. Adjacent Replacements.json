{"link": "https://codeforces.com//contest/1006/problem/A", "problemId": "198025", "shortId": "1006A", "contest_number": "1006", "name": "A. Adjacent Replacements", "statement": "Mishka got an integer array  of length  as a birthday present (what a surprise!).Mishka doesn't like this present and wants to change it somehow. He has invented an algorithm and called it \"Mishka's Adjacent Replacements Algorithm\". This algorithm can be represented as a sequence of steps:  Replace each occurrence of  in the array  with ;  Replace each occurrence of  in the array  with ;  Replace each occurrence of  in the array  with ;  Replace each occurrence of  in the array  with ;  Replace each occurrence of  in the array  with ;  Replace each occurrence of  in the array  with ;    Replace each occurrence of  in the array  with ;  Replace each occurrence of  in the array  with . Note that the dots in the middle of this algorithm mean that Mishka applies these replacements for each pair of adjacent integers () for each  as described above.For example, for the array , the following sequence of arrays represents the algorithm:   (replace all occurrences of  with )    (replace all occurrences of  with )    (replace all occurrences of  with )    (replace all occurrences of  with )    (replace all occurrences of  with )    (replace all occurrences of  with )        (replace all occurrences of  with )  . The later steps of the algorithm do not change the array.Mishka is very lazy and he doesn't want to apply these changes by himself. But he is very interested in their result. Help him find it.", "input": "The first line of the input contains one integer number  () \u2014 the number of elements in Mishka's birthday present (surprisingly, an array). The second line of the input contains  integers  () \u2014 the elements of the array.", "output": "Print  integers \u2014 , where  is the final value of the -th element of the array after applying \"Mishka's Adjacent Replacements Algorithm\" to the array . Note that you cannot change the order of elements in the array.", "tutorial": "It is easy to see that for the odd elements there is no changes after applying the algorithm described in the problem statement, and for the even elements there is only one change: each of the even elements will be decreased by . So we can iterate over all the elements of the array and print , where  is taking  modulo .Overall complexity is .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tint x;\n\t\tcin >> x;\n\t\tcout << x - !(x & 1) << \" \";\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}