{"link": "https://codeforces.com//contest/1538/problem/B", "problemId": "1011922", "shortId": "1538B", "contest_number": "1538", "name": "B. Friends and Candies", "statement": "Polycarp has  friends, the -th of his friends has  candies. Polycarp's friends do not like when they have different numbers of candies. In other words they want all  to be the same. To solve this, Polycarp performs the following set of actions exactly :   Polycarp chooses  () arbitrary friends (let's say he chooses friends with indices );  Polycarp distributes their  candies among all  friends. During distribution for each of  candies he chooses new owner. That can be any of  friends. Note, that any candy can be given to the person, who has owned that candy before the distribution process. Note that the number  is not fixed in advance and can be arbitrary. Your task is to find the minimum value of .For example, if  and , then Polycarp could make the following distribution of the candies:   Polycarp chooses  friends with indices  and distributes  candies to make  (two candies go to person ). Note that in this example Polycarp cannot choose  friend so that he can redistribute candies so that in the end all  are equal.For the data  and , determine the  value . With this value , Polycarp should be able to select  friends and redistribute their candies so that everyone will end up with the same number of candies.", "input": "The first line contains one integer  (). Then  test cases follow. The first line of each test case contains one integer  (). The second line contains  integers  (). It is guaranteed that the sum of  over all test cases does not exceed .", "output": "For each test case output:    the minimum value of , such that Polycarp can choose exactly  friends so that he can redistribute the candies in the desired way;  \"\" if no such value  exists. ", "tutorial": "Let's denote for  the number of candies all friends have: . Note that at the end, each friend must have  of candy. If  is not completely divisible by , then there is no answer.How to get the answer if it exists? If the -th friend has more candies than , then he must be chosen by Polycarp (otherwise this friend will have more candies than the others). If the -th friend has no more than , then Polycarp may not choose it.Then, if the answer exists, it is equal to the number of .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing cd = complex<ld>;\n\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  int s = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    s += a[i];\n  }\n  if (s % n != 0) {\n    cout << \"-1\" << endl;\n    return;\n  }\n  s /= n;\n  int res = 0;\n  for (int i = 0; i < n; i++) {\n    if (s < a[i]) {\n      res++;\n    }\n  }\n  cout << res << endl;\n}\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}