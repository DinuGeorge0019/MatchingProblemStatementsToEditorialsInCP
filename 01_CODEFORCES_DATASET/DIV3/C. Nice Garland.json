{"link": "https://codeforces.com//contest/1108/problem/C", "problemId": "286769", "shortId": "1108C", "contest_number": "1108", "name": "C. Nice Garland", "statement": "You have a garland consisting of  lamps. Each lamp is colored red, green or blue. The color of the -th lamp is  ('', '' and '' \u2014 colors of lamps in the garland).You have to recolor some lamps in this garland (recoloring a lamp means changing its initial color to another) in such a way that the obtained garland is .A garland is called  if any two lamps of the same color have distance divisible by three between them. I.e. if the obtained garland is , then for each  such that  should be satisfied . The value  means absolute value of , the operation  means remainder of  when divided by .For example, the following garlands are : \"\", \"\", \"\", \"\", \"\". The following garlands are not : \"\", \"\".Among all ways to recolor the initial garland to make it  you have to choose one with the  number of recolored lamps. If there are multiple optimal solutions, print  of them.", "input": "The first line of the input contains one integer  () \u2014 the number of lamps. The second line of the input contains the string  consisting of  characters '', '' and '' \u2014 colors of lamps in the garland.", "output": "In the first line of the output print one integer  \u2014 the  number of recolors needed to obtain a  garland from the given one. In the second line of the output print one string  of length  \u2014 a  garland obtained from the initial one with  number of recolors. If there are multiple optimal solutions, print  of them.", "tutorial": "It is easy to see that any  garland has one of the following  patterns:   \"\";  \"\";  \"\";  \"\";  \"\";  \"\"; We can hard-code all all this patterns or iterate over all these permutations of letters \"\" using three nested loops or standard language functions. We can calculate for each pattern the cost to obtain such pattern from the given string and choose one with the minimum cost.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\t\n\tvector<int> p(3);\n\tiota(p.begin(), p.end(), 0);\n\t\n\tstring colors = \"RGB\";\n\tstring res = \"\";\n\tint ans = 1e9;\n\t\n\tdo {\n\t\tstring t;\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tt += colors[p[i % 3]];\n\t\t\tcnt += t[i] != s[i];\n\t\t}\n\t\tif (ans > cnt) {\n\t\t\tans = cnt;\n\t\t\tres = t;\n\t\t}\n\t} while (next_permutation(p.begin(), p.end()));\n\t\n\tcout << ans << endl << res << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}