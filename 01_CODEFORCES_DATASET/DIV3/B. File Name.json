{"link": "https://codeforces.com//contest/978/problem/B", "problemId": "182877", "shortId": "978B", "contest_number": "978", "name": "B. File Name", "statement": "You can not just take the file and send it. When Polycarp trying to send a file in the social network \"Codehorses\", he encountered an unexpected problem. If the name of the file contains three or more \"\" (lowercase Latin letters \"\") in a row, the system considers that the file content does not correspond to the social network topic. In this case, the file is not sent and an error message is displayed.Determine the minimum number of characters to remove from the file name so after that the name does not contain \"\" as a substring. Print  if the file name does not initially contain a forbidden substring \"\".You can delete characters in arbitrary positions (not necessarily consecutive). If you delete a character, then the length of a string is reduced by . For example, if you delete the character in the position  from the string \"\", then the resulting string is \"\".", "input": "The first line contains integer   \u2014 the length of the file name. The second line contains a string of length  consisting of lowercase Latin letters only \u2014 the file name.", "output": "Print the minimum number of characters to remove from the file name so after that the name does not contain \"\" as a substring. If initially the file name dost not contain a forbidden substring \"\", print .", "tutorial": "Let's iterate through the given string from the left to the right. In a variable  we will store the number of letters \"\" which were before the current letter in a row. If the current letter does not equal to \"\" we should make . In the other case, the current letter equals to \"\". If , we should increase  by one. In the other case, we should add one to the answer because the current letter should be removed.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long n,c;\nstring s;\nvector<long long> vec;\n\nint main()\n{\n    cin>>n>>s;\n    for(int i = 0; i<n;++i)\n    {\n        //cout<<c<<' ';\n        if(s[i] == 'x') c++;\n        else\n        {\n            vec.push_back(c);//cout<<c<<' ';\n            c = 0;\n        }\n    }\n    vec.push_back(c);\n    long long res = 0;\n    for(auto i:vec)\n        if(i>=3)\n        res+=i - 2;\n\n    cout<<res;\n    return 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}