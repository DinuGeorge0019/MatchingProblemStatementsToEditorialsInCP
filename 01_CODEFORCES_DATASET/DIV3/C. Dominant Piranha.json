{"link": "https://codeforces.com//contest/1433/problem/C", "problemId": "766658", "shortId": "1433C", "contest_number": "1433", "name": "C. Dominant Piranha", "statement": "There are  piranhas with sizes  in the aquarium. Piranhas are numbered from left to right in order they live in the aquarium.Scientists of the Berland State University want to find if there is  piranha in the aquarium. The piranha is called  if it can eat all the other piranhas in the aquarium (except itself, of course). Other piranhas will do nothing while the  piranha will eat them.Because the aquarium is pretty narrow and long, the piranha can eat only one of the adjacent piranhas during one move. Piranha can do as many moves as it needs (or as it can). More precisely:   The piranha  can eat the piranha  if the piranha  exists and .  The piranha  can eat the piranha  if the piranha  exists and . When the piranha  eats some piranha, its  ( becomes ).Your task is to find  piranha in the aquarium or determine if there are no such piranhas.Note that you have to find  (exactly one) dominant piranha, you don't have to find all of them.For example, if , then the third piranha can be . Consider the sequence of its moves:   The piranha eats the second piranha and  becomes  (the underlined piranha is our candidate).  The piranha eats the third piranha and  becomes .  The piranha eats the first piranha and  becomes .  The piranha eats the second piranha and  becomes . You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The first line of the test case contains one integer  () \u2014 the number of piranhas in the aquarium. The second line of the test case contains  integers  (), where  is the size of the -th piranha. It is guaranteed that the sum of  does not exceed  ().", "output": "For each test case, print the answer:  if there are no dominant piranhas in the aquarium or  of  dominant piranha otherwise. If there are several answers, you can print any.", "tutorial": "If all the piranhas have the same size then the answer is . Otherwise, there are at least two different sizes of piranhas and the answer always exists. Claim that the answer is such a piranha with the maximum size that one of the adjacent piranhas has the size less than a maximum.Why is it true and why the answer always exists? First, if the piranha with the maximum size eats some other piranha, it becomes the only maximum in the array and can eat all other piranhas. Why is there always such a pair of piranhas? Let's change our array a bit: replace every maximum with  and every non-maximum with . There is always some -pair or -pair in such array because we have at least two different elements.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> a(n);\n\t\tint mx = 0;\n\t\tfor (auto &it : a) {\n\t\t\tcin >> it;\n\t\t\tmx = max(mx, it);\n\t\t}\n\t\tint idx = -1;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tif (a[i] != mx) continue;\n\t\t\tif (i > 0 && a[i - 1] != mx) idx = i + 1;\n\t\t\tif (i < n - 1 && a[i + 1] != mx) idx = i + 1;\n\t\t}\n\t\tcout << idx << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}