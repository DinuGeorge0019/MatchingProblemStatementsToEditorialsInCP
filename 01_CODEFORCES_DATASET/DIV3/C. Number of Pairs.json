{"link": "https://codeforces.com//contest/1538/problem/C", "problemId": "1011923", "shortId": "1538C", "contest_number": "1538", "name": "C. Number of Pairs", "statement": "You are given an array  of  integers. Find the number of pairs  () where the sum of  is greater than or equal to  and less than or equal to  (that is, ).For example, if , ,  and , then two pairs are suitable:    and  ();   and  (). ", "input": "The first line contains an integer  (). Then  test cases follow. The first line of each test case contains three integers  (, )\u00a0\u2014 the length of the array and the limits on the sum in the pair. The second line contains  integers  (). It is guaranteed that the sum of  overall test cases does not exceed .", "output": "For each test case, output a single integer\u00a0\u2014 the number of index pairs  (), such that .", "tutorial": "The problem can be divided into two classic ones:   Count the number of pairs ;  Count the number of pairs . Let \u00a0\u2014 be the answer to the first problem, and \u00a0\u2014 be the answer to the second problem. Then  is the answer to the original problem.The new problem can be solved by binary search. Iterate over the first element of the pair. Then you need to count the number of elements such that . If you sort the array, this value can be calculated by running a single binary search.", "solution": "#include <bits/stdc++.h>\n#include \"random\"\n\nusing namespace std;\n\nusing ll = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing cd = complex<ld>;\n\nvoid solve() {\n    int n, l, r;\n    cin >> n >> l >> r;\n    vector<int> v(n);\n    for (int &e : v) {\n        cin >> e;\n    }\n    sort(v.begin(), v.end());\n    ll ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans += upper_bound(v.begin(), v.end(), r - v[i]) - v.begin();\n        ans -= lower_bound(v.begin(), v.end(), l - v[i]) - v.begin();\n        if (l <= 2 * v[i] && 2 * v[i] <= r) {\n            ans--;\n        }\n    }\n    cout << ans / 2 << \"\\n\";\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int t;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}