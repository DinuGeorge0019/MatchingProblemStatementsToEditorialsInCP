{"link": "https://codeforces.com//contest/1702/problem/A", "problemId": "1456426", "shortId": "1702A", "contest_number": "1702", "name": "A. Round Down the Price", "statement": "At the store, the salespeople want to make all prices . In this problem, a number that is a power of  is called a  number. For example, the numbers , ,  are  numbers, but ,  and  are not  numbers. So, if an item is worth  bourles (the value of the item is not greater than ), the sellers want to change its value to the nearest  number that is not greater than . They ask you: by how many bourles should you  the value of the item to make it worth exactly  bourles, where the value of \u00a0\u2014 is the maximum possible (\u00a0\u2014 any non-negative integer).For example, let the item have a value of -bourles. Then the new price of the item will be , and the answer will be .", "input": "The first line of input data contains a single integer  ()\u00a0\u2014 the number of test cases . Each test case is a string containing a single integer  ()\u00a0\u2014 the price of the item.", "output": "For each test case, output on a separate line a single integer  () such that if you reduce the cost of the item by  bourles, the cost of the item will be the maximal possible  number. More formally: , where \u00a0\u2014 the maximum possible non-negative integer.", "tutorial": "Note that the number  and the nearest round number not exceeding  have the same size (consist of the same number of digits in the record). Denote the size of  by . Then we can construct the nearest round number. It will consist of one and  zeros. ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define sz(v) (int)v.size()\n#define all(v) v.begin(),v.end()\n#define eb emplace_back\n\n\n\nvoid solve() {\n    int m; cin >> m;\n    string t = to_string(m);\n    string s = \"1\";\n    for (int i = 1; i < sz(t); i++) {\n        s += '0';\n    }\n    int k = stoi(s);\n    cout << m - k << '\\n';\n}\n\nint main() {\n    int t;\n    cin >> t;\n\n    forn(tt, t) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}