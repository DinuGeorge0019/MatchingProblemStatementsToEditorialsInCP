{"link": "https://codeforces.com//contest/1360/problem/C", "problemId": "629823", "shortId": "1360C", "contest_number": "1360", "name": "C. Similar Pairs", "statement": "We call two numbers  and   if they have the same parity (the same remainder when divided by ), or if . For example, in each of the pairs , , , the numbers are similar to each other, and in the pairs , , they are not.You are given an array  of  ( is even) positive integers. Check if there is such a partition of the array into pairs that each element of the array belongs to exactly one pair and the numbers in each pair are similar to each other.For example, for the array , there is a partition into pairs  and . The numbers in the first pair are similar because they differ by one, and in the second pair because they are both even.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. Then  test cases follow. Each test case consists of two lines. The first line contains an  positive integer  ()\u00a0\u2014 length of array . The second line contains  positive integers  ().", "output": "For each test case print:    if the such a partition exists,   otherwise.  The letters in the words  and  can be displayed in any case.", "tutorial": "Let \u00a0\u2014 be the number of even numbers in the array, and \u00a0\u2014 be the number of odd numbers in the array. Note that if the parities of  and of  do not equal, then the answer does not exist. Otherwise, we consider two cases:    and \u00a0\u2014 are even numbers. Then all numbers can be combined into pairs of equal parity.   and \u00a0\u2014 are odd numbers. Then you need to check whether there are two numbers in the array such that the modulus of their difference is . If there are two such numbers, then combine them into one pair.  and  will decrease by  and become even, then the solution exists as shown in the previous case. ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ld = long double;\nusing ll = long long;\n\nvoid solve() {\n    int n;\n    cin >> n;\n    vector<int> v(n);\n    int a = 0, b = 0;\n    for (int &e : v) {\n        cin >> e;\n        if (e % 2 == 0) {\n            a++;\n        } else {\n            b++;\n        }\n    }\n    if (a % 2 != b % 2) {\n        cout << \"NO\\n\";\n    } else {\n        if (a % 2 == 0) {\n            cout << \"YES\\n\";\n        } else {\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    if (v[i] % 2 != v[j] % 2 && abs(v[i] - v[j]) == 1) {\n                        cout << \"YES\\n\";\n                        return;\n                    }\n                }\n            }\n            cout << \"NO\\n\";\n        }\n    }\n}\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}