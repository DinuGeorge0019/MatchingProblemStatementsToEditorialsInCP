{"link": "https://codeforces.com//contest/1144/problem/E", "problemId": "322486", "shortId": "1144E", "contest_number": "1144", "name": "E. Median String", "statement": "You are given two strings  and , both consisting of exactly  lowercase Latin letters,  is lexicographically less than .Let's consider list of all strings consisting of exactly  lowercase Latin letters, lexicographically not less than  and not greater than  (including  and ) in lexicographical order. For example, for , \"\" and \"\" the list will be [\"\", \"\", \"\", \"\", \"\", \"\", \"\"].Your task is to print the median (the middle element) of this list. For the example above this will be \"\"..", "input": "The first line of the input contains one integer  () \u2014 the length of strings. The second line of the input contains one string  consisting of exactly  lowercase Latin letters. The third line of the input contains one string  consisting of exactly  lowercase Latin letters. It is guaranteed that  is lexicographically less than . .", "output": "Print one string consisting exactly of  lowercase Latin letters \u2014 the median (the middle element) of list of strings of length  lexicographically not less than  and not greater than .", "tutorial": "This problem supposed to be .Let's represent our strings as huge numbers with base . Let  be  and  be .So if we will see more precisely in the problem statement, then we can see that the answer is . The operation  with long numbers can be done in  and division long number by two also can be done in .All details of implementation are in the author's solution.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nvector<int> get(const string &s) {\n\tvector<int> res(s.size() + 1);\n\tfor (int i = 0; i < int(s.size()); ++i) {\n\t\tres[i + 1] = s[i] - 'a';\n\t}\n\treturn res;\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint k;\n\tstring s, t;\n\tcin >> k >> s >> t;\n\tvector<int> a = get(s), b = get(t);\n\t\n\tfor (int i = k; i >= 0; --i) {\n\t\ta[i] += b[i];\n\t\tif (i) {\n\t\t\ta[i - 1] += a[i] / 26;\n\t\t\ta[i] %= 26;\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i <= k; ++i) {\n\t\tint rem = a[i] % 2;\n\t\ta[i] /= 2;\n\t\tif (i + 1 <= k) {\n\t\t\ta[i + 1] += rem * 26;\n\t\t} else {\n\t\t\tassert(rem == 0);\n\t\t}\n\t}\n\t\n\tfor (int i = 1; i <= k; ++i) {\n\t\tcout << char('a' + a[i]);\n\t}\n\tcout << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}