{"link": "https://codeforces.com//contest/1066/problem/E", "problemId": "235863", "shortId": "1066E", "contest_number": "1066", "name": "E. Binary Numbers AND Sum", "statement": "You are given two huge binary integer numbers  and  of lengths  and  respectively. You will repeat the following process: if , then add to the answer the value  and divide  by  rounding down (i.e. remove the last digit of ), and repeat the process again, otherwise stop the process.The value  means bitwise  of  and . Your task is to calculate the answer modulo .Note that you should add the value  to the answer in decimal notation, not in binary. So your task is to calculate the answer in decimal notation. For example, if  and , then the value  will be equal to , not to .", "input": "The first line of the input contains two integers  and  () \u2014 the length of  and the length of  correspondingly. The second line of the input contains one huge integer . It is guaranteed that this number consists of exactly  zeroes and ones and the first digit is always . The third line of the input contains one huge integer . It is guaranteed that this number consists of exactly  zeroes and ones and the first digit is always .", "output": "Print the answer to this problem in decimal notation modulo .", "tutorial": "To solve this problem let's take a look which powers of  in  will be affected by powers of  in . Firstly, let's reverse numbers. Let's carry the current power of  (let it be ), the current sum of powers of  in  from the position  to the current position inclusive (let it be ) and the answer is . Initially, ,  and . Let's iterate over all bits of  from  to . Let the current bit in  have the number . Firstly, if  and  then set  (in other words, we add to the sum of powers of  in  the current power of ). If  then this bit will add to the answer all the powers of  in  from  to  inclusive (in other words, ), so if it is, then set . And after all we can set  and go on to . And don't forget to take all values modulo  to avoid overflow.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MOD = 998244353;\n\nint add(int a, int b) {\n\ta += b;\n\tif (a < 0) a += MOD;\n\tif (a >= MOD) a -= MOD;\n\treturn a;\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n, m;\n\tcin >> n >> m;\n\tstring s, t;\n\tcin >> s >> t;\n\t\n\tint pw = 1;\n\tint res = 0;\n\tint ans = 0;\n\t\n\tfor (int i = 0; i < m; ++i) {\n\t\tif (i < n && s[n - i - 1] == '1') {\n\t\t\tres = add(res, pw);\n\t\t}\n\t\tif (t[m - i - 1] == '1') {\n\t\t\tans = add(ans, res);\n\t\t}\n\t\tpw = add(pw, pw);\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}