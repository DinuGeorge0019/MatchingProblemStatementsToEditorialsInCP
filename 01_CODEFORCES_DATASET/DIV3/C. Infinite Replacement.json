{"link": "https://codeforces.com//contest/1674/problem/C", "problemId": "1387199", "shortId": "1674C", "contest_number": "1674", "name": "C. Infinite Replacement", "statement": "You are given a string , consisting only of Latin letters 'a', and a string , consisting of lowercase Latin letters.In one move, you can replace any letter 'a' in the string  with a string . Note that after the replacement string  might contain letters other than 'a'.You can perform an arbitrary number of moves (including zero). How many different strings can you obtain? Print the number, or report that it is infinitely large.Two strings are considered different if they have different length, or they differ at some index.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. The first line of each testcase contains a non-empty string , consisting only of Latin letters 'a'. The length of  doesn't exceed . The second line contains a non-empty string , consisting of lowercase Latin letters. The length of  doesn't exceed .", "output": "For each testcase, print the number of different strings  that can be obtained after an arbitrary amount of moves (including zero). If the number is infinitely large, print . Otherwise, print the number.", "tutorial": "Let's consider some cases.If there are letters 'a' in string , then the moves can be performed endlessly. If  itself is equal to \"a\", then the string won't change, so the answer is . Otherwise, the length of  is least , so string  will be increasing in length after each move, and the answer is .If there are no letters 'a' in string , then the resulting string is only determined by whichever letters 'a' we chose to replace with . That's because once we replace a letter 'a' with string , we can do nothing with the new letters anymore.We can actually imagine that  is equal to \"b\", and the answer won't change. Now it's easy to see that the answer is equal to the number of strings of length , consisting only of letters 'a' and 'b'. There are two options for each position, and there are  positions, so the answer is .Overall complexity:  per testcase.", "solution": "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == \"a\":\n        print(1)\n    elif t.count('a') != 0:\n        print(-1)\n    else:\n        print(2**len(s))\n        ", "interactive": false, "noSolution": false, "noTutorial": false}