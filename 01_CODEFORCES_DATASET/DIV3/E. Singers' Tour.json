{"link": "https://codeforces.com//contest/1618/problem/E", "problemId": "1227954", "shortId": "1618E", "contest_number": "1618", "name": "E. Singers' Tour", "statement": " towns are arranged in a circle sequentially. The towns are numbered from  to  in clockwise order. In the -th town, there lives a singer with a repertoire of  minutes for each .Each singer visited all  towns in clockwise order, starting with the town he lives in, and gave exactly one concert in each town. In addition, in each town, the -th singer got inspired and came up with a song that lasts  minutes. The song was added to his repertoire so that he could perform it in the rest of the cities.Hence, for the -th singer, the concert in the -th town will last  minutes, in the -th town the concert will last  minutes, ..., in the -th town the duration of the concert will be , ..., in the town  \u2014  minutes.You are given an array of  integer numbers, where  is the total duration of concerts in the -th town. Reconstruct any correct sequence of  integers  or say that it is impossible.", "input": "The first line contains one integer  ) \u2014 the number of test cases. Then the test cases follow. Each test case consists of two lines. The first line contains a single integer  () \u2014 the number of cities. The second line contains  integers  () \u2014 the total duration of concerts in -th city. The sum of  over all test cases does not exceed .", "output": "For each test case, print the answer as follows: If there is no suitable sequence , print . Otherwise, on the first line print , on the next line print the sequence  of  integers, where  () is the initial duration of repertoire of the -th singer. If there are multiple answers, print any of them.", "tutorial": "First, .Consider the sum . If we substitute the formula of  then for every  the coefficient at  will be equal to , so we can find the sum  of all :  is equal to . If the sum of  isn't divisible by , then the answer is . Now let's consider the difference between two neighboring towns: , so . If the value of  we found isn't a positive integer, then the answer if . Otherwise, we can find a single value of  for every . It's easy to see that these values are correct.Overall complexity:  per testcase. ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing li = long long;\n\nconst int N = 50013;\n\nint b[N];\nint a[N];\n\nvoid solve() {\n    \n    int n;\n    cin >> n;\n\n    li sumb = 0;\n    for(int i = 0; i < n; i++) {\n        cin >> b[i];\n        sumb += b[i];\n    }\n\n    li d = n * 1ll * (n + 1) / 2;\n\n    if(sumb % d != 0) {\n        cout << \"NO\" << endl;\n        return;\n    }\n\n    li suma = sumb / d;\n\n    for(int i = n - 1; i >= 0; i--) {\n        li res = (b[i] - b[(i + 1) % n] + suma);\n        if(res % n != 0 || res <= 0) {\n            cout << \"NO\" << endl;\n            return;\n        }\n\n        a[(i + 1) % n] = res / n;\n    }\n\n    cout << \"YES\" << endl;\n    for(int i = 0; i < n; i++)\n        cout << a[i] << ' ';\n    cout << endl;\n}\n\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    int t;\n    cin >> t;\n    for(int i = 0; i < t; i++)\n        solve();\n}", "interactive": false, "noSolution": false, "noTutorial": false}