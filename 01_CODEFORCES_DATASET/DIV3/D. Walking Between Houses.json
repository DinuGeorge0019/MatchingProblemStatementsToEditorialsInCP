{"link": "https://codeforces.com//contest/1015/problem/D", "problemId": "203549", "shortId": "1015D", "contest_number": "1015", "name": "D. Walking Between Houses", "statement": "There are  houses in a row. They are numbered from  to  in order from left to right. Initially you are in the house .You have to perform  moves to other house. In one move you go from your current house to some other house. You can't stay where you are (i.e., in each move the new house differs from the current house). If you go from the house  to the house , the total distance you walked increases by  units of distance, where  is the absolute value of . It is possible to visit the same house multiple times (but you can't visit the same house in sequence).Your goal is to walk exactly  units of distance in total.If it is impossible, print \"\". Otherwise print \"\" and any of the ways to do that. Remember that you should do exactly  moves.", "input": "The first line of the input contains three integers , ,  (, , ) \u2014 the number of houses, the number of moves and the total distance you want to walk.", "output": "If you cannot perform  moves with total walking distance equal to , print \"\". Otherwise print \"\" on the first line and then print exactly  integers  () on the second line, where  is the house you visit on the -th move. For each  from  to  the following condition should be satisfied: . Also  should be satisfied.", "tutorial": "The solution for this problem is very simple: at first, if  or  the answer is \"\". Otherwise let's do the following thing  times: let  be  (we have to greedily decrease the remaining distance but we also should remember about the number of moves which we need to perform). We have to walk to  possible house which is located at distance  from the current house (also don't forget to subtract  from ).The proof of the fact that we can always walk to the house at distance  is very simple: one of the possible answers (which is obtained by the algorithm above) will looks like several moves of distance , (possibly) one move of random distance less than  and several moves of distance . The first part of the answer can be obtained if we are stay near the leftmost or the rightmost house, second and third parts always can be obtained because distances we will walk in every of such moves is less than .Time complexity is .", "solution": "def step(cur, x):\n    if(cur - x > 0):\n        return cur - x\n    else:\n        return cur + x\n\n\n\nn, k, s = map(int, input().split())\ncur = 1\n\nif(k > s or k * (n - 1) < s):\n    print('NO')\nelse:\n    print('YES')\n    while(k > 0):\n        l = min(n - 1, s - (k - 1))\n        cur = step(cur, l)\n        print(cur, end = ' ')\n        s -= l\n        k -= 1", "interactive": false, "noSolution": false, "noTutorial": false}