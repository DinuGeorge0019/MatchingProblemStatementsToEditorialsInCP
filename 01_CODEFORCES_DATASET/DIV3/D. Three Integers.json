{"link": "https://codeforces.com//contest/1311/problem/D", "problemId": "547479", "shortId": "1311D", "contest_number": "1311", "name": "D. Three Integers", "statement": "You are given three integers .In one move, you can add  or  to  of these integers (i.e. increase or decrease any number by one). You can perform such operation any (possibly, zero) number of times, you can even perform this operation several times with one number. .You have to perform the minimum number of such operations in order to obtain three integers  such that  is divisible by  and  is divisible by .You have to answer  independent test cases. ", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. The next  lines describe test cases. Each test case is given on a separate line as three space-separated integers  and  ().", "output": "For each test case, print the answer. In the first line print  \u2014 the minimum number of operations you have to perform to obtain three integers  such that  is divisible by  and  is divisible by . On the second line print  suitable triple  and .", "tutorial": "Let's iterate over all possible values of  from  to . It is obvious that  cannot be bigger than , else we can just move  to . Then let's iterate over all possible multiples of  from  to . Let this number be . Then we can find  as the nearest number to  that is divisible by  (we can check two nearest numbers to be sure). These numbers are  and . Then we can update the answer with the found triple. Note that the only condition you need to check is that .Time complexity:  because of the sum of the harmonic series.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint a, b, c;\n\t\tcin >> a >> b >> c;\n\t\tint ans = 1e9;\n\t\tint A = -1, B = -1, C = -1;\n\t\tfor (int cA = 1; cA <= 2 * a; ++cA) {\n\t\t\tfor (int cB = cA; cB <= 2 * b; cB += cA) {\n\t\t\t\tfor (int i = 0; i < 2; ++i) {\n\t\t\t\t\tint cC = cB * (c / cB) + i * cB;\n\t\t\t\t\tint res = abs(cA - a) + abs(cB - b) + abs(cC - c);\n\t\t\t\t\tif (ans > res) {\n\t\t\t\t\t\tans = res;\n\t\t\t\t\t\tA = cA;\n\t\t\t\t\t\tB = cB;\n\t\t\t\t\t\tC = cC;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl << A << \" \" << B << \" \" << C << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}