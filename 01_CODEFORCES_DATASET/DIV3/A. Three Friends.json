{"link": "https://codeforces.com//contest/1272/problem/A", "problemId": "494353", "shortId": "1272A", "contest_number": "1272", "name": "A. Three Friends", "statement": "Three friends are going to meet each other. Initially, the first friend stays at the position , the second friend stays at the position  and the third friend stays at the position  on the coordinate axis .In one minute  from other friends can change the position  by  to the left or by  to the right (i.e. set  or ) or even don't change it.Let's introduce the total pairwise distance \u2014 the sum of distances between each pair of friends. Let ,  and  be the final positions of the first, the second and the third friend, correspondingly. Then the total pairwise distance is , where  is the absolute value of .Friends are interested in the minimum total pairwise distance they can reach if they will move optimally. . So, more formally, they want to know the minimum total pairwise distance they can reach after one minute.You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. The next  lines describe test cases. The -th test case is given as three integers  and  () \u2014 initial positions of the first, second and third friend correspondingly. The positions of friends can be equal.", "output": "For each test case print the answer on it \u2014 the minimum total pairwise distance (the minimum sum of distances between each pair of friends) if friends change their positions optimally. . So, more formally, you have to find the minimum total pairwise distance they can reach after one minute.", "tutorial": "This problem can be solved with simple simulation. Let  be the new position of the first friend,  and  are new positions of the second and the third friends correspondingly. For the fixed positions you can update the answer with the value . And iterating over three positions can be implemented with nested loops.Time complexity:  per test case.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint calc(int a, int b, int c) {\n\treturn abs(a - b) + abs(a - c) + abs(b - c);\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint q;\n\tcin >> q;\n\tfor (int i = 0; i < q; ++i) {\n\t\tint a, b, c;\n\t\tcin >> a >> b >> c;\n\t\tint ans = calc(a, b, c);\n\t\tfor (int da = -1; da <= 1; ++da) {\n\t\t\tfor (int db = -1; db <= 1; ++db) {\n\t\t\t\tfor (int dc = -1; dc <= 1; ++dc) {\n\t\t\t\t\tint na = a + da;\n\t\t\t\t\tint nb = b + db;\n\t\t\t\t\tint nc = c + dc;\n\t\t\t\t\tans = min(ans, calc(na, nb, nc));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}