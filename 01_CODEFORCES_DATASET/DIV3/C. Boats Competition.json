{"link": "https://codeforces.com//contest/1399/problem/C", "problemId": "691718", "shortId": "1399C", "contest_number": "1399", "name": "C. Boats Competition", "statement": "There are  people who want to participate in a boat competition. The weight of the -th participant is . Only teams consisting of  people can participate in this competition. As an organizer, you think that it's fair to allow only teams with .So, if there are  teams , , , , where  is the weight of the first participant of the -th team and  is the weight of the second participant of the -th team, then the condition , where  is the total weight of  team, should be satisfied.Your task is to choose such  that the number of teams people can create is the  possible. Note that each participant can be in  team.You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The first line of the test case contains one integer  () \u2014 the number of participants. The second line of the test case contains  integers  (), where  is the weight of the -th participant.", "output": "For each test case, print one integer : the  number of teams people can compose with the total weight , if you choose  optimally.", "tutorial": "This is just an implementation problem. Firstly, let's fix  (it can be in range ), find the maximum number of boats we can obtain with this  and choose the maximum among all found values.To find the number of pairs, let's iterate over the smallest weight in the team in range . Let this weight be . Then (because the sum of weights is ) the biggest weight is . And the number of pairs we can obtain with such two weights and the total weight  is , where  is the number of occurrences of  in . And the additional case: if  is even, we need to add . Don't forget that there is a case , so you need to assume that these values  are zeros.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> cnt(n + 1);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\t++cnt[x];\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int s = 2; s <= 2 * n; ++s) {\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 1; i < (s + 1) / 2; ++i) {\n\t\t\t\tif (s - i > n) continue;\n\t\t\t\tcur += min(cnt[i], cnt[s - i]);\n\t\t\t}\n\t\t\tif (s % 2 == 0) cur += cnt[s / 2] / 2;\n\t\t\tans = max(ans, cur);\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}