{"link": "https://codeforces.com//contest/1141/problem/A", "problemId": "316170", "shortId": "1141A", "contest_number": "1141", "name": "A. Game 23", "statement": "Polycarp plays \"Game 23\". Initially he has a number  and his goal is to transform it to . In one move, he can multiply  by  or multiply  by . He can perform any number of moves.Print the number of moves needed to transform  to . Print  if it is impossible to do so.It is easy to prove that any way to transform  to  contains the same number of moves (i.e. number of moves doesn't depend on the way of transformation).", "input": "The only line of the input contains two integers  and  ().", "output": "Print the number of moves to transform  to , or  if there is no solution.", "tutorial": "If  is not divisible by  then just print  and stop the program. Otherwise, calculate , denoting the required number of times to multiply . It is easy to see that  should be a product of zero or more 's and of zero or more 's, i.e.  for integers . To find  just use a loop to divide  by  while it is divisible by . Similarly, to find  just use a loop to divide  by  while it is divisible by . After the divisions, the expected value of  is . If , print . Otherwise, print the total number of the loop iterations.\n", "solution": "int n, m;\ncin >> n >> m;\nint result = -1;\nif (m % n == 0) {\n    result = 0;\n    int d = m / n;\n    while (d % 2 == 0)\n        d /= 2, result++;\n    while (d % 3 == 0)\n        d /= 3, result++;\n    if (d != 1)\n        result = -1;\n}\ncout << result << endl;", "interactive": false, "noSolution": false, "noTutorial": false}