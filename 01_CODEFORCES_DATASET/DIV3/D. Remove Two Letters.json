{"link": "https://codeforces.com//contest/1800/problem/D", "problemId": "1805846", "shortId": "1800D", "contest_number": "1800", "name": "D. Remove Two Letters", "statement": "Dmitry has a string , consisting of lowercase Latin letters.Dmitry decided to remove two  characters from the string  and you are wondering how many different strings can be obtained after such an operation.For example, Dmitry has a string \"\". You can get the following different strings: \"\"(by deleting the first two or second and third characters), \"\"(by deleting the third and fourth characters),\"\"(by deleting the fourth and the fifth character) and \"\" (by deleting the last two).", "input": "The first line of input data contains a single integer  ()\u00a0\u2014 number of test cases.  The descriptions of the test cases follow. The first line of the description of each test case contains an integer  (). The second line of the description of each test case contains a string  of length  consisting of lowercase Latin letters. It is guaranteed that the sum of  for all test cases does not exceed .", "output": "For each test case print one integer \u2014 the number of distinct strings that can be obtained by removing two consecutive letters.", "tutorial": "Consider deleting characters with numbers  and , as well as characters with numbers  and . In the first case, the symbol with the number  remains, in the second - . Symbols with numbers less than  or more than  remain in both cases. Therefore, the same strings will be obtained if the characters with the numbers  and  match. Therefore, we just need to count the number of , and subtract this value from .", "solution": "#include <iostream>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n\nusing namespace std;\n\nvoid solve() {\n    int n;\n    cin >> n;\n    string s;\n    cin >> s;\n    int res = n - 1;\n    for (int i = 1; i + 1 < n; ++i) {\n        if (s[i - 1] == s[i + 1]) {\n            res--;\n        }\n    }\n    cout << res << '\\n';\n}\n\nint main(int argc, char* argv[]) {\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; ++i) {\n        solve();\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}