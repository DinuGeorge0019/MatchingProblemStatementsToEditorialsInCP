{"link": "https://codeforces.com//contest/1772/problem/C", "problemId": "1699970", "shortId": "1772C", "contest_number": "1772", "name": "C. Different Differences", "statement": "An array  consisting of  integers is  if . For example, the arrays , ,  are strictly increasing; the arrays , , ,  are not.For a strictly increasing array  of  elements, let's denote the  as the number of different elements in the array . For example, the characteristic of the array  is  since the array  contains  different elements: ,  and .You are given two integers  and  (). Construct an increasing array of  integers from  to  with  characteristic.", "input": "The first line contains one integer  () \u2014 the number of test cases. Each test case consists of one line containing two integers  and  ().", "output": "For each test case, print  integers \u2014 the elements of the strictly increasing array  with the maximum possible characteristic. If there are multiple answers, print any of them.", "tutorial": "We can transform the problem as follows. Let . We need to find an array  so that the sum of elements in it is not greater than , all elements are positive integers, and the number of different elements is the maximum possible.Suppose we need  different elements in . What can be the minimum possible sum of elements in ? It's easy to see that  should have the following form: . This array contains exactly  different elements, these different elements are as small as possible (so their sum is as small as possible), and all duplicates are 's. So, if the sum of this array is not greater than , then it is possible to have the number of different elements in  equal to .The rest is simple. We can iterate on , find the maximum possible , construct the difference array, and then use it to construct the array  itself.", "solution": "def construct(f, k):\n    return [(i + 2 if i < f - 1 else 1) for i in range(k)]\n\nt = int(input())\nfor i in range(t):\n    k, n = map(int, input().split())\n    ans = 1\n    for f in range(1, k):\n        d = construct(f, k - 1)\n        if sum(d) <= n - 1:\n            ans = f\n    res = [1]\n    d = construct(ans, k - 1)\n    for x in d:\n        res.append(res[-1] + x)\n    print(*res)", "interactive": false, "noSolution": false, "noTutorial": false}