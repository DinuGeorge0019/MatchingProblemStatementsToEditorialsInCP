{"link": "https://codeforces.com//contest/1312/problem/B", "problemId": "557978", "shortId": "1312B", "contest_number": "1312", "name": "B. Bogosort", "statement": "You are given an array . Array is good if for each pair of indexes  the condition  holds. Can you shuffle this array so that it becomes good? To shuffle an array means to reorder its elements arbitrarily (leaving the initial order is also an option).For example, if , then shuffled arrays ,  and  are good, but shuffled arrays ,  and  aren't.It's guaranteed that it's always possible to shuffle an array to meet this condition.", "input": "The first line contains one integer  () \u2014 the number of test cases. The first line of each test case contains one integer  () \u2014 the length of array . The second line of each test case contains  integers  ().", "output": "For each test case print the shuffled version of the array  which is good.", "tutorial": "Let's sort array  in non-ascending order (). In this case for each pair of indexes  the condition  holds.", "solution": "for t in range(int(input())):\n    n = input()\n    print(*sorted(map(int, input().split()))[::-1])", "interactive": false, "noSolution": false, "noTutorial": false}