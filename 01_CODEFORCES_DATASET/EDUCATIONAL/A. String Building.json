{"link": "https://codeforces.com//contest/1671/problem/A", "problemId": "1376215", "shortId": "1671A", "contest_number": "1671", "name": "A. String Building", "statement": "You are given a string . You have to determine whether it is possible to build the string  out of strings , ,  and/or  by concatenating them. You can use the strings , ,  and/or  any number of times and in any order.For example:   can be built as     ;   can be built as       ;   can be built as     ;   cannot be built from , ,  and/or . ", "input": "The first line contains one integer  () \u2014 the number of test cases. Each test case consists of one line containing the string  (), consisting of characters  and/or .", "output": "For each test case, print  if it is possible to build the string . Otherwise, print . You may print each letter in any case (for example, , ,  will all be recognized as positive answer, ,  and  will all be recognized as negative answer).", "tutorial": "Every character in strings , ,  and  has at least one character adjacent to it that is the same. So, if there is an isolated character in our string (a character that has no neighbors equal to it), we cannot build it.It's easy to see that in the other case, we can build the string: we can split it into blocks of consecutive equal characters, and since there are no isolated characters, each block will have at least  characters, so it can be formed from strings of length  and/or  consisting of equal characters.So, the problem is reduced to checking if each character has a neighbor equal to it.", "solution": "t = int(input())\nfor i in range(t):\n    s = input()\n    ans = True\n    n = len(s)\n    for j in range(n):\n        if (j == 0 or s[j] != s[j - 1]) and (j == n - 1 or s[j] != s[j + 1]):\n            ans = False\n    print('YES' if ans else 'NO')\n", "interactive": false, "noSolution": false, "noTutorial": false}