{"link": "https://codeforces.com//contest/1175/problem/D", "problemId": "354216", "shortId": "1175D", "contest_number": "1175", "name": "D. Array Splitting", "statement": "You are given an array  and an integer .You are asked to divide this array into  non-empty consecutive subarrays. Every element in the array should be included in exactly one subarray. Let  be the index of subarray the -th element belongs to. Subarrays are numbered from left to right and from  to .Let the cost of division be equal to . For example, if  and we divide it into  subbarays in the following way: , then the cost of division is equal to .Calculate the maximum cost you can obtain by dividing the array  into  non-empty consecutive subarrays. ", "input": "The first line contains two integers  and  (). The second line contains  integers  (). ", "output": "Print the maximum cost you can obtain by dividing the array  into  nonempty consecutive subarrays. ", "tutorial": "Let's denote  as  (just a suffix sum). And let  be the position where starts the -th subarray (obviously,  and ). Then we can make an interesting transformation:  So, our task is equivalent to choosing sum of all array  and  different suffix sums. And we want to maximize their total sum.That's why we can just greedily take  maximum suffix sums along with sum of all array.", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 300009;\n\nint n, k;\nint a[N];\n\nint main(){\n\tcin >> n >> k;\n\tfor(int i = 0; i < n; ++i)\n\t\tcin >> a[i];\n\t\n\tlong long sum = 0;\n\tvector <long long> v;\n\tfor(int i = n - 1; i >= 0; --i){\n\t    sum += a[i];\n\t    if(i > 0) v.push_back(sum);\n\t}\n\t\n\tlong long res = sum;\n\t\n\tsort(v.begin(), v.end());\n\treverse(v.begin(), v.end());\n\t\n\t\n\tfor(int i = 0; i < k - 1; ++i)\n\t    res += v[i];\n\t    \n\tcout << res << endl;\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}