{"link": "https://codeforces.com//contest/1221/problem/A", "problemId": "415607", "shortId": "1221A", "contest_number": "1221", "name": "A. 2048 Game", "statement": "You are playing a variation of game . Initially you have a multiset  of  integers. Every integer in this multiset is a power of two. You may perform any number (possibly, zero) operations with this multiset.During each operation you choose two  integers from , remove them from  and insert the number equal to their sum into .For example, if  and you choose integers  and , then the multiset becomes .You win if the number  belongs to your multiset. For example, if  you can win as follows: choose  and , your multiset turns into . Then choose  and , your multiset turns into  and you win.You have to determine if you can win this game.You have to answer  independent queries.", "input": "The first line contains one integer  () \u2013 the number of queries. The first line of each query contains one integer  () \u2014 the number of elements in multiset. The second line of each query contains  integers  () \u2014 the description of the multiset. It is guaranteed that all elements of the multiset are powers of two. ", "output": "For each query print  if it is possible to obtain the number  in your multiset, and  otherwise. You may print every letter in any case you want (so, for example, the strings , ,  and  will all be recognized as positive answer).", "tutorial": "It's obvious that we don't need elements that are larger than .If the sum of the remaining elements is greater than or equal to 2048, then the answer is , and  otherwise.It's true because for getting a integer  that wasn't in the multiset initially, we first need to get integer .", "solution": "for t in range(int(input())):\n\tn = input()\n\tl = filter(lambda x : x <= 2048,  map(int, input().split()) )\n\tprint('YES' if sum(l) >= 2048 else 'NO')", "interactive": false, "noSolution": false, "noTutorial": false}