{"link": "https://codeforces.com//contest/1334/problem/A", "problemId": "590681", "shortId": "1334A", "contest_number": "1334", "name": "A. Level Statistics", "statement": "Polycarp has recently created a new level in this cool new game Berlio Maker 85 and uploaded it online. Now players from all over the world can try his level.All levels in this game have two stats to them: the number of plays and the number of clears. So when a player attempts the level, the number of plays increases by . If he manages to finish the level successfully then the number of clears increases by  as well.  (so if the player finishes the level successfully then the number of plays will increase at the same time as the number of clears).Polycarp is very excited about his level, so he keeps peeking at the stats to know how hard his level turns out to be.So he peeked at the stats  times and wrote down  pairs of integers \u2014 , where  is the number of plays at the -th moment of time and  is the number of clears at the same moment of time.  (i.e. the order of given pairs is exactly the same as Polycarp has written down).Between two consecutive moments of time Polycarp peeked at the stats many players (but possibly zero) could attempt the level.Finally, Polycarp wonders if he hasn't messed up any records and all the pairs are correct. If there could exist such a sequence of plays (and clears, respectively) that the stats were exactly as Polycarp has written down, then he considers his records correct.Help him to check the correctness of his records.For your convenience you have to answer multiple independent test cases.", "input": "The first line contains a single integer   \u2014 the number of test cases. The first line of each test case contains a single integer  () \u2014 the number of moments of time Polycarp peeked at the stats. Each of the next  lines contains two integers  and  () \u2014 the number of plays and the number of clears of the level at the -th moment of time. ", "output": "For each test case print a single line. If there could exist such a sequence of plays (and clears, respectively) that the stats were exactly as Polycarp has written down, then print \"\". Otherwise, print \"\". You can print each letter in any case (upper or lower).", "tutorial": "Let's use the fact that initially the level has  plays and  clears. Call the differences before the previous stats and the current ones  and .The stats are given in chronological order, so neither the number of plays, nor the number of clears should decrease (i.e.  and ).Finally,  should be greater or equal to . It's easy to show that if  players pass the level successfully and  players just try the level then such deltas are achieved.So in implementation it's enough to check these three conditions between the consecutive pieces of data (including the initial ()).Overall complexity: .", "solution": "#include <bits/stdc++.h>\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nusing namespace std;\n\n\nint main() {\n\tint tc;\n\tscanf(\"%d\", &tc);\n\twhile (tc--){\n\t\tint n;\n\t\tscanf(\"%d\", &n);\n\t\tint p = 0, c = 0;\n\t\tbool fl = true;\n\t\tforn(i, n){\n\t\t\tint x, y;\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tif (x < p || y < c || y - c > x - p)\n\t\t\t\tfl = false;\n\t\t\tp = x, c = y;\n\t\t}\n\t\tputs(fl ? \"YES\" : \"NO\");\n\t}\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}