{"link": "https://codeforces.com//contest/710/problem/C", "problemId": "68761", "shortId": "710C", "contest_number": "710", "name": "C. Magic Odd Square", "statement": "Find an  matrix with different numbers from  to , so the sum in each row, column and both main diagonals are odd.", "input": "The only line contains odd integer  ().", "output": "Print  lines with  integers. All the integers should be different and from  to . The sum in each row, column and both main diagonals should be odd.", "tutorial": "The solution can be got from the second sample testcase. Easy to see that if we place all odd numbers in the center in form of rhombus we will get a magic square.\n", "solution": "int n;\n\nbool read() {\n\treturn !!(cin >> n);\n}\n\nconst int N = 101;\n\nint a[N][N];\n\nvoid solve() {\n\tmemset(a, 0, sizeof(a));\n\n\tforn(i, n / 2) {\n\t\tint len = n / 2 - i;\n\t\tforn(j, len) {\n\t\t\tint x1 = i, x2 = n - 1 - i;\n\t\t\tint y1 = j, y2 = n - 1 - j;\n\t\t\ta[x1][y1] = 1;\n\t\t\ta[x1][y2] = 1;\n\t\t\ta[x2][y1] = 1;\n\t\t\ta[x2][y2] = 1;\n\t\t}\n\t}\n\n\tint odd = 1, even = 2;\n\tforn(i, n)\n\t\tforn(j, n)\n\t\t\tif (a[i][j]) a[i][j] = even, even += 2;\n\t\t\telse a[i][j] = odd, odd += 2;\n\n\tforn(i, n) {\n\t\tforn(j, n) {\n\t\t\tif (j) putchar(' ');\n\t\t\tprintf(\"%d\", a[i][j]);\n\t\t}\n\t\tputs(\"\");\n\t}\n}", "interactive": false, "noSolution": false, "noTutorial": false}