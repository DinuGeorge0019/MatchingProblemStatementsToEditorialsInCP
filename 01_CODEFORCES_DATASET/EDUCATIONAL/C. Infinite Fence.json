{"link": "https://codeforces.com//contest/1260/problem/C", "problemId": "482535", "shortId": "1260C", "contest_number": "1260", "name": "C. Infinite Fence", "statement": "You are a rebel leader and you are planning to start a revolution in your country. But the evil Government found out about your plans and set your punishment in the form of correctional labor.You must paint a fence which consists of  planks in two colors in the following way (suppose planks are numbered from left to right from ):   if the index of the plank is divisible by  (such planks have indices , ,  and so on) then you must paint it red;  if the index of the plank is divisible by  (such planks have indices , ,  and so on) then you must paint it blue;  if the index is divisible both by  and   to paint the plank;  otherwise, you don't need to paint the plank at all (and it is forbidden to spent paint on it). Furthermore, the Government added one additional restriction to make your punishment worse. Let's list all  planks of the fence in ascending order: if there are  consecutive planks with the same color in this list, then the Government will state that you failed the labor and execute you immediately. If you don't paint the fence according to the four aforementioned conditions, you will also be executed.The question is: will you be able to accomplish the labor (the time is not important) or the execution is unavoidable and you need to escape at all costs.", "input": "The first line contains single integer  () \u2014 the number of test cases. The next  lines contain descriptions of test cases \u2014 one per line. Each test case contains three integers , ,  (, ) \u2014 the corresponding coefficients.", "output": "Print  words \u2014 one per line. For each test case print  (case insensitive) if the execution is unavoidable or  (case insensitive) otherwise.", "tutorial": "At first, suppose that  (if not \u2014 swap them). Let's look at the case, where . We can be sure that there will be a situation where the -th plank is painted in blue and  plank is painted in red. It's true because it's equivalent to the solution of equation .And all we need to check that interval  contains less than  red planks. Or, in formulas, .The situation with  is almost the same if we look only at positions, which are divisible by  \u2014 in other words we can just divide  on  and  on  and check the same condition.", "solution": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long li;\n\nli a, b, k;\n\ninline bool read() {\n\tif(!(cin >> a >> b >> k))\n\t\treturn false;\n\treturn true;\n}\n\ninline void solve() {\n\tli g = __gcd(a, b);\n\ta /= g;\n\tb /= g;\n\tif(a > b)\n\t\tswap(a, b);\n\tif((k - 1) * a + 1 < b)\n\t\tcout << \"REBEL\";\n\telse\n\t\tcout << \"OBEY\";\n\tcout << endl;\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n#endif\n\tint tc; cin >> tc;\n\twhile(tc--) {\n\t\tread();\n\t\tsolve();\n\t}\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}