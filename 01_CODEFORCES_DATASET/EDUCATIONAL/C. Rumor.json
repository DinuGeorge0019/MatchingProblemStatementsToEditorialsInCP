{"link": "https://codeforces.com//contest/893/problem/C", "problemId": "135513", "shortId": "893C", "contest_number": "893", "name": "C. Rumor", "statement": "Vova promised himself that he would never play computer games... But recently Firestorm \u2014 a well-known game developing company \u2014 published their newest game, World of Farcraft, and it became really popular. Of course, Vova started playing it.Now he tries to solve a quest. The task is to come to a settlement named Overcity and spread a rumor in it.Vova knows that there are  characters in Overcity. Some characters are friends to each other, and they share information they got. Also Vova knows that he can bribe each character so he or she starts spreading the rumor; -th character wants  gold in exchange for spreading the rumor. When a character hears the rumor, he tells it to all his friends, and they start spreading the rumor to their friends (for free), and so on.The quest is finished when all  characters know the rumor. What is the minimum amount of gold Vova needs to spend in order to finish the quest?Take a look at the notes if you think you haven't understood the problem completely.", "input": "The first line contains two integer numbers  and  () \u2014 the number of characters in Overcity and the number of pairs of friends. The second line contains  integer numbers  () \u2014 the amount of gold -th character asks to start spreading the rumor. Then  lines follow, each containing a pair of numbers () which represent that characters  and  are friends (, ). It is guaranteed that each pair is listed at most once.", "output": "Print one number \u2014 the minimum amount of gold Vova has to spend in order to finish the quest.", "tutorial": "In this problem you are given an undirected graph with weighted vertices. And the problem is to calculate the sum of minimum values in every connected component. To do this we just need to run  or  several times.", "solution": "#include <bits/stdc++.h>\n\n#define itn int\n#define all(x) (x).begin(), (x).end()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\n\n#ifdef ONLINE_JUDGE\n\tinline int pidorand() {\n\t\treturn ((rand() & 32767) << 15) | (rand() & 32767);\n\t}\n\t#define rand pidorand\n#endif\t// ONLINE_JUDGE\n\n#ifdef OLBOEB\n\t#define return std::cerr << __FUNCTION__ << \"\\n\"; return\n#endif  // OLBOEB\n\nusing namespace std;\n\ninline int nxt() {\n\tint x;\n\tscanf(\"%d\", &x);\n\treturn x;\n}\n\nint main() {\n\tint n = nxt(), m = nxt();\n\tvector<int> c(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tc[i] = nxt();\n\t}\n\tvector<vector<int>> a(n);\n\tfor (int i = 0; i < m; ++i) {\n\t\tint u = nxt() - 1, v = nxt() - 1;\n\t\ta[u].push_back(v);\n\t\ta[v].push_back(u);\n\t}\n\n\tint mn;\n\tlong long ans = 0;\n\tvector<char> used(n);\n\n\tfunction<void(int)> dfs = [&](int v) {\n\t\tif (used[v]) {\n\t\t\treturn;\n\t\t}\n\t\tused[v] = 1;\n\t\tmn = min(mn, c[v]);\n\t\tfor (int x : a[v]) {\n\t\t\tdfs(x);\n\t\t}\n\t};\n\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (!used[i]) {\n\t\t\tmn = 1e9 + 10;\n\t\t\tdfs(i);\n\t\t\tans += mn;\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\", ans);\n\n\treturn 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}