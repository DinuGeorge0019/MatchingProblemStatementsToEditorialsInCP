{"link": "https://codeforces.com//contest/612/problem/A", "problemId": "43949", "shortId": "612A", "contest_number": "612", "name": "A. The Text Splitting", "statement": "You are given the string  of length  and the numbers . Split the string  to pieces of length  and .For example, the string \"\" for ,  can be split to the two strings \"\" and \"\" or to the two strings \"\" and \"\".Note it is allowed to split the string  to the strings only of length  or to the strings only of length  (see the second sample test).", "input": "The first line contains three positive integers  (). The second line contains the string  consists of lowercase and uppercase latin letters and digits.", "output": "If it's impossible to split the string  to the strings of length  and  print the only number \"\". Otherwise in the first line print integer  \u2014 the number of strings in partition of . Each of the next  lines should contain the strings in partition. Each string should be of the length  or . The string should be in order of their appearing in string  \u2014 from left to right. If there are several solutions print any of them.", "tutorial": "Let's fix the number a of strings of length p and the number b of strings of length q. If a\u00b7p\u2009+\u2009b\u00b7q\u2009=\u2009n, we can build the answer by splitting the string s to a parts of the length p and b parts of the length q, in order from left to right. If we can't find any good pair a,\u2009b then the answer doesn't exist. Of course this problem can be solved in linear time, but the constraints are small, so you don't need linear solution.\nComplexity: O(n2).\n", "solution": "/*\nWhat was it like to see,\nThe face of your own stability,\nSuddenly look away,\nLeaving you with the dead and hopeless?\n\nEleven and she was gone.\nEleven is when we waved good-bye.\nEleven is standing still,\nWaiting for me to free him,\nBy coming home.\n\nMoving me with a sound.\nOpening me within a gesture.\nDrawing me down and in,\nShowing me where it all began,\nEleven.\n\nYou're too scar'd to realize this,\nYou are the voice that's been calling me back home.\n\nUnder a dead Ohio sky,\nEleven has been and will be waiting,\nDefending his light and wondering,\nWhere the hell have I been?\nSleeping lost and numb I.\nSo glad that I have found you.\nI am but wide awake and heading,\nHome.\n\nI wish that I could see you,\nTurn and run to play.\nDreams are fading,\nCarry my ancient soul.\n\nCarry me into the light.\nAim your body heavenly,\nEnduring a memory.\nI\u2019ll come to your light,\nHold your light.\nHold your light where I can see it,\n\nHold it,\nHigh.\n\nHold your light,\nEleven, Lead me through each gentle step,\nBy step,\nBy inch by loaded memory,\nI'll move,\nTo heal,\nAs soon as pain allows so we can,\nReunite,\nAnd both move on together.\n\nHold,\nYour light,\nEleven lead me through each gentle step,\nBy step,\nBy inch by loaded memory 'till,\nOne,\nAnd one are one,\nEleven.\nSo glow,\nChild,\nGlow.\nI'm heading back home...\n*/\n\n//#pragma comment(linker, \"/STACK:16777216\")\n#define _CRT_SECURE_NO_WARNINGS\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>  \n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n#include <memory.h>\n#include <ctime> \n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n\n#define eps 1e-8\n#define M_PI 3.141592653589793\n#define bs 1000000007\n#define bsize 512\n\nconst int N = 110000;\n\nusing namespace std;\n\nint n, a, b, dp[N];\nstring st;\nvector<int> ans;\nint ptr;\n\nint main(){\n\t//freopen(\"beavers.in\",\"r\",stdin);\n\t//freopen(\"beavers.out\",\"w\",stdout);\n\t//freopen(\"F:/in.txt\",\"r\",stdin);\n\t//freopen(\"F:/output.txt\",\"w\",stdout);\n\tios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\n\tcin >> n >> a >> b;\n\tdp[0] = 1;\n\tfor (int i = 0; i <= n; i++)\n\t{\n\t\tif (dp[i] == 0)\n\t\t\tcontinue;\n\t\tdp[i + a] = 1;\n\t\tdp[i + b] = 1;\n\t}\n\n\tif (dp[n] == 0)\n\t{\n\t\tcout << -1 << endl;\n\t\treturn 0;\n\t}\n\n\twhile (n > 0)\n\t{\n\t\tif (n >= a&&dp[n - a] == 1)\n\t\t{\n\t\t\tans.push_back(a);\n\t\t\tn -= a;\n\t\t}\n\t\tif (n >= b&&dp[n - b] == 1)\n\t\t{\n\t\t\tans.push_back(b);\n\t\t\tn -= b;\n\t\t}\n\t}\n\tstring st;\n\tcout << ans.size() << endl;\n\n\tcin >> st;\n\tfor (int i = 0; i < ans.size(); i++)\n\t{\n\t\tfor (int j = 0; j < ans[i]; j++)\n\t\t{\n\t\t\tcout << st[ptr];\n\t\t\t++ptr;\n\t\t}\n\t\tcout << endl;\n\t}\n\tcin.get(); cin.get();\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}