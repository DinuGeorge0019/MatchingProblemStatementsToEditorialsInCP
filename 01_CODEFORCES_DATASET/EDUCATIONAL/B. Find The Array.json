{"link": "https://codeforces.com//contest/1463/problem/B", "problemId": "836002", "shortId": "1463B", "contest_number": "1463", "name": "B. Find The Array", "statement": "You are given an array  such that . Let  be the sum of all elements of the array .Let's call an array  of  integers  if:   for each  from  to ;  for every pair of adjacent integers from the array , either  divides , or  divides  (or both);  . Your task is to find any beautiful array. It can be shown that at least one beautiful array always exists.", "input": "The first line contains one integer  () \u2014 the number of test cases. Each test case consists of two lines. The first line contains one integer  (). The second line contains  integers  ().", "output": "For each test case, print the beautiful array  () on a separate line. It can be shown that at least one beautiful array exists under these circumstances. If there are multiple answers, print any of them.", "tutorial": "It is enough to consider two possible arrays : () and (). It is not difficult to notice that in these arrays, the condition is met that among two neighboring elements, one divides the other. It remains to show that at least one of these two arrays satisfies the condition . Let's consider  \u2014 the sum of elements at odd positions and  \u2014 the sum of elements at even positions. Since , at least one of the values of  and  does not exceed  (because otherwise their sum will be strictly greater than ). Without losing generality, assume that . Note that for the second variant of the array , the condition  holds, so .", "solution": "for t in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ts = sum(a)\n\tcur = [0, 0]\n\tfor i in range(n):\n\t\tcur[i % 2] += a[i] - 1\n\tfor j in range(2):\n\t\tif 2 * cur[j] > s:\n\t\t\tcontinue\n\t\tfor i in range(n):\n\t\t\tif i % 2 == j:\n\t\t\t\ta[i] = 1\n\t\tbreak\n\tprint(*a)", "interactive": false, "noSolution": false, "noTutorial": false}