{"link": "https://codeforces.com//contest/797/problem/B", "problemId": "103029", "shortId": "797B", "contest_number": "797", "name": "B. Odd sum", "statement": "You are given sequence  of integer numbers of length . Your task is to find such subsequence that its sum is odd and maximum among all such subsequences. It's guaranteed that given sequence contains subsequence with odd sum.Subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.You should write a program which finds sum of the best subsequence.", "input": "The first line contains integer number  (). The second line contains  integer numbers  (). The sequence contains at least one subsequence with odd sum.", "output": "Print sum of resulting subseqeuence.", "tutorial": "The answer to this problem can be constructed this way:  Sum up all positive numbers  Find maximum  of negative odd numbers  Find minimum  of positive odd numbers  If sum was even then subtract  Overall complexity: .", "solution": "// In the name of God\n\n#include <iostream>\n#include <algorithm>\n#include <fstream>\n#include <vector>\n#include <deque>\n#include <assert.h>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <stdio.h>\n#include <string.h>\n#include <utility>\n#include <math.h>\n#include <bitset>\n#include <iomanip>\n#include <complex>\n\nusing namespace std;\n\n#define rep(i, a, b) for (int i = (a), i##_end_ = (b); i < i##_end_; ++i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mp make_pair\n#define x first\n#define y second\n#define pb push_back\n#define SZ(x) (int((x).size()))\n#define ALL(x) (x).begin(), (x).end()\n\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool smin(T &a, const T &b)   { return a > b ? a = b : a;    }\ntemplate<typename T> inline bool smax(T &a, const T &b)   { return a < b ? a = b : a;    }\n\ntypedef long long LL;\n\nconst int N = (int) 1e6 + 6, mod = (int) 0;\nint a[N];\nint main() {\n\tint n, m = 0, add = 0;\n\tcin >> n;\n\tfor (int j = 0; j < n; ++j) {\n\t\tint x;\n\t\tcin >> x;\n\t\tif (abs(x) % 2 == 0) {\n\t\t\tif (x >= 0) {\n\t\t\t\tadd += x;\n\t\t\t}\n\t\t} else {\n\t\t\ta[m++] = x;\n\t\t}\n\t}\n\tsort(a, a + m);\n\tint sum = 0, res = -2e9;\n\tfor (int j = m - 1; j >= 0; --j) {\n\t\tsum += a[j];\n\t\tif ((m - j) & 1) res = max(res, sum + add);\n\t}\n\tcout << res << endl;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "interactive": false, "noSolution": false, "noTutorial": false}