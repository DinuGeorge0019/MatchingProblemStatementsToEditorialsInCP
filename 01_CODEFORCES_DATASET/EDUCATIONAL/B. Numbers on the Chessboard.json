{"link": "https://codeforces.com//contest/1027/problem/B", "problemId": "209489", "shortId": "1027B", "contest_number": "1027", "name": "B. Numbers on the Chessboard", "statement": "You are given a chessboard of size . It is filled with numbers from  to  in the following way: the first  numbers from  to  are written in the cells with even sum of coordinates from left to right from top to bottom. The rest  numbers from  to  are written in the cells with odd sum of coordinates from left to right from top to bottom. The operation  means division  by  rounded up.For example, the left board on the following picture is the chessboard which is given for  and the right board is the chessboard which is given for .  You are given  queries. The -th query is described as a pair . The answer to the -th query is the number written in the cell  ( is the row,  is the column). Rows and columns are numbered from  to .", "input": "The first line contains two integers  and  (, ) \u2014 the size of the board and the number of queries. The next  lines contain two integers each. The -th line contains two integers  () \u2014 description of the -th query.", "output": "For each query from  to  print the answer to this query. The answer to the -th query is the number written in the cell  ( is the row,  is the column). Rows and columns are numbered from  to . Queries are numbered from  to  in order of the input.", "tutorial": "Let's see the following fact: if we will decrease  from all numbers written in cells with an odd sum of coordinates and write out the numbers obtained on the board from left to right from top to bottom, the sequence will looks like  for even  (for odd  there is only one number  at the end of the sequence, but, in general, it does not matter).Let's try to find out the answer for some query (). Let  (1-indexed). There  is the position of our cell in order of the written sequence. The first approximation of the answer is . But now we are remember that we decreased  from all numbers written in cells with an odd sum of coordinates. So if  is even then the answer is , otherwise the answer is . Note that you should be careful with integer overflow in C++, Java or similar languages. 64-bit datatype is quite enough.Time complexity: .", "solution": "import sys\n\nlst = sys.stdin.readlines()\nn, q = map(int, lst[0].split())\n\nfor i in range(q):\n    x, y = map(int, lst[i + 1].split())\n    cnt = (x - 1) * n + y\n    ans = (cnt + 1) // 2\n    if ((x + y) % 2 == 1): ans += (n * n + 1) // 2\n    sys.stdout.write(str(ans) + '\\n')", "interactive": false, "noSolution": false, "noTutorial": false}