{"link": "https://codeforces.com//contest/920/problem/B", "problemId": "152862", "shortId": "920B", "contest_number": "920", "name": "B. Tea Queue", "statement": "Recently  students from city S moved to city P to attend a programming camp.They moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.-th student comes to the end of the queue at the beginning of -th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of -th second student  still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. For each student determine the second he will use the teapot and get his tea (if he actually gets it).", "input": "The first line contains one integer  \u2014 the number of test cases to solve (). Then  test cases follow. The first line of each test case contains one integer  () \u2014 the number of students. Then  lines follow. Each line contains two integer ,  () \u2014 the second -th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea. It is guaranteed that for every  condition  holds. The sum of  over all test cases doesn't exceed . .", "output": "For each test case print  integers. -th of them must be equal to the second when -th student gets his tea, or  if he leaves without tea.", "tutorial": "Let's store the last moment when somebody gets a tea in the variable . Then if for the -th student  then he will not get a tea. Otherwise he will get it during  second. And if he gets a tea then  will be replaced with the answer for this student.", "solution": "#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <limits.h>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <time.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:336777216\")\nusing namespace std;\n\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define ldb ldouble\n\ntypedef tuple<int, int, int> t3;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\n\nint IT_MAX = 1 << 17;\nll MOD = 1000000007;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 0x3f3f3f3f3f3f3f3f;\nconst db PI = acos(-1);\nconst db ERR = 1e-10;\n#define szz(x) (int)(x).size()\n#define rep(i, n) for(int i=0;i<n;i++)\n#define Se second\n#define Fi first\n\nvector <int> Vq;\n\nvector <int> Vl[6050];\nint in[6050][2];\nint ans[6050];\nint main() {\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tint N, i, j;\n\t\tscanf(\"%d\", &N);\n\t\tfor (i = 1; i <= N; i++) {\n\t\t\tint t1, t2;\n\t\t\tscanf(\"%d %d\", &t1, &t2);\n\t\t\tin[i][0] = t1, in[i][1] = t2;\n\t\t\tVl[t1].push_back(i);\n\t\t}\n\n\t\tint st = 0;\n\t\tfor (i = 1; i <= 6002; i++) {\n\t\t\tfor (auto it : Vl[i]) Vq.push_back(it);\n\t\t\twhile (st < Vq.size()) {\n\t\t\t\tif (in[Vq[st]][1] >= i) break;\n\t\t\t\tst++;\n\t\t\t}\n\t\t\tif (st < Vq.size()) {\n\t\t\t\tans[Vq[st]] = i;\n\t\t\t\tst++;\n\t\t\t}\n\t\t}\n\t\tfor (i = 1; i <= N; i++) printf(\"%d \", ans[i]);\n\t\tprintf(\"\\n\");\n\n\t\tfor (i = 1; i <= N; i++) ans[i] = 0;\n\t\tVq.clear();\n\t\tfor (i = 1; i <= 5000; i++) Vl[i].clear();\n\t}\n\treturn 0;\n}\n//*/", "interactive": false, "noSolution": false, "noTutorial": false}