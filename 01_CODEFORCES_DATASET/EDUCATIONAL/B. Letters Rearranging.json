{"link": "https://codeforces.com//contest/1093/problem/B", "problemId": "270223", "shortId": "1093B", "contest_number": "1093", "name": "B. Letters Rearranging", "statement": "You are given a string  consisting only of lowercase Latin letters.You can rearrange all letters of this string as you wish. Your task is to obtain a  string by rearranging the letters of the given string or report that it is impossible to do it.Let's call a string  if it is not a palindrome. Palindrome is a string which is read from left to right the same as from right to left. For example, strings \"\", \"\" and \"\" are palindromes and strings \"\", \"\" are not.You have to answer   queries.", "input": "The first line of the input contains one integer  () \u2014 number of queries. Each of the next  lines contains one string. The -th line contains a string  consisting only of lowercase Latin letter. It is guaranteed that the  of  is  (inclusive).", "output": "Print  lines. In the -th line print the answer to the -th query:  if it is impossible to obtain a  string by rearranging the letters of  and  string which can be obtained from the given one (by rearranging the letters) otherwise.", "tutorial": "The only case when the answer is  is when all letters of the string are equal. Why is it so? Because if we have at least two different letters we can place the first one at the first position of the string and the second one at the last position of the string. Then it is clearly that the obtained string is . We can implement this solution by the following way: sort  and if  (the first letter equals to the last one) then the answer is  otherwise the answer is .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n\tint t;\n\tcin >> t;\n\tfor (int i = 0; i < t; ++i) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tsort(s.begin(), s.end());\n\t\tif (s[0] == s.back()) cout << -1 << endl;\n\t\telse cout << s << endl;\n\t}\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}