{"link": "https://codeforces.com//contest/616/problem/B", "problemId": "45345", "shortId": "616B", "contest_number": "616", "name": "B. Dinner with Emma", "statement": "Jack decides to invite Emma out for a dinner. Jack is a modest student, he doesn't want to go to an expensive restaurant. Emma is a girl with high taste, she prefers elite places.Munhattan consists of  streets and  avenues. There is exactly one restaurant on the intersection of each street and avenue. The streets are numbered with integers from  to  and the avenues are numbered with integers from  to . The cost of dinner in the restaurant at the intersection of the -th street and the -th avenue is .Jack and Emma decide to choose the restaurant in the following way. Firstly Emma chooses the street to dinner and then Jack chooses the avenue. Emma and Jack makes their choice optimally: Emma wants to maximize the cost of the dinner, Jack wants to minimize it. Emma takes into account that Jack wants to minimize the cost of the dinner. Find the cost of the dinner for the couple in love.", "input": "The first line contains two integers  () \u2014 the number of streets and avenues in Munhattan. Each of the next  lines contains  integers  () \u2014 the cost of the dinner in the restaurant on the intersection of the -th street and the -th avenue.", "output": "Print the only integer  \u2014 the cost of the dinner for Jack and Emma.", "tutorial": "Firstly you should find the minimum value in each row and after that you should find the maximum value over that minimums. It's corresponding to the strategy of Jack and Emma.\n", "solution": "\n            #include <bits/stdc++.h>\n\u00a0\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define ford(i, n) for (int i = int(n) - 1; i >= 0; i--)\n#define fore(i, l, r) for (int i = int(l); i < int(r); i++)\n#define correct(x, y, n, m) (0 <= (x) && (x) < (n) && 0 <= (y) && (y) < (m))\n#define all(a) (a).begin(), (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define mp(x, y) make_pair((x), (y))\n#define x first\n#define y second\n\u00a0\nusing namespace std;\n\u00a0\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\u00a0\ntemplate<typename X> inline X abs(const X& a) { return a < 0? -a: a; }\ntemplate<typename X> inline X sqr(const X& a) { return a * a; }\n\u00a0\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld EPS = 1e-9, PI = 3.1415926535897932384626433832795;\n\u00a0\nconst int N = 5050;\n\u00a0\nint n, m;\nint a[N][N];\n\u00a0\ninline bool read() {\n\u00a0 \u00a0 if (!(cin >> n >> m)) return false;\n\u00a0 \u00a0 forn(i, n) forn(j, m) assert(scanf(\"%d\", &a[i][j]) == 1);\n\u00a0 \u00a0 return true;\n}\n\u00a0\ninline void solve() {\n\u00a0 \u00a0 int ans = INT_MIN;\n\u00a0 \u00a0 forn(i, n) {\n\u00a0 \u00a0 \u00a0 \u00a0 int cur = INT_MAX;\n\u00a0 \u00a0 \u00a0 \u00a0 forn(j, m) cur = min(cur, a[i][j]);\n\u00a0 \u00a0 \u00a0 \u00a0 ans = max(ans, cur);\n\u00a0 \u00a0 }\n\u00a0 \u00a0 cout << ans << endl;\n}\n\u00a0\nint main() {\n#ifdef SU1\n\u00a0 \u00a0 assert(freopen(\"input.txt\", \"rt\", stdin));\n\u00a0 \u00a0 //assert(freopen(\"output.txt\", \"wt\", stdout));\n#endif\n\u00a0 \u00a0 \n\u00a0 \u00a0 cout << setprecision(10) << fixed;\n\u00a0 \u00a0 cerr << setprecision(5) << fixed;\n\u00a0\n\u00a0 \u00a0 while (read()) {\n\u00a0 \u00a0 \u00a0 \u00a0 solve();\n\u00a0 \u00a0 \u00a0 \u00a0 //break;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 \n\u00a0 \u00a0 return 0;\n}\n        ", "interactive": false, "noSolution": false, "noTutorial": false}