{"link": "https://codeforces.com//contest/1373/problem/A", "problemId": "657370", "shortId": "1373A", "contest_number": "1373", "name": "A. Donut Shops", "statement": "There are two rival donut shops.The first shop sells donuts at retail: each donut costs  dollars.The second shop sells donuts only in bulk: box of  donuts costs  dollars. So if you want to buy  donuts from this shop, then you have to buy the smallest number of boxes such that the total number of donuts in them is greater or equal to .You want to determine two  values:   how many donuts can you buy so that they are strictly cheaper in the first shop than in the second shop?  how many donuts can you buy so that they are strictly cheaper in the second shop than in the first shop? If any of these values doesn't exist then that value should be equal to . If there are multiple possible answers, then print any of them.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. Each of the next  lines contains three integers ,  and  (, , ).", "output": "For each testcase print two  integers. For both shops print such  that buying  donuts in this shop is strictly cheaper than buying  donuts in the other shop.  should be greater than  and less or equal to . If there is no such , then print . If there are multiple answers, then print any of them.", "tutorial": "At first notice that if there exists a value for the second shop, then the value divisible by  also exists. For any  you can round it up to the nearest multiple of . That won't change the price for the second shop and only increase the price for the first shop.You can also guess that if there exists a value for the first shop, then the value with  modulo  also exists (exactly  donut on top of some number of full boxes). Following the same logic\u00a0\u2014 the second shop needs an entire new box and the first shop needs only an extra donut.So let's take a look at the smallest values of two kinds:   : this value is valid for the second shop if one box is cheaper than  donuts in the first shop. Otherwise, no matter how many boxes will you take, they will never be cheaper than the corresponding number of donuts.  : this value is valid for the first shop if one donut is cheaper than one box in the second shop. Apply the same idea\u00a0\u2014 otherwise no value for the first shop is valid. Overall complexity:  per testcase.", "solution": "for tc in range(int(input())):\n\ta, b, c = map(int, input().split())\n\tprint(1 if a < c else -1, end=\" \")\n\tprint(b if c < a * b else -1)", "interactive": false, "noSolution": false, "noTutorial": false}