{"link": "https://codeforces.com//contest/1132/problem/A", "problemId": "307695", "shortId": "1132A", "contest_number": "1132", "name": "A. Regular Bracket Sequence", "statement": "A string is called  if it does not contain any characters other than \"\" and \"\". A bracket sequence is called  if it it is possible to obtain correct arithmetic expression by inserting characters \"\" and \"\" into this sequence. For example, \"\", \"\" and \"\" are regular bracket sequences; \"\" and \"\" are bracket sequences (but not regular ones), and \"\" and \"\" are not bracket sequences at all.You have a number of strings; each string is a bracket sequence of length . So, overall you have  strings \"\",  strings \"\",  strings \"\" and  strings \"\". You want to write all these strings in some order, one after another; after that, you will get a long bracket sequence of length . You wonder: is it possible to choose some order of the strings you have such that you will get a regular bracket sequence? .", "input": "The input consists of four lines, -th of them contains one integer  ().", "output": "Print one integer:  if it is possible to form a regular bracket sequence by choosing the correct order of the given strings,  otherwise.", "tutorial": "For bracket sequence to be regular, it should have equal number of opening and closing brackets. So, if , then it's impossible to construct any regular bracket sequence. is completely irrelevant to us, since inserting or removing a  substring doesn't change the status of the string we get. Almost the same applies to , but we should have at least one  substring before it. So, if , but , there is no solution.In all other cases it is possible to order all strings as follows: all strings , then all strings , then all strings , then all strings .", "solution": "cnt = []\n\nfor i in range(4):\n\tcnt.append(int(input()))\n\t\nif(cnt[0] == cnt[3] and (cnt[2] == 0 or cnt[0] > 0)):\n\tprint(1)\nelse:\n\tprint(0)", "interactive": false, "noSolution": false, "noTutorial": false}