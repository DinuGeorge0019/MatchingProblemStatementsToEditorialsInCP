{"link": "https://codeforces.com//contest/1260/problem/E", "problemId": "482537", "shortId": "1260E", "contest_number": "1260", "name": "E. Tournament", "statement": "You are organizing a boxing tournament, where  boxers will participate ( is a power of ), and your friend is one of them. All boxers have different strength from  to , and boxer  wins in the match against boxer  if and only if  is stronger than .The tournament will be organized as follows:  boxers will be divided into pairs; the loser in each pair leaves the tournament, and  winners advance to the next stage, where they are divided into pairs again, and the winners in all pairs advance to the next stage, and so on, until only one boxer remains (who is declared the winner).Your friend really wants to win the tournament, but he may be not the strongest boxer. To help your friend win the tournament, you may bribe his opponents: if your friend is fighting with a boxer you have bribed, your friend wins even if his strength is lower.Furthermore, during each stage you distribute the boxers into pairs as you wish.The boxer with strength  can be bribed if you pay him  dollars. What is the minimum number of dollars you have to spend to make your friend win the tournament, provided that you arrange the boxers into pairs during each stage as you wish?", "input": "The first line contains one integer  () \u2014 the number of boxers.  is a power of . The second line contains  integers , , ..., , where  is the number of dollars you have to pay if you want to bribe the boxer with strength . Exactly one of  is equal to  \u2014 it means that the boxer with strength  is your friend. All other values are in the range .", "output": "Print one integer \u2014 the minimum number of dollars you have to pay so your friend wins.", "tutorial": "If our friend is the strongest boxer, he wins without any bribing. Otherwise, we have to bribe the strongest boxer \u2014 and he can defeat some  other boxers (directly or indirectly). Suppose we chose the boxers he will defeat, then there is another strongest boxer. If our friend is the strongest now, we don't need to bribe anyone; otherwise we will bribe the strongest remaining boxer again, and he can defeat  other boxers, and so on.The only thing that's unclear is which boxers should be defeated by the ones we bribe. We may use dynamic programming to bribe them:  is the minimum cost to bribe  boxers so that all boxers among  strongest ones are either bribed or defeated by some bribed boxer. For each value of  we know the maximum amount of boxers that are defeated by  bribed boxers, so the transitions in this dynamic programming are the following: if we can't defeat the next boxer \"for free\" (our bribed boxers have already defeated as many opponents as they could), we have to bribe him; otherwise, we either bribe him or consider him defeated by some other boxer.Overall complexity is .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOGN = 20;\nconst int N = (1 << LOGN) + 99;\nconst long long INF = 1e18;\n\nint n;\nint a[N];\nlong long dp[LOGN+2][N];\nint sum[100];\n\nlong long calc(int cnt, int pos){\n\tlong long &res = dp[cnt][pos];\n\tif(res != -1) return res;\n\n\tif(a[pos] == -1) return res = 0;\n\tint rem = sum[cnt] - pos;\n\n\tres = INF;\n\tif(cnt < LOGN)\n\t\tres = calc(cnt + 1, pos + 1) + a[pos];\n\tif(rem > 0)\t\t\n\t\tres = min(res, calc(cnt, pos + 1));\n\n\treturn res;\n}\n\nint main() {\t\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; ++i)\n\t\tscanf(\"%d\", a + i);\n\n\tfor(int i = 1, x = n / 2; i < 100; ++i, x /= 2)\n\t\tsum[i] = sum[i - 1] + x;\n\t\n\treverse(a, a + n);\n\tmemset(dp, -1, sizeof dp);\n\tprintf(\"%lld\", calc(0, 0));\t\n\treturn 0;\n}                             \t", "interactive": false, "noSolution": false, "noTutorial": false}