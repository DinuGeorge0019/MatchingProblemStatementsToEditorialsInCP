{"link": "https://codeforces.com//contest/1519/problem/A", "problemId": "971586", "shortId": "1519A", "contest_number": "1519", "name": "A. Red and Blue Beans", "statement": "You have  red and  blue beans. You'd like to distribute them among several (maybe, one) packets in such a way that each packet:   has at least one red bean (or the number of red beans );  has at least one blue bean (or the number of blue beans );  the number of red and blue beans should differ in no more than  (or ) Can you distribute all beans?", "input": "The first line contains the single integer  ()\u00a0\u2014 the number of test cases. The first and only line of each test case contains three integers , , and  (; )\u00a0\u2014 the number of red and blue beans and the maximum absolute difference in each packet.", "output": "For each test case, if you can distribute all beans, print . Otherwise, print . You may print every letter in any case you want (so, for example, the strings , ,  and  are all recognized as positive answer).", "tutorial": "Without loss of generality, let's say  (otherwise, we can swap them). Note that you can't use more than  packets (at least one red bean in each packet), so  can't exceed  (at most  blue beans in each packet).So, if  then asnwer is . Otherwise, we can form exactly  packets.", "solution": "fun main() {\n    repeat(readLine()!!.toInt()) {\n        val (r, b, d) = readLine()!!.split(' ').map { it.toInt() }\n        println(if (minOf(r, b) * (d + 1).toLong() >= maxOf(r, b)) \"YES\" else \"NO\")\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}