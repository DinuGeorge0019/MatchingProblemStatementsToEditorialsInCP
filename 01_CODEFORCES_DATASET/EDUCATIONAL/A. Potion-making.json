{"link": "https://codeforces.com//contest/1525/problem/A", "problemId": "987011", "shortId": "1525A", "contest_number": "1525", "name": "A. Potion-making", "statement": "You have an initially empty cauldron, and you want to brew a potion in it. The potion consists of two ingredients: magic essence and water. The potion you want to brew should contain exactly  magic essence and  water.In one step, you can pour either one liter of magic essence or one liter of water into the cauldron. What is the minimum number of steps to brew a potion? You don't care about the total volume of the potion, only about the ratio between magic essence and water in it.A small reminder: if you pour  liters of essence and  liters of water () into the cauldron, then it contains  (without rounding) magic essence and  water.", "input": "The first line contains the single  ()\u00a0\u2014 the number of test cases. The first and only line of each test case contains a single integer  ()\u00a0\u2014 the percentage of essence in a good potion.", "output": "For each test case, print the minimum number of steps to brew a good potion. It can be proved that it's always possible to achieve it in a finite number of steps.", "tutorial": "Since you need  liters of essence to be exactly  of potion then we can write an equality:  or  and  for some integer . Since we need to minimize  and , then we should maximize , but both  and  should be divisible by . In other words, taking  as Greatest Common Divisor of  and  is optimal.As a result .", "solution": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main() {\n\tint t; cin >> t;\n\twhile (t--) {\n\t\tint k; cin >> k;\n\t\tcout << 100 / gcd(100, k) << endl;\n\t}\n\treturn 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}