{"link": "https://codeforces.com//contest/903/problem/B", "problemId": "138451", "shortId": "903B", "contest_number": "903", "name": "B. The Modcrab", "statement": "Vova is again playing some computer game, now an RPG. In the game Vova's character received a quest: to slay the fearsome monster called Modcrab.After two hours of playing the game Vova has tracked the monster and analyzed its tactics. The Modcrab has  health points and an attack power of . Knowing that, Vova has decided to buy a lot of strong healing potions and to prepare for battle.Vova's character has  health points and an attack power of . Also he has a large supply of healing potions, each of which increases his current amount of health points by  when Vova drinks a potion. All potions are identical to each other. It is guaranteed that .The battle consists of multiple phases. In the beginning of each phase, Vova can either attack the monster (thus reducing its health by ) or drink a healing potion (it increases Vova's health by ; ). Then, , the Modcrab attacks Vova, reducing his health by . The battle ends when Vova's (or Modcrab's) health drops to  or lower. It is possible that the battle ends in a middle of a phase after Vova's attack.Of course, Vova wants to win the fight. But also he wants to do it as fast as possible. So he wants to make up a strategy that will allow him to win the fight after the minimum possible number of phases.Help Vova to make up a strategy! You may assume that Vova never runs out of healing potions, and that he can always win.", "input": "The first line contains three integers , ,  (, ) \u2014 Vova's health, Vova's attack power and the healing power of a potion. The second line contains two integers ,  (, ) \u2014 the Modcrab's health and his attack power.", "output": "In the first line print one integer  denoting the minimum number of phases required to win the battle. Then print  lines. -th line must be equal to  if Vova drinks a potion in -th phase, or  if he attacks the Modcrab. The strategy must be valid: Vova's character must not be defeated before slaying the Modcrab, and the monster's health must be  or lower after Vova's last action. If there are multiple optimal solutions, print any of them.", "tutorial": "A simple greedy solution works: simulate the process until the Modcrab is dead, and make Vova drink a potion if his current health is less than , and monster's current health is greater than  (because in this case Vova can't finish the Modcrab in one strike, but the Modcrab can win if Vova doesn't heal). In any other situation Vova must attack.Since all parameters are up to , the number of phases won't exceed .", "solution": "#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <limits.h>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <time.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:336777216\")\nusing namespace std;\n\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define ldb ldouble\n\ntypedef tuple<int, int, int> t3;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\n\nint IT_MAX = 1 << 20;\nconst ll MOD = 1000000007;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 0x3f3f3f3f3f3f3f3f;\nconst db PI = acos(-1);\nconst db ERR = 1e-9;\n#define szz(x) (int)(x).size()\n#define rep(i, n) for(int i=0;i<n;i++)\n#define Se second\n#define Fi first\n\nint main() {\n\tint H1, A1, C1, H2, A2, i;\n\tscanf(\"%d %d %d %d %d\", &H1, &A1, &C1, &H2, &A2);\n\n\tint ans = INF;\n\tfor (i = 0; i <= 10000; i++) {\n\t\tint h = H1 + i*(C1 - A2);\n\t\tll tur = (h + A2 - 1) / A2;\n\t\tif (tur * A1 >= H2) {\n\t\t\tans = min(ans, (H2 + A1 - 1) / A1 + i);\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t\tfor (int j = 1; j <= i; j++) printf(\"HEAL\\n\");\n\t\t\tfor (int j = 1; j <= (H2 + A1 - 1) / A1; j++) printf(\"STRIKE\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn !printf(\"%d\\n\", ans);\n}", "interactive": false, "noSolution": false, "noTutorial": false}