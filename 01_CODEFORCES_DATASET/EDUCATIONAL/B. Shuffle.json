{"link": "https://codeforces.com//contest/1366/problem/B", "problemId": "646800", "shortId": "1366B", "contest_number": "1366", "name": "B. Shuffle", "statement": "You are given an array consisting of  integers , , ..., . Initially , all other elements are equal to .You have to perform  operations. During the -th operation, you choose two indices  and  such that , and swap  and .Calculate the number of indices  such that it is possible to choose the operations so that  in the end.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. Then the description of  testcases follow. The first line of each test case contains three integers ,  and  (; ; ). Each of next  lines contains the descriptions of the operations; the -th line contains two integers  and  ().", "output": "For each test case print one integer \u2014 the number of indices  such that it is possible to choose the operations so that  in the end.", "tutorial": "Let's consider how the set of possible indices where the  can be changes. Initially, only one index is correct \u2014 . After performing an operation  such that  or  this set does not change. But after performing an operation  such that  we should insert the elements  into this set, if they are not present. Now consider how the set  changes. If segments  and  do not share any indices, there are no changes \u2014 but if they do, the set turns into .So the set of reachable indices is always a segment of numbers, and to process an operation, we should check whether the segment from operation intersects with the segment of indices we have \u2014 and if it is true, unite them.", "solution": "for _ in range(int(input())):\n    n, x, m = map(int, input().split())\n    l, r = x, x\n    for _ in range(m):\n        L, R = map(int, input().split())\n        if max(l, L) <= min(r, R):\n            l = min(l, L)\n            r = max(r, R)\n            \n    print(r - l + 1)", "interactive": false, "noSolution": false, "noTutorial": false}