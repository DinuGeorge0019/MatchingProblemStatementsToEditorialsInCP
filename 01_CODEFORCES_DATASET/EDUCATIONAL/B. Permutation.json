{"link": "https://codeforces.com//contest/1701/problem/B", "problemId": "1455050", "shortId": "1701B", "contest_number": "1701", "name": "B. Permutation", "statement": "Recall that a permutation of length  is an array where each element from  to  occurs exactly once.For a fixed positive integer , let's define the cost of the permutation  of length  as the number of indices   such that .For example, if  and , then the cost of such a permutation is , because  and .Your task is the following one: for a given value , find the permutation of length  and the value  with maximum possible cost (over all ways to choose the permutation and ). If there are multiple answers, then print any of them.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. The single line of each test case contains a single integer  (). The sum of  over all test cases does not exceed .", "output": "For each test case, print the value  in the first line, and  integers in the second line\u00a0\u2014 the permutation itself. If there are multiple answers, then print any of them.", "tutorial": "Let's notice that for a fixed value of , the answer (the cost of permutation) does not exceed , because only numbers from  to  can have a pair. It turns out that it is always possible to construct a permutation with the cost of exactly . It is enough to consider the number \"chains\" of the form: , where . It is not difficult to understand that each number is included in exactly one such chain. Therefore, if we append the chains one after another, then in such a permutation the answer will be equal to  (because all numbers will have a pair except the last element in the chain). The number of chains is equal to , which means the cost of the permutation is equal to . By choosing  the permutation will have the maximum possible cost.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false); cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    cout << 2 << '\\n';\n    for (int i = 1; i <= n; ++i) if (i % 2 != 0)\n      for (int j = i; j <= n; j *= 2)\n        cout << j << ' ';\n    cout << '\\n';\n  }\n} ", "interactive": false, "noSolution": false, "noTutorial": false}