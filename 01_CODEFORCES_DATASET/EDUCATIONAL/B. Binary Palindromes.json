{"link": "https://codeforces.com//contest/1251/problem/B", "problemId": "449545", "shortId": "1251B", "contest_number": "1251", "name": "B. Binary Palindromes", "statement": "A palindrome is a string  which reads the same backward as forward (formally,  for all ). Here  denotes the length of a string . For example, the strings ,  and  are palindromes.You have  binary strings  (each  consists of zeroes and/or ones). You can swap any pair of characters any number of times (possibly, zero). Characters can be either from the same string or from different strings \u2014 there are no restrictions.Formally, in one move you:  choose four integer numbers  such that  and  and  (where  and  are string indices and  and  are positions in strings  and  respectively),  swap (exchange) the characters  and . What is the maximum number of strings you can make palindromic simultaneously?", "input": "The first line contains single integer  () \u2014 the number of test cases. The first line on each test case contains single integer  () \u2014 the number of binary strings you have. Next  lines contains binary strings  \u2014 one per line. It's guaranteed that  and all strings constist of zeroes and/or ones.", "output": "Print  integers \u2014 one per test case. The -th integer should be the maximum number of palindromic strings you can achieve simultaneously performing zero or more swaps on strings from the -th test case.", "tutorial": "Let's make several observations. At first, note that the lengths of the strings doesn't change.At second, note that if the string has even length then being palindromic is the same as having even number of zeroes and even number of ones. But if the string has odd length, then it always is palindromic.So the question is how to fix \"bad\" strings with even length but with odd number of zeroes and ones. If we have at least one string with odd length, then you can trade between \"bad\" string and \"odd\" string either zero to one or one to zero, fixing the \"bad\" string.Otherwise you can fix two \"bad\" strings swapping appropriate characters. In result, we can either make all strings palindromic or all strings except one in case of absence of \"odd\" strings and having odd number of \"bad\" strings.", "solution": "fun main() {\n    val q = readLine()!!.toInt()\n    for (ct in 1..q) {\n        val n = readLine()!!.toInt()\n        var (odd, evenGood, evenBad) = listOf(0, 0, 0)\n        for (i in 1..n) {\n            val s = readLine()!!\n            when {\n                s.length % 2 == 1 -> odd++\n                s.count { it == '0' } % 2 == 0 -> evenGood++\n                else -> evenBad++\n            }\n        }\n        println(n - if (odd == 0 && evenBad % 2 == 1) 1 else 0)\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}