{"link": "https://codeforces.com//contest/1359/problem/A", "problemId": "634672", "shortId": "1359A", "contest_number": "1359", "name": "A. Berland Poker", "statement": "The game of Berland poker is played with a deck of  cards,  of which are jokers.  players play this game ( is divisible by ).At the beginning of the game, each player takes  cards from the deck (so each card is taken by exactly one player). The player who has the maximum number of jokers is the winner, and he gets the number of points equal to , where  is the number of jokers in the winner's hand, and  is the maximum number of jokers among all other players. If there are two or more players with maximum number of jokers, all of them are winners and they get  points.Here are some examples:  , , . If one player gets  jokers and  plain card, and another player gets  jokers and  plain cards, then the first player is the winner and gets  points;  , , . Two players get plain cards, and the other two players get jokers, so both of them are winners and get  points;  , , . If the first player gets  jokers, the second player gets  joker and  plain cards, and the third player gets  jokers and  plain card, then the first player is the winner, and he gets  point;  , , . Since there are no jokers, everyone gets  jokers, everyone is a winner, and everyone gets  points. Given ,  and , calculate the maximum number of points a player can get for winning the game.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then the test cases follow. Each test case contains three integers ,  and  (, , ,  is a divisors of ).", "output": "For each test case, print one integer \u2014 the maximum number of points a player can get for winning the game.", "tutorial": "There are many different ways to solve this problem. The easiest one, in my opinion, is to iterate on the number of jokers the winner has (let it be ) and the number of jokers the runner-up has (let it be ). Then the following conditions should be met:   (the winner doesn't have less jokers than the runner-up);   (the number of jokers in the winner's hand does not exceed the number of cards in his hand);   (the number of jokers for these two players does not exceed the total number of jokers);   (it is possible to redistribute remaining jokers among other players so that they have at most  jokers). Iterating on  and , then checking these constraints gives us a  solution. It is possible to get a constant-time solution using some greedy assumptions and math (the first player should get as many jokers as possible, while the remaining jokers should be evenly distributed among other players).", "solution": "t = int(input())\n\nfor i in range(t):\n    n, m, k = map(int, input().split())\n    d = n // k\n    a1 = min(m, d)\n    a2 = (m - a1 + k - 2) // (k - 1)\n    print(a1 - a2)", "interactive": false, "noSolution": false, "noTutorial": false}