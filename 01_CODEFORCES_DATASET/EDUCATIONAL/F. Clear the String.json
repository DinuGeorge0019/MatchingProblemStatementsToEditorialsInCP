{"link": "https://codeforces.com//contest/1132/problem/F", "problemId": "307700", "shortId": "1132F", "contest_number": "1132", "name": "F. Clear the String", "statement": "You are given a string  of length  consisting of lowercase Latin letters. You may apply some operations to this string: in one operation you can delete some contiguous substring of this string, if all letters in the substring you delete are equal. For example, after deleting substring  from string  we get the string .Calculate the minimum number of operations to delete the whole string .", "input": "The first line contains one integer  () \u2014 the length of string . The second line contains the string  () consisting of lowercase Latin letters.", "output": "Output a single integer \u2014 the minimal number of operation to delete string .", "tutorial": "We will solve the problem by dynamic programming. Let  be the answer for substring . Then we have two cases:   The first letter of the substring is deleted separately from the rest, then ;  The first letter of the substring is deleted alongside with some other letter (both letters must be equal), then . ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 505;\n\nint n;\nstring s;\nint dp[N][N];\n\nint calc(int l, int r){\t\n\tint &res = dp[l][r];\n\tif(res != -1) return res;\n\t\n\tif(l > r) return res = 0;\n\tif(l == r) return res = 1;\n    \n\tres = 1 + calc(l + 1, r);\n\tfor(int i = l + 1; i <= r; ++ i)\n\t\tif(s[l] == s[i])\n\t\t\tres = min(res, calc(l + 1, i - 1) + calc(i, r));\n\treturn res;\n}\n\nint main(){\n\tcin >> n >> s;\n\tmemset(dp, -1, sizeof dp);\n\tcout << calc(0, n - 1);\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}