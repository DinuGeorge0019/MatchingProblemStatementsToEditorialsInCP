{"link": "https://codeforces.com//contest/1238/problem/B", "problemId": "434106", "shortId": "1238B", "contest_number": "1238", "name": "B. Kill 'Em All", "statement": "Ivan plays an old action game called Heretic. He's stuck on one of the final levels of this game, so he needs some help with killing the monsters.The main part of the level is a large corridor (so large and narrow that it can be represented as an infinite coordinate line). The corridor is divided into two parts; let's assume that the point  is where these parts meet.The right part of the corridor is filled with  monsters \u2014 for each monster, its initial coordinate  is given (and since all monsters are in the right part, every  is positive).The left part of the corridor is filled with crusher traps. If some monster enters the left part of the corridor or the origin (so, its current coordinate becomes  to ), it gets instantly killed by a trap.The main weapon Ivan uses to kill the monsters is the Phoenix Rod. It can launch a missile that explodes upon impact, obliterating every monster caught in the explosion and throwing all other monsters away from the epicenter. Formally, suppose that Ivan launches a missile so that it explodes in the point . Then every monster is either killed by explosion or pushed away. Let some monster's current coordinate be , then:  if , then the monster is killed;  if , then the monster is pushed  units to the left, so its current coordinate becomes ;  if , then the monster is pushed  units to the right, so its current coordinate becomes . Ivan is going to kill the monsters as follows: choose some integer point  and launch a missile into that point, then wait until it explodes and all the monsters which are pushed to the left part of the corridor are killed by crusher traps, then, if at least one monster is still alive, choose another integer point (probably the one that was already used) and launch a missile there, and so on.What is the minimum number of missiles Ivan has to launch in order to kill all of the monsters? You may assume that every time Ivan fires the Phoenix Rod, he chooses the impact point optimally.You have to answer  independent queries.", "input": "The first line contains one integer  () \u2014 the number of queries. The first line of each query contains two integers  and  ()\u00a0\u2014 the number of enemies and the distance that the enemies are thrown away from the epicenter of the explosion. The second line of each query contains  integers  ()\u00a0\u2014 the initial positions of the monsters. It is guaranteed that sum of all  over all queries does not exceed .", "output": "For each query print one integer\u00a0\u2014 the minimum number of shots from the Phoenix Rod required to kill all monsters.", "tutorial": "Notice the following fact: it's never optimal to fire a missile at such a position that there are monsters to the right of it. That suggests the next solution: sort the positions, leave only the unique ones and process to shoot at the rightmost alive monster until every monster is dead. Position of some monster after  shots are made is the original position minus , because the monster could only be pushed to the left.Overall complexity: .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nconst int N = 100 * 1000 + 13;\n\nint n, r;\nint a[N];\n\nvoid solve() {\n\tscanf(\"%d%d\", &n, &r);\n\tforn(i, n) scanf(\"%d\", &a[i]);\n\t\n\tsort(a, a + n);\n\tn = unique(a, a + n) - a;\n\t\n\tint ans = 0;\n\tfor (int i = n - 1; i >= 0; i--) \n\t\tans += (a[i] - ans * r > 0);\n\n\tprintf(\"%d\\n\", ans);\n}\n\nint main() {\n\tint q;\n\tscanf(\"%d\", &q);\n\tforn(i, q) solve();\n}", "interactive": false, "noSolution": false, "noTutorial": false}