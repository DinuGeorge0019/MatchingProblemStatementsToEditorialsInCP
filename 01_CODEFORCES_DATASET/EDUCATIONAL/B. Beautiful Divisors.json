{"link": "https://codeforces.com//contest/893/problem/B", "problemId": "135512", "shortId": "893B", "contest_number": "893", "name": "B. Beautiful Divisors", "statement": "Recently Luba learned about a special kind of numbers that she calls  numbers. The number is called  iff its binary representation consists of  consecutive ones, and then  consecutive zeroes.Some examples of beautiful numbers:    ();   ();   ();   (). More formally, the number is beautiful iff there exists some positive integer  such that the number is equal to .Luba has got an integer number , and she wants to find its greatest beautiful divisor. Help her to find it!", "input": "The only line of input contains one number  () \u2014 the number Luba has got.", "output": "Output one number \u2014 the greatest beautiful divisor of Luba's number. It is obvious that the answer always exists.", "tutorial": "Let's notice that there are only  beautiful numbers less than . Generate them all and select the greatest one which is also divisor of .Overall complexity: .", "solution": "#include <bits/stdc++.h>\n\n#define itn int\n#define all(x) (x).begin(), (x).end()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\n\n#ifdef ONLINE_JUDGE\n\tinline int pidorand() {\n\t\treturn ((rand() & 32767) << 15) | (rand() & 32767);\n\t}\n\t#define rand pidorand\n#endif\t// ONLINE_JUDGE\n\n#ifdef OLBOEB\n\t#define return std::cerr << __FUNCTION__ << \"\\n\"; return\n#endif  // OLBOEB\n\nusing namespace std;\n\ninline int nxt() {\n\tint x;\n\tscanf(\"%d\", &x);\n\treturn x;\n}\n\nbool isWonderful(int d) {\n\tint l = __builtin_ctz(d);\n\treturn d == ((2 << l) - 1) << l;\n}\n\nint main() {\n\tint n = nxt();\n\tint d = 1;\n\tfor (int i = 2; i <= n; ++i) {\n\t\tif (n % i || !isWonderful(i)) {\n\t\t\tcontinue;\n\t\t}\n\t\td = i;\n\t}\n\tprintf(\"%d\\n\", d);\n\n\treturn 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}