{"link": "https://codeforces.com//contest/976/problem/B", "problemId": "179786", "shortId": "976B", "contest_number": "976", "name": "B. Lara Croft and the New Game", "statement": "You might have heard about the next game in Lara Croft series coming out this year. You also might have watched its trailer. Though you definitely missed the main idea about its plot, so let me lift the veil of secrecy.Lara is going to explore yet another dangerous dungeon. Game designers decided to use good old 2D environment. The dungeon can be represented as a rectangle matrix of  rows and  columns. Cell  is the cell in the -th row in the -th column. Lara can move between the neighbouring by side cells in all four directions.Moreover, she has even chosen the path for herself to avoid all the traps. She enters the dungeon in cell , that is top left corner of the matrix. Then she goes down all the way to cell  \u2014 the bottom left corner. Then she starts moving in the snake fashion \u2014 all the way to the right, one cell up, then to the left to the cell in -nd column, one cell up. She moves until she runs out of non-visited cells.  and  given are such that she always end up in cell .Lara has already moved to a neighbouring cell  times. Can you determine her current position?", "input": "The only line contains three integers ,  and  (, , ). Note that  doesn't fit into -bit integer type!", "output": "Print the cell (the row and the column where the cell is situated) where Lara ends up after she moves  times.", "tutorial": "Naive solution would be just simulate the tranversal and break when  steps are made. Obviously, this won't fit into time limit. Then we can decompose the path to some parts which can be calculated separately.  Walk from the top left to the bottom left corner;  Walk from second column to -th on even rows;  Walk from -th column to second on odd rows. If  then it's the first part. Otherwise you can use the fact that rows are of the same length.  will tell you the row and  will get you the number of steps Lara have made along this row.Overall complexity: .", "solution": "#include <bits/stdc++.h>\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nusing namespace std;\n\nint n, m;\nlong long k;\n\nint main() {\n\tscanf(\"%d%d%lld\", &n, &m, &k);\n\tif (k < n){\n\t\tprintf(\"%lld 1\\n\", k + 1);\n\t\treturn 0;\n\t}\n\tk -= n;\n\tlong long row = k / (m - 1);\n\tprintf(\"%lld \", n - row);\n\tif (row & 1)\n\t\tprintf(\"%lld\\n\", m - k % (m - 1));\n\telse\n\t\tprintf(\"%lld\\n\", k % (m - 1) + 2);\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}