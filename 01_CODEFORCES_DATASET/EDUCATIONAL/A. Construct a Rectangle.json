{"link": "https://codeforces.com//contest/1622/problem/A", "problemId": "1242577", "shortId": "1622A", "contest_number": "1622", "name": "A. Construct a Rectangle", "statement": "There are three sticks with integer lengths  and .You are asked to break exactly one of them into two pieces in such a way that:   both pieces have positive (strictly greater than )  length;  the total length of the pieces is equal to the original length of the stick;  it's possible to construct a rectangle from the resulting four sticks such that each stick is used as exactly one of its sides. A square is also considered a rectangle.Determine if it's possible to do that.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. The only line of each testcase contains three integers  ()\u00a0\u2014 the lengths of the sticks.", "output": "For each testcase, print \"\" if it's possible to break one of the sticks into two pieces with positive integer length in such a way that it's possible to construct a rectangle from the resulting four sticks. Otherwise, print \"\". You may print every letter in any case you want (so, for example, the strings , ,  and  are all recognized as a positive answer).", "tutorial": "First, the condition about being able to construct a rectangle is the same as having two pairs of sticks of equal length.Let's fix the stick that we are going to break into two parts. Now there are two cases.The remaining two sticks can be the same. In that case, you can break the chosen stick into equal parts to make the second equal pair of sticks. Note, however, that the stick should have an even length, because otherwise the length of the resulting parts won't be integer.The remaining two sticks can be different. In that case, the chosen stick should have the length equal to their total length, because the only way to make two pairs of equal sticks is to produce the same two sticks as the remaining ones.Overall complexity:  per testcase.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    vector<int> l(3);\n    for (int i = 0; i < 3; ++i)\n      cin >> l[i];\n    bool ok = false;\n    for (int i = 0; i < 3; ++i)\n      ok |= l[i] == l[(i + 1) % 3] + l[(i + 2) % 3];\n    for (int i = 0; i < 3; ++i) if (l[i] % 2 == 0)\n      ok |= l[(i + 1) % 3] == l[(i + 2) % 3];\n    cout << (ok ? \"YES\\n\" : \"NO\\n\");\n  }\n} ", "interactive": false, "noSolution": false, "noTutorial": false}