{"link": "https://codeforces.com//contest/803/problem/C", "problemId": "104508", "shortId": "803C", "contest_number": "803", "name": "C. Maximal GCD", "statement": "You are given positive integer number . You should create such  sequence of  positive numbers , that their sum is equal to  and greatest common divisor is maximal.Greatest common divisor of sequence is maximum of such numbers that every element of sequence is divisible by them.If there is no possible sequence then output .", "input": "The first line consists of two numbers  and  ().", "output": "If the answer exists then output  numbers \u2014 resulting sequence. Otherwise output . If there are multiple answers, print any of them.", "tutorial": "Notice that GCD of the resulting sequence is always a divisor of . Now let's iterate over all divisors up to . Current divisor is . One of the ways to retrieve resulting sequence is to take , their sum is . The last number is . You should check if .  is the sum of arithmetic progression, its equal to .Don't forget that you should consider  and , if you check divisors up to . Take maximum of possible divisors or output  if there were no such divisors.Overall complexity: .", "solution": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n#include <ctime>\n#include <string>\n#include <cstring>\n#include <complex>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\n\nint main()\n{\n//    freopen(\"input.txt\", \"r\", stdin);\n//    freopen(\"output.txt\", \"w\", stdout);\n\n    ll n, k;\n    scanf(\"%lld%lld\", &n, &k);\n    if (k > (ll)1e8)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    ll b = n / (k * (k + 1) / 2);\n    if (b == 0)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    ll r = 1;\n    for (ll x = 1; x * x <= n; x++)\n    {\n        if (n % x != 0) continue;\n        if (x <= b && x > r) r = x;\n        if (n / x <= b && n / x > r) r = n / x;\n    }\n    for (int i = 1; i < k; i++)\n        printf(\"%lld \", r * i);\n    n -= r * k * (k - 1) / 2;\n    printf(\"%lld\\n\", n);\n\n    return 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}