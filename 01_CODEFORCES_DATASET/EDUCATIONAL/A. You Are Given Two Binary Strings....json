{"link": "https://codeforces.com//contest/1202/problem/A", "problemId": "385662", "shortId": "1202A", "contest_number": "1202", "name": "A. You Are Given Two Binary Strings...", "statement": "You are given two binary strings  and , which are binary representations of some two integers (let's denote these integers as  and ). You can choose any integer , calculate the expression  and write the binary representation of  in  (let's denote it as ). For example, let  and ; you've chosen  and, since , so  and .For given  and , you need to choose such  that  is  (read notes if you don't know what does \"lexicographically\" means).It's guaranteed that, with given constraints,  exists and is finite.", "input": "The first line contains a single integer  () \u2014 the number of queries. Next  lines contain a description of queries: two lines per query. The first line contains one binary string , consisting of no more than  characters. Each character is either  or . The second line contains one binary string , consisting of no more than  characters. Each character is either  or . It's guaranteed, that  (where  is the integer represented by , and  is the integer represented by ), both representations don't have any leading zeroes, the total length of  over all queries doesn't exceed , and the total length of  over all queries doesn't exceed .", "output": "Print  integers (one per query). For each query print such  that  is lexicographically minimal.", "tutorial": "Multiplying by power of  is \"shift left\" binary operation (you, probably, should know it). Reverse  and  for the simplicity and look at leftmost  in  (let's denote its position as ).If you move it to  in  then you make the  lexicographically bigger than the reverse of . So you should move it to  in  too. You can choose any  with position .Let  be the minimum position of  in , such that . You must move  to , otherwise the  in  still be present in  and it will be not optimal.So, the solution is next: reverse  and , find , find , print .", "solution": "fun main(args: Array<String>) {\n    val T = readLine()!!.toInt()\n    for (tc in 1..T) {\n        val x = readLine()!!.reversed()\n        val y = readLine()!!.reversed()\n\n        val posY = y.indexOf('1')\n        val posX = x.indexOf('1', posY)\n        println(posX - posY)\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}