{"link": "https://codeforces.com//contest/954/problem/E", "problemId": "167342", "shortId": "954E", "contest_number": "954", "name": "E. Water Taps", "statement": "Consider a system of  water taps all pouring water into the same container. The -th water tap can be set to deliver any amount of water from  to  ml per second (this amount may be a real number). The water delivered by -th tap has temperature .If for every  you set -th tap to deliver exactly  ml of water per second, then the resulting temperature of water will be  (if , then to avoid division by zero we state that the resulting water temperature is ).You have to set all the water taps in such a way that the resulting temperature is exactly . What is the maximum amount of water you may get per second if its temperature has to be ?", "input": "The first line contains two integers  and  (, ) \u2014 the number of water taps and the desired temperature of water, respectively. The second line contains  integers , , ...,  () where  is the maximum amount of water -th tap can deliver per second. The third line contains  integers , , ...,  () \u2014 the temperature of water each tap delivers.", "output": "Print the maximum possible amount of water with temperature exactly  you can get per second (if it is impossible to obtain water with such temperature, then the answer is considered to be ). Your answer is considered correct if its absolute or relative error doesn't exceed .", "tutorial": "The following greedy strategy work. Let's turn all the taps at full power. If total temperature is greater than  then we would like to decrease power on some taps with higher temperature. We want to decrease as low power as possible, so we should prioritize taps with the highest temperature. Sort all taps by temperature and find the total power on suffix you should decrease to have equal temperatures. This can be done with binary search. The same works for smaller initial temperature.Overall complexity: .", "solution": "#include<bits/stdc++.h>\n#define pa pair<int,int>\n#define MN 200000\nusing namespace std;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ndouble ans=0;\nint n,T,aa[MN+5],tt[MN+5],num1,num2;\npa a[MN+5],b[MN+5];\nlong long big,sml;\nint main()\n{\n\tn=read();T=read();\n\tfor(int i=1;i<=n;++i) aa[i]=read();\n\tfor(int i=1;i<=n;++i) \n\t{\n\t\ttt[i]=read();\n\t\tif(tt[i]==T) ans+=aa[i];\n\t\telse if(tt[i]>T) a[++num1]=make_pair(tt[i],aa[i]),big+=1LL*aa[i]*(tt[i]-T);\n\t\telse if(tt[i]<T) b[++num2]=make_pair(tt[i],aa[i]),sml+=1LL*aa[i]*(T-tt[i]);\n\t}\n\tsort(a+1,a+num1+1);\n\tsort(b+1,b+num2+1,greater<pa>());\n\tif(big>sml)\n\t{\n\t\tfor(int i=1;i<=n;++i) \n\t\t\tswap(a[i],b[i]),\n\t\t\ta[i].first=T*2-a[i].first,\n\t\t\tb[i].first=T*2-b[i].first;\n\t\tswap(big,sml);swap(num1,num2);\n\t}\n\tlong long now=0;\n\tfor(int i=1;i<=num1;++i) ans+=a[i].second;\n\tfor(int i=1;i<=num2;++i)\n\t{\n\t\tnow+=1LL*b[i].second*(T-b[i].first);\n\t\tif(now<big) ans+=b[i].second;\n\t\telse \n\t\t{\n\t\t\tnow-=1LL*b[i].second*(T-b[i].first);\n\t\t\tdouble l=0,r=b[i].second,mid,res=0;\n\t\t\tfor(int tms=1;tms<=60;++tms)\n\t\t\t{\n\t\t\t\tmid=(l+r)/2.0;\n\t\t\t\tif(now+mid*(T-b[i].first)<=big) res=mid,l=mid;\n\t\t\t\telse r=mid;\n\t\t\t}\n\t\t\treturn 0*printf(\"%.10lf\",ans+res); \n\t\t}\n\t}\n\tprintf(\"%.10lf\",ans);\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}