{"link": "https://codeforces.com//contest/691/problem/F", "problemId": "65091", "shortId": "691F", "contest_number": "691", "name": "F. Couple Cover", "statement": "Couple Cover, a wildly popular luck-based game, is about to begin! Two players must work together to construct a rectangle. A bag with  balls, each with an integer written on it, is placed on the table. The first player reaches in and grabs a ball randomly (all balls have equal probability of being chosen) \u2014 the number written on this ball is the rectangle's width in meters. This ball is not returned to the bag, and the second player reaches into the bag and grabs another ball \u2014 the number written on this ball is the rectangle's height in meters. If the area of the rectangle is greater than or equal some threshold  square meters, the players win. Otherwise, they lose.The organizers of the game are trying to select an appropriate value for  so that the probability of a couple winning is not too high and not too low, but they are slow at counting, so they have hired you to answer some questions for them. You are given a list of the numbers written on the balls, the organizers would like to know how many winning pairs of balls exist for different values of . Note that two pairs are different if either the first or the second ball is different between the two in pair, and two different balls with the same number are considered different.", "input": "The input begins with a single positive integer  in its own line (). The second line contains  positive integers \u2014 the -th number in this line is equal to  (), the number written on the -th ball. The next line contains an integer  (), the number of questions you are being asked. Then, the following line contains  positive integers \u2014 the -th number in this line is equal to the value of  () in the -th question you are being asked.", "output": "For each question, print the number of winning pairs of balls that exist for the given value of  in the separate line.", "tutorial": "Let's count the number of pairs with multiple less than . To get the number of not less pairs we should sumply subtract from  the number of less pairs. Let  be the number of values in  equal to  and  be the number of pairs from  with the multiple equal to . To calculate the values from  we can use something like Eratosthenes sieve: let's iterate over the first multiplier  and the multiple of it  and increment  by the value . After calculating the array  we should calculate the array of its partial sums and find the number of less pairs in  time.\n", "solution": "const int N = 3100300;\n\nint n, m;\nint a[N], p[N];\n\nbool read() {\n\tif (!(cin >> n)) return false;\n\tforn(i, n) assert(scanf(\"%d\", &a[i]) == 1);\n\tassert(cin >> m);\n\tforn(i, m) assert(scanf(\"%d\", &p[i]) == 1);\n\treturn true;\n}\n\nint cnt[N];\nli z[N];\n\nvoid solve() {\n\tmemset(cnt, 0, sizeof(cnt));\n\n\tforn(i, n) cnt[a[i]]++;\n\n\tfore(a, 1, N) {\n\t\tif (!cnt[a]) continue;\n\t\tfor (int b = a; b < N; b += a) {\n\t\t\tif (b / a != a) z[b] += li(cnt[a]) * cnt[b / a];\n\t\t\telse z[b] += li(cnt[a]) * (cnt[a] - 1);\n\t\t}\n\t}\n\n\tfore(i, 1, N) z[i] += z[i - 1];\n\n\tforn(i, m) {\n\t\tli ans = li(n) * (n - 1) - z[p[i] - 1];\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n}", "interactive": false, "noSolution": false, "noTutorial": false}