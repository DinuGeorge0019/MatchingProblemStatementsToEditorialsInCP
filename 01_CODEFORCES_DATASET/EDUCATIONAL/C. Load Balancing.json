{"link": "https://codeforces.com//contest/609/problem/C", "problemId": "43546", "shortId": "609C", "contest_number": "609", "name": "C. Load Balancing", "statement": "In the school computer room there are  servers which are responsible for processing several computing tasks. You know the number of scheduled tasks for each server: there are  tasks assigned to the -th server.In order to balance the load for each server, you want to reassign some tasks to make the difference between the most loaded server and the least loaded server as small as possible. In other words you want to minimize expression , where  is the most loaded server and  is the least loaded one.In one second you can reassign a single task. Thus in one second you can choose any pair of servers and move a single task from one server to another.Write a program to find the minimum number of seconds needed to balance the load of servers.", "input": "The first line contains positive number  () \u2014 the number of the servers.  The second line contains the sequence of non-negative integers  (), where  is the number of tasks assigned to the -th server.", "output": "Print the minimum number of seconds required to balance the load.", "tutorial": "Denote s \u2014 the sum of elements in array. If s is divisible by n then the balanced array consists of n elements . In this case the difference between maximal and minimal elements is 0. Easy to see that in any other case the answer is greater than 0. On the other hand the array consists of  numbers  and  numbers  is balanced with the difference equals to 1. Let's denote this balanced array b. To get array b let's sort array a in nonincreasing order and match element ai to element bi. Now we should increase some elements and decrease others. In one operation we can increase some element and decrease another, so the answer is .\nComplexity: O(nlogn).\n", "solution": "/*\nFollow the one evil masked in pride\nCharisma to lead, speeches laced with hate\nLeading the dense the bovine human herd\nInherently stupid, the fools deserve this fate\n\nWarfare begins, cities are ablaze\nTortured screams, skin turning black\nCarbonization, they will all burn\nMass execution, they will all die\n\nBurning the world and all of it's life\nThrowing all the people in a pit of fire\nWatching the sheep gathering to die\nFollowers in life, follow to the grave\n\nFollow the one evil masked in pride\nCharisma to lead, speeches laced with hate\nLeading the dense, the bovine human herd\nInherently stupid, the fools deserve this fate\n\nWarfare begins, cities are ablaze\nTortured screams, skin turning black\nCarbonization, they will all burn\nMass execution they will all die\n\nPile the bodies, set them aflame\nThe human race, sentenced to burn\nBurning flesh, miasma of their death\nCivilization, it is destroyed\n\nPits of corpses, unholy grave of war\nHanging victims, guilty of free thought\n\nWarfare begins, cities are ablaze\nTortured screams, skin turning black\nCarbonization, they will all burn\nMass execution, they will all die\n\nPile the bodies, set them aflame\nThe human race, sentenced to burn\nPile the bodies, set them aflame\nThe human race, sentenced to burn\n\nWar of fire shred their souls\nBurn in hell doomsday's toll\nFailed to see the trap they laid\nDemagogues lead them into the flames\n\nPile the bodies, set them aflame\nThe human race, sentenced to burn\nPile the bodies, set them aflame\nThe human race, sentenced to burn\n*/\n\n//#pragma comment(linker, \"/STACK:16777216\")\n#define _CRT_SECURE_NO_WARNINGS\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <complex>\n#include <math.h>\n#include <set>\n#include <vector>\n#include <map>  \n#include <queue>\n#include <stdio.h>\n#include <stack>\n#include <algorithm>\n#include <list>\n#include <ctime>\n#include <memory.h>\n#include <ctime> \n#include <assert.h>\n\n#define y0 sdkfaslhagaklsldk\n#define y1 aasdfasdfasdf\n#define yn askfhwqriuperikldjk\n#define j1 assdgsdgasghsf\n#define tm sdfjahlfasfh\n#define lr asgasgash\n\n#define eps 1e-8\n#define M_PI 3.141592653589793\n#define bs 1234567891\n#define bsize 512\n\nconst int N = 200000;\n\nusing namespace std;\n\nint n;\nint ar[N];\nint s;\nint full, rem;\nint need[N];\nint ans;\n\nint main(){\n\t//freopen(\"beavers.in\",\"r\",stdin);\n\t//freopen(\"beavers.out\",\"w\",stdout);\n\t//freopen(\"F:/in.txt\",\"r\",stdin);\n\t//freopen(\"F:/output.txt\",\"w\",stdout);\n\t//ios_base::sync_with_stdio(0);\n\t//cin.tie(0);\n\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> ar[i];\n\t\ts += ar[i];\n\t}\n\n\tsort(ar, ar + n);\n\n\tfull = s / n;\n\trem = s%n;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tneed[i] = full;\n\t}\n\tfor (int i = n - 1; i >= 0; --i)\n\t{\n\t\tif (rem == 0)\n\t\t\tcontinue;\n\t\tneed[i]++;\n\t\trem--;\n\t}\n\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (ar[i]>need[i])\n\t\t\tans += ar[i] - need[i];\n\t}\n\n\tcout << ans << endl;\n\n\tcin.get();\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}