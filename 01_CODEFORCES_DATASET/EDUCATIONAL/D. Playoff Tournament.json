{"link": "https://codeforces.com//contest/1535/problem/D", "problemId": "1005285", "shortId": "1535D", "contest_number": "1535", "name": "D. Playoff Tournament", "statement": " teams participate in a playoff tournament. The tournament consists of  games. They are held as follows: first of all, the teams are split into pairs: team  plays against team , team  plays against team  (exactly in this order), and so on (so,  games are played in that phase). When a team loses a game, it is eliminated, and each game results in elimination of one team (there are no ties). After that, only  teams remain. If only one team remains, it is declared the champion; otherwise,  games are played: in the first one of them, the winner of the game \" vs \" plays against the winner of the game \" vs \", then the winner of the game \" vs \" plays against the winner of the game \" vs \", and so on. This process repeats until only one team remains.For example, this picture describes the chronological order of games with :  Let the string  consisting of  characters describe the results of the games in chronological order as follows:  if  is , then the team with lower index wins the -th game;  if  is , then the team with greater index wins the -th game;  if  is , then the result of the -th game is unknown (any team could win this game). Let  be the number of  of the tournament described by the string . A team  is a  of the tournament if it is possible to replace every  with either  or  in such a way that team  is the champion.You are given the initial state of the string . You have to process  queries of the following form:    \u00a0\u2014 replace  with character , and print  as the result of the query. ", "input": "The first line contains one integer  (). The second line contains a string consisting of  characters\u00a0\u2014 the initial state of the string . Each character is either , , or . The third line contains one integer  ()\u00a0\u2014 the number of queries. Then  lines follow, the -th line contains an integer  and a character  (;  is either , , or ), describing the -th query.", "output": "For each query, print one integer\u00a0\u2014 .", "tutorial": "Denote  as the number of teams that can be winners in the -th game. The answer to the problem is .If the -th game is played between the winners of games  and  (), then:    if ;   if ;   if . So we can calculate all values of  for the initial string.Note that the result of no more than  other games depends on the result of any game. So, if we change , it will change no more than  values of , and we can recalculate all of them.For convenience, you can renumerate the games so that the playoff looks like a segment tree, i.\u2009e. the final has the number , the semifinals have numbers  and , etc.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  \n  int k;\n  cin >> k;\n  string s;\n  cin >> s;\n  reverse(s.begin(), s.end());\n  \n  int n = 1 << k;\n  vector<int> cnt(2 * n, 1);\n  \n  auto upd = [&](int i) {\n    return cnt[i] = (s[i] != '0' ? cnt[i * 2 + 1] : 0) + (s[i] != '1' ? cnt[i * 2 + 2] : 0);\n  };\n  \n  for (int i = n - 2; i >= 0; i--) {\n    upd(i);\n  }\n  \n  int q;\n  cin >> q;\n  while (q--) {\n    int p;\n    char c;\n    cin >> p >> c;\n    p = n - p - 1;\n    s[p] = c;\n    while (p) {\n      upd(p);\n      p = (p - 1) / 2;\n    }\n    cout << upd(0) << '\\n';\n  }\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}