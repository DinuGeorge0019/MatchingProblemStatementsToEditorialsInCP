{"link": "https://codeforces.com//contest/1187/problem/B", "problemId": "365118", "shortId": "1187B", "contest_number": "1187", "name": "B. Letters Shop", "statement": "The letters shop showcase is a string , consisting of  lowercase Latin letters. As the name tells, letters are sold in the shop.Letters are sold one by one from the leftmost to the rightmost. Any customer can only buy some prefix of letters from the string .There are  friends, the -th of them is named . Each of them is planning to estimate the following value: how many letters (the length of the shortest prefix) would s/he need to buy if s/he wanted to construct her/his name of bought letters. The name can be constructed if each letter is presented in the equal or greater amount.  For example, for =\"\" and =\"\"  letters have to be bought (\"\").  For example, for =\"\" and =\"\"  letters have to be bought (\"\").  For example, for =\"\" and =\"\"  letters have to be bought (\"\").  For example, for =\"\" and =\"\"  letters have to be bought (\"\").  For example, for =\"\" and =\"\" all  letters have to be bought (\"\"). It is guaranteed that every friend can construct her/his name using the letters from the string .Note that the values for friends are independent, friends are only estimating them but not actually buying the letters.", "input": "The first line contains one integer  () \u2014 the length of showcase string . The second line contains string , consisting of exactly  lowercase Latin letters. The third line contains one integer  () \u2014 the number of friends. The -th of the next  lines contains  () \u2014 the name of the -th friend. It is guaranteed that .", "output": "For each friend print the length of the shortest prefix of letters from  s/he would need to buy to be able to construct her/his name of them. The name can be constructed if each letter is presented in the equal or greater amount. It is guaranteed that every friend can construct her/his name using the letters from the string .", "tutorial": "Let's construct the answer letter by letter. How to get enough letters 'a' for the name? Surely, the taken letters will be the first 'a', the second 'a', up to -th 'a' in string , where  is the amount of letters 'a' in the name. It's never profitable to skip the letter you need.Do the same for all letters presented in the name. The answer will the maximum position of these last taken letters.How to obtain the -th letter fast? Well, just precalculate the list of positions for each letter and take the needed one from it.Overall complexity: .", "solution": "#include <bits/stdc++.h>\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n\nusing namespace std;\n\nint n, m;\nstring s, t;\nvector<int> pos[26];\n\nint main() {\n\tcin >> n >> s;\n\tforn(i, n)\n\t\tpos[s[i] - 'a'].push_back(i + 1);\n\t\n\tcin >> m;\n\tforn(i, m){\n\t\tcin >> t;\n\t\tvector<int> cnt(26);\n\t\tfor (auto &c : t)\n\t\t\t++cnt[c - 'a'];\n\t\tint ans = -1;\n\t\tforn(j, 26) if (cnt[j] > 0)\n\t\t\tans = max(ans, pos[j][cnt[j] - 1]);\n\t\tcout << ans << \"\\n\";\n\t}\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}