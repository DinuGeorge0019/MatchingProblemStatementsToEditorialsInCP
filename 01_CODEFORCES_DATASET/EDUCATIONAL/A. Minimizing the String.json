{"link": "https://codeforces.com//contest/1076/problem/A", "problemId": "253925", "shortId": "1076A", "contest_number": "1076", "name": "A. Minimizing the String", "statement": "You are given a string  consisting of  lowercase Latin letters.You have to remove  (i.e. zero or one) character of this string in such a way that the string you obtain will be lexicographically smallest among all strings that can be obtained using this operation.String  is  than string  if  and  or there exists a number  such that  and  and .For example, \"\" is smaller than \"\", \"\" is smaller than \"\", \"\" is smaller than \"\".", "input": "The first line of the input contains one integer  () \u2014 the length of . The second line of the input contains exactly  lowercase Latin letters \u2014 the string .", "output": "Print one string \u2014 the smallest possible lexicographically string that can be obtained by removing  character from the string .", "tutorial": "By the definition of lexicographical comparing we can see that if we can remove one character we always have to do it. Besides, we have to remove the character from the leftmost position  such that  and  or from the position  if there is no such .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tint pos = n - 1;\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tif (s[i] > s[i + 1]) {\n\t\t\tpos = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tcout << s.substr(0, pos) + s.substr(pos + 1) << endl;\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}