{"link": "https://codeforces.com//contest/1606/problem/B", "problemId": "1163613", "shortId": "1606B", "contest_number": "1606", "name": "B. Update Files", "statement": "Berland State University has received a new update for the operating system. Initially it is installed only on the -st computer.Update files should be copied to all  computers. The computers are not connected to the internet, so the only way to transfer update files from one computer to another is to copy them using a patch cable (a cable connecting two computers directly). Only one patch cable can be connected to a computer at a time. Thus, from any computer where the update files are installed, they can be copied to some other computer in exactly one hour.Your task is to find the minimum number of hours required to copy the update files to all  computers if there are only  patch cables in Berland State University.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. Each test case consists of a single line that contains two integers  and  () \u2014 the number of computers and the number of patch cables.", "output": "For each test case print one integer\u00a0\u2014 the minimum number of hours required to copy the update files to all  computers.", "tutorial": "Let  be the current number of computers with the update already installed (initially it is ). Then, in  hour, we can increase  by . From here we can see that the value of  will double for the first few hours, and then, when it becomes greater than , it will begin to increase by exactly .The process when the number of computers doubles can be modeled using a loop, because the number of doublings does not exceed . And after that, we have to increase the answer by  to take the number of additions of  into account.Note that computing  should be done without using fractional data types; to calculate  in integers, you should divide  by  using integer division (this will work provided that both  and  are non-negative, and ). If you use real numbers, this may cause precision issues.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing li = long long;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  int t;\n  cin >> t;\n  while (t--) {\n    li n, k;\n    cin >> n >> k;\n    li ans = 0, cur = 1;\n    while (cur < k) {\n      cur *= 2;\n      ++ans;\n    }\n    if (cur < n) ans += (n - cur + k - 1) / k;\n    cout << ans << '\\n';\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}