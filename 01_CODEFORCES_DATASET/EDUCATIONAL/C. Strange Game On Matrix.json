{"link": "https://codeforces.com//contest/873/problem/C", "problemId": "127821", "shortId": "873C", "contest_number": "873", "name": "C. Strange Game On Matrix", "statement": "Ivan is playing a strange game.He has a matrix  with  rows and  columns. Each element of the matrix is equal to either  or . Rows and columns are -indexed. Ivan can replace any number of ones in this matrix with zeroes. After that, his score in the game will be calculated as follows:  Initially Ivan's score is ;  In each column, Ivan will find the topmost  (that is, if the current column is , then he will find minimum  such that ). If there are no 's in the column, this column is skipped;  Ivan will look at the next  elements in this column (starting from the element he found) and count the number of 's among these elements. This number will be added to his score. Of course, Ivan wants to maximize his score in this strange game. Also he doesn't want to change many elements, so he will replace the minimum possible number of ones with zeroes. Help him to determine the maximum possible score he can get and the minimum possible number of replacements required to achieve that score.", "input": "The first line contains three integer numbers ,  and  (, ). Then  lines follow, -th of them contains  integer numbers \u2014 the elements of -th row of matrix . Each number is either  or .", "output": "Print two numbers: the maximum possible score Ivan can get and the minimum number of replacements required to get this score.", "tutorial": "Let's notice that this task can be solved independently for each column, total result will be the sum of results for columns. The ones you should remove will always be the top ones in column. It makes no profit to erase some one while there are still ones on top of it, score won't become higher.Go from the top of the column to the bottom and recalculate the score after removing every one. Take the first position of the maximal score and update global answer with it.Overall complexity: .  can be achieved with partial sums.", "solution": "#include <bits/stdc++.h>\n\n#define all(a) (a).begin(), (a).end()\n#define sz(a) (int)(a).size()\n#define pb push_back\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef double ld;\ntypedef pair<ll, ll> pll;\n\nint main() {\n\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\n\t//ifstream cin(\"input.txt\");\n\t//ofstream cout(\"output.txt\");\n\n\tint n, m, k;\n\tcin >> n >> m >> k;\n\n\tvector<vector<int> > a(n, vector<int>(m));\n\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tcin >> a[i][j];\n\t\t}\n\t}\n\n\tint sum = 0, cnt = 0;\n\n\tfor (int j = 0; j < m; ++j) {\n\t\tvector<int> vct;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tif (!a[i][j]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint c = 0;\n\t\t\tfor (int z = i; z < n && z - i + 1 <= k; ++z) {\n\t\t\t\tif (a[z][j]) {\n\t\t\t\t\t++c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvct.pb(c);\n\t\t}\n\t\tif (vct.empty()) {\n\t\t\tcontinue;\n\t\t}\n\t\tint best = 0;\n\t\tfor (int z = 0; z < sz(vct); ++z) {\n\t\t\tif (vct[z] > vct[best]) {\n\t\t\t\tbest = z;\n\t\t\t}\n\t\t}\n\t\t//cout << j << \" \" << vct[best] << \"\\n\";\n\t\tsum += vct[best];\n\t\tcnt += best;\n\t}\n\n\tcout << sum << \" \" << cnt << \"\\n\";\n\n}", "interactive": false, "noSolution": false, "noTutorial": false}