{"link": "https://codeforces.com//contest/1728/problem/A", "problemId": "1534222", "shortId": "1728A", "contest_number": "1728", "name": "A. Colored Balls  Revisited", "statement": "There is a bag, containing colored balls. There are  different colors of balls, numbered from  to . There are  balls of color  in the bag. The total amount of balls in the bag is odd (e.\u2009g.  is odd).In one move, you can choose two balls  and take them out of the bag.At some point, all the remaining balls in the bag will have the same color. That's when you can't make moves anymore.Find any possible color of the remaining balls.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. The first line of each testcase contains a single integer  ()\u00a0\u2014 the number of colors. The second line contains  integers  ()\u00a0\u2014 the amount of balls of each color in the bag. The total amount of balls in the bag is odd (e.\u2009g.  is odd).", "output": "For each testcase, print a single integer\u00a0\u2014 any possible color of the remaining balls, after you made some moves and can't make moves anymore.", "tutorial": "Let's prove that the color with the maximum value of  is one of the possible answers. Let the color  have the maximum value of ; if there are several such colors, choose any of them. Let's keep taking the balls of two different colors out of the bag without touching the balls of color  for as long as possible.After such operations, two cases exist. In one case, only balls of color  are left\u00a0\u2014 then everything is fine. In other case, there are balls of color  and some color  (let  be the remaining number of balls of this color). Since initially  was one of the maximums, . However, the number of remaining balls is odd, which means  and . Therefore, we can keep taking the balls of colors  and  until only balls of color  are left.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int &x : a) cin >> x;\n    cout << max_element(a.begin(), a.end()) - a.begin() + 1 << '\\n';\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}