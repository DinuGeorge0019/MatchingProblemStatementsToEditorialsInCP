{"link": "https://codeforces.com//contest/1096/problem/B", "problemId": "275409", "shortId": "1096B", "contest_number": "1096", "name": "B. Substring Removal", "statement": "You are given a string  of length  consisting only of lowercase Latin letters.A substring of a string is a contiguous subsequence of that string. So, string \"\" is substring of string \"\", but string \"\" is not.Your task is to calculate the number of ways to remove  one substring from this string in such a way that  remaining characters are  (the number of distinct characters either zero or one).It is guaranteed that there is  different characters in .Note that you  remove the whole string and it is correct. Also note that you should .Since the answer can be rather large (not very large though) print it modulo .", "input": "The first line of the input contains one integer  () \u2014 the length of the string . The second line of the input contains the string  of length  consisting only of lowercase Latin letters. It is guaranteed that there is  different characters in .", "output": "Print one integer \u2014 the number of ways modulo  to remove  one substring from  in such way that  remaining characters are .", "tutorial": "Firstly, let's calculate the length of the prefix of equal letters (let it be ) and the length of the suffix of equal letters (let it be ). It can be done with two cycles with breaks. It is obvious that this prefix and suffix wouldn't overlap.Then let's consider two cases: the first one is when  and the second one is when .In the first case we can only remain either prefix or suffix of  consisting only of equal letters. Then the answer is  (because we can remain from  to  letters on the prefix, from  to  on the suffix or empty string).In the second case we can remain from  to  letters on the prefix and from  to  letters on the suffix. But now because  we can combine these ways, so the answer is .And the bonus (this case is not belong to the given problem): if all letters in the string are equal then then answer is  because we can choose any substring of  of length at least  and any substring of length .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\tint cntl = 0, cntr = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (s[i] == s[0]) {\n\t\t\t++cntl;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = n - 1; i >= 0; --i) {\n\t\tif (s[i] == s[n - 1]) {\n\t\t\t++cntr;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (s[0] == s[n - 1]) {\n\t\tcout << ((cntl + 1) * 1ll * (cntr + 1)) % 998244353 << endl;\n\t} else {\n\t\tcout << (cntl + cntr + 1) % 998244353;\n\t}\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}