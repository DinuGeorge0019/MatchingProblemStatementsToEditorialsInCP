{"link": "https://codeforces.com//contest/1051/problem/A", "problemId": "222357", "shortId": "1051A", "contest_number": "1051", "name": "A. Vasya And Password", "statement": "Vasya came up with a password to register for  \u2014 a string . The password in  should be a string, consisting of lowercase and uppercase Latin letters and digits.But since  takes care of the security of its users, user passwords must contain at least one digit, at least one uppercase Latin letter and at least one lowercase Latin letter. For example, the passwords \"\", \"\" and \"\" are valid, and the passwords \"\", \"\" and \"\" are not. A substring of string  is a string .  is the length of the substring. Note that the empty string is also considered a substring of , it has the length .Vasya's password, however, may come too weak for the security settings of . He likes his password, so he wants to replace some its substring with another string of the same length in order to satisfy the above conditions. This operation should be performed  once, and .", "input": "The first line contains a single integer  () \u2014 the number of testcases. Each of the next  lines contains the initial password , consisting of lowercase and uppercase Latin letters and digits. .", "output": "For each testcase print a renewed password, which corresponds to given conditions.  The length of the replaced substring is calculated as following: write down all the changed positions. If there are none, then the length is . Otherwise the length is the difference between the first and the last changed position plus one. For example, the length of the changed substring between the passwords \"\"  \"\" is , because the changed positions are  and , thus .  If there are several suitable passwords \u2014 output any of them.", "tutorial": "There are just a few general cases in the task to consider:    If the password  is already valid, nothing has to be changed, just print .   Try to change exactly one character, iterate over all positions in  and all three options for character (any digit, any lowercase or uppercase Latin letter). After the replacement the string is checked for the validity and printed if it turned out to be valid.   We weren't able to replace a substring of length 0 or 1, then the answer is at least 2. We can obtain it in a following manner: replace the first two characters to \"\" if the third character is an uppercase Latin letter, to \"\" if the third character is a lowercase Latin letter and to \"\" if the third character is a digit. ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring s;\n\nbool ok(string t){\n    int msk = 0;\n    \n    for(int i = 0; i < int(t.size()); ++i){\n\t    if(isupper(t[i])) msk |= 1;\n\t    if(islower(t[i])) msk |= 2;\n\t    if(isdigit(t[i])) msk |= 4;\n\t}\n\t\n\treturn msk == 7;\n}\n\nint main() {\n\t//freopen(\"input.txt\", \"r\", stdin);\n\tint t;\n\tcin >> t;\n\tfor(int i = 0; i < t; ++i){\n    \tcin >> s;\n    \tif(ok(s)){\n    \t    cout << s << endl;\n    \t    continue;\n    \t}\n    \tbool fnd = false;\n        for(int i = 0; i < int(s.size()); ++i){\n            string t = s;\n            \n            t[i] = '1';\n            if(ok(t)){\n    \t        cout << t << endl;\n    \t        fnd = true;\n    \t        break;\n    \t    }\n            t[i] = 'a';\n            if(ok(t)){\n    \t        cout << t << endl;\n    \t        fnd = true;\n    \t        break;\n    \t    }\n    \t    t[i] = 'A';\n            if(ok(t)){\n    \t        cout << t << endl;\n    \t        fnd = true;\n    \t        break;\n    \t    }\n        }\n    \t\n    \tif(fnd) continue;\n    \t\n    \tif(isupper(s[2])){\n    \t    s[0] = 'a';\n    \t    s[1] = '1';\n    \t    cout << s << endl;\n    \t    continue;\n    \t}\n    \tif(islower(s[2])){\n    \t    s[0] = 'A';\n    \t    s[1] = '1';\n    \t    cout << s << endl;\n    \t    continue;\n    \t}\n    \tif(isdigit(s[2])){\n    \t    s[0] = 'a';\n    \t    s[1] = 'A';\n    \t    cout << s << endl;\n    \t    continue;\n    \t}\n\t}\n\treturn  0;\n}\n\n", "interactive": false, "noSolution": false, "noTutorial": false}