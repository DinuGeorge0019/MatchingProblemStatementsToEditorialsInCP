{"link": "https://codeforces.com//contest/1651/problem/B", "problemId": "1324097", "shortId": "1651B", "contest_number": "1651", "name": "B. Prove Him Wrong", "statement": "Recently, your friend discovered one special operation on an integer array :   Choose two indices  and  ();  Set . After playing with this operation for a while, he came to the next conclusion:   For every array  of  integers, where , you can find a pair of indices  such that the total sum of  will  after performing the operation. This statement sounds fishy to you, so you want to find a counterexample for a given integer . Can you find such counterexample and prove him wrong?In other words, find an array  consisting of  integers  () such that for all pairs of indices  performing the operation won't decrease the total sum (it will increase or not change the sum).", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. Then  test cases follow. The first and only line of each test case contains a single integer  ()\u00a0\u2014 the length of array .", "output": "For each test case, if there is no counterexample array  of size , print . Otherwise, print  followed by the array  itself (). If there are multiple counterexamples, print any.", "tutorial": "Suppose the initial sum of  is equal to . If we perform the operation, the new sum will be equal to . We want the sum not to decrease, or . If , we will get:     If  we'll get  analogically.In other words, array  you need (if sorted) will have ,  and so on. And one of the variants (and, obviously, an optimal one) is just .As a result, since , we just need to check: if  then we found an answer, otherwise there is no counterexample.", "solution": "for _ in range(int(input())):\n\tn = int(input())\n\tif 3**(n-1) > 10**9:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tprint(*[3**x for x in range(n)])", "interactive": false, "noSolution": false, "noTutorial": false}