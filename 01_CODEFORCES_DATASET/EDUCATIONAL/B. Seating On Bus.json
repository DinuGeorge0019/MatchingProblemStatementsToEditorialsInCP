{"link": "https://codeforces.com//contest/660/problem/B", "problemId": "54411", "shortId": "660B", "contest_number": "660", "name": "B. Seating On Bus", "statement": "Consider  rows of the seats in a bus.  rows of the seats on the left and  rows of the seats on the right. Each row can be filled by two people. So the total capacity of the bus is .Consider that  () people occupy the seats in the bus. The passengers entering the bus are numbered from  to  (in the order of their entering the bus). The pattern of the seat occupation is as below:-st row left window seat, -st row right window seat, -nd row left window seat, -nd row right window seat, ... , -th row left window seat, -th row right window seat.After occupying all the window seats (for ) the non-window seats are occupied:-st row left non-window seat, -st row right non-window seat, ... , -th row left non-window seat, -th row right non-window seat.All the passengers go to a single final destination. In the final destination, the passengers get off in the given order.-st row left non-window seat, -st row left window seat, -st row right non-window seat, -st row right window seat, ... , -th row left non-window seat, -th row left window seat, -th row right non-window seat, -th row right window seat.   You are given the values  and . Output  numbers from  to , the order in which the passengers will get off the bus.", "input": "The only line contains two integers,  and  () \u2014 the number of pairs of rows and the number of passengers.", "output": "Print  distinct integers from  to  \u2014 the order in which the passengers will get off the bus.", "tutorial": "In this problem you should simply do what was written in the problem statement. There are no tricks.\n", "solution": "int n, m;\n\nbool read() {\n\treturn !!(cin >> n >> m);\n}\n\nconst int N = 111;\n\nint a[N][4];\n\nvoid solve() {\n\tforn(i, n) {\n\t\ta[i][0] = 2 * i;\n\t\ta[i][1] = 2 * (n + i);\n\t\ta[i][2] = 2 * (n + i) + 1;\n\t\ta[i][3] = 2 * i + 1;\n\t}\n\n\tvector<int> ans;\n\tforn(i, n) {\n\t\tans.pb(a[i][1]);\n\t\tans.pb(a[i][0]);\n\t\tans.pb(a[i][2]);\n\t\tans.pb(a[i][3]);\n\t}\n\n\tnfor(i, sz(ans)) // inverse order\n\t\tif (ans[i] >= m)\n\t\t\tans.erase(ans.begin() + i);\n\n\tforn(i, m) {\n\t\tif (i) putchar(' ');\n\t\tprintf(\"%d\", ans[i] + 1);\n\t}\n\tputs(\"\");\n}", "interactive": false, "noSolution": false, "noTutorial": false}