{"link": "https://codeforces.com//contest/976/problem/E", "problemId": "179789", "shortId": "976E", "contest_number": "976", "name": "E. Well played ", "statement": "Recently Max has got himself into popular CCG \"BrainStone\". As \"BrainStone\" is a pretty intellectual game, Max has to solve numerous hard problems during the gameplay. Here is one of them:Max owns  creatures, -th of them can be described with two numbers \u2014 its health  and its damage . Max also has two types of spells in stock:  Doubles health of the creature ( := );  Assigns value of  of the creature to its  ( := ). Spell of first type can be used no more than  times in total, of the second type \u2014 no more than  times in total. Spell can be used on a certain creature multiple times. Spells can be used in arbitrary order. It isn't necessary to use all the spells.Max is really busy preparing for his final exams, so he asks you to determine what is the maximal total damage of all creatures he can achieve if he uses spells in most optimal way.", "input": "The first line contains three integers , ,  (, , ) \u2014 the number of creatures, spells of the first type and spells of the second type, respectively. The -th of the next  lines contain two number  and  () \u2014 description of the -th creature.", "output": "Print single integer \u2014 maximum total damage creatures can deal.", "tutorial": "At first let's prove that in optimal solution all spells of 1-st type are assigned to single creature. By contradiction: let's optimal answer contains indices  where  and . If  using spells of 1-st type is meaningless. Otherwise, if (in general case)  then . Contradiction.So, we can check for each creature maximal damage with its health multiplied.At second, if we sort all creatures in order by decreasing , using  spells on first  creatures gives best answer . So, calculating answer for chosen creature invokes 2 cases:   if chosen creature is belong to first  creatures, then subtract from  its contribution, calculate new value and add it to ;  otherwise, we need one spell of second type, which is optimal to take from -th creature, so along with replacing old value of chosen one we need to replace in  contribution of -th creature. Result complexity is ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 200 * 1000 + 9;\n\nint n, a, b;\nint hp[N], dmg[N];\n\nbool cmp(int i, int j){\n\tif(hp[i] - dmg[i] != hp[j] - dmg[j])\n\t\treturn hp[i] - dmg[i] > hp[j] - dmg[j];\n\treturn i < j;\n}\n\nint get(int id){\n\treturn  hp[id] > dmg[id]? hp[id] : dmg[id];\n}\n\nint main(){\n\tscanf(\"%d %d %d\", &n, &a, &b);\n\tfor(int i = 0; i < n; ++i)\n\t\tscanf(\"%d %d\", hp + i, dmg + i);\n\t\n\tb = min(b, n);\n\tvector <int> p(n);\n\tfor(int i = 0; i < n; ++i) p[i] = i;\n\tsort(p.begin(), p.end(), cmp);\n\tlong long res = 0, sum = 0;\n\tfor(int i = 0; i < n; ++i){\n\t\tint id = p[i];\n\t\tif(i < b) sum += get(id);\n\t\telse sum += dmg[id];\n\t}\n\tres = sum; \n\n\tif(b == 0){\n\t\tprintf(\"%lld\\n\", res);\n\t\treturn 0;\n\t}\n\t\n\tlong long x = (1LL << a);\n\tfor(int i = 0; i < n; ++i){\n\t\tint id = p[i];\n\t\tlong long nres = sum;\n\t\tif(i < b){ \n\t\t\tnres -= get(id);\n\t\t\tnres += hp[id] * x;\n\t\t\tres = max(res, nres);\n\t\t}\n\t\telse{\n\t\t\tnres -= dmg[id];\n\t\t\tnres += hp[id] * x;\t\t\t\n\t\t\tint id2 = p[b - 1];\n\t\t\tnres -= get(id2);\n\t\t\tnres += dmg[id2];\n\t\t\tres = max(res, nres);\n\t\t\t\n\t\t}\t\t\n\t}\n\t\n\tprintf(\"%lld\\n\", res);\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}