{"link": "https://codeforces.com//contest/1380/problem/A", "problemId": "670983", "shortId": "1380A", "contest_number": "1380", "name": "A. Three Indices", "statement": "You are given a permutation . Recall that sequence of  integers is called a  if it contains all integers from  to  exactly once.Find three indices ,  and  such that:   ;   and .  Or say that there are no such indices.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. Next  lines contain test cases\u00a0\u2014 two lines per test case. The first line of each test case contains the single integer  ()\u00a0\u2014 the length of the permutation . The second line contains  integers  (;  if )\u00a0\u2014 the permutation .", "output": "For each test case:    if there are such indices ,  and , print  (case insensitive) and the indices themselves;  if there are no such indices, print  (case insensitive).  If there are multiple valid triples of indices, print any of them.", "tutorial": "A solution in : iterate on , check that there exists an element lower than  to the left of it, and check that there exists an element lower than  to the right of it. Can be optimized to  with prefix/suffix minima.A solution in : note that if there is some answer, we can find an index  such that  and  (if there is no such triple, the array descends to some point and ascends after that, so there is no answer). So we only have to check  consecutive triples.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1000;\n\nint n;\nint a[N];\n\nvoid solve() {\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i)\n\t\tcin >> a[i];\n\tfor (int i = 1; i < n - 1; ++i) {\n\t\tif (a[i] > a[i - 1] && a[i] > a[i + 1]) {\n\t\t\tcout << \"YES\" << endl;\n\t\t\tcout << i << ' ' << i + 1 << ' ' << i + 2 << endl;\n\t\t\treturn;\n\t\t}\n\t}\n\tcout << \"NO\" << endl;\n}\n\nint main() {\n\tint T;\n\tcin >> T;\n\twhile (T--)\n\t\tsolve();\n}", "interactive": false, "noSolution": false, "noTutorial": false}