{"link": "https://codeforces.com//contest/1140/problem/C", "problemId": "317586", "shortId": "1140C", "contest_number": "1140", "name": "C. Playlist", "statement": "You have a playlist consisting of  songs. The -th song is characterized by two numbers  and  \u2014 its length and beauty respectively. The pleasure of listening to set of songs is equal to the total length of the songs in the set multiplied by the minimum beauty among them. For example, the pleasure of listening to a set of  songs having lengths  and beauty values  is equal to .You need to choose   songs from your playlist, so the pleasure of listening to the set of these songs them is maximum possible.", "input": "The first line contains two integers  and  () \u2013 the number of songs in the playlist and the maximum number of songs you can choose, respectively. Each of the next  lines contains two integers  and  () \u2014 the length and beauty of -th song.", "output": "Print one integer \u2014 the maximum pleasure you can get.", "tutorial": "If we fix a song with minimum beauty in the answer, then we need to take the remaining  songs (or less) among those having beauty greater than or equal to the beauty of the fixed song \u2014 and the longer they are, the better.So, we will iterate on the songs in the order of decreasing their beauty, and for the current song we will maintain  longest songs having greater or similar beauty. This can be done using some standard containers:  in  or  in . ", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 300009;\n\nint n, k;\npair<int, int> a[N];\n\nint main() {\n\tcin >> n >> k;\n\t\n\tfor(int i = 0; i < n; ++i)\n\t\tcin >> a[i].second >> a[i].first;\n\n\tsort(a, a + n);\n\tlong long res = 0;\n\tlong long sum = 0;\n\tset<pair<int, int> > s;\n\tfor(int i = n - 1; i >= 0; --i){\n\t\ts.insert(make_pair(a[i].second, i));\n\t\tsum += a[i].second;\n\t\twhile(s.size() > k){\n\t\t\tauto it = s.begin();\n\t\t\tsum -= it->first;\n\t\t\ts.erase(it);\n\t\t}\n\n\t\tres = max(res, sum * a[i].first);\n\t}\n\n\tcout << res << endl;\n\treturn 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}