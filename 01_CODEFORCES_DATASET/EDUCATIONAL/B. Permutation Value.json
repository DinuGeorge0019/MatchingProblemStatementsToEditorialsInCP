{"link": "https://codeforces.com//contest/1743/problem/B", "problemId": "1590317", "shortId": "1743B", "contest_number": "1743", "name": "B. Permutation Value", "statement": "You are given an integer . You have to construct a permutation of size .A  is an array where each integer from  to  (where  is the size of permutation) occurs exactly once. For example,  is a permutation of size ;  is a permutation of size ;  is not a permutation (the integer  is absent),  is not a permutation (the integer  appears twice).A  of a permutation is a contiguous subsequence of that permutation. For example, the permutation  has  subsegments: , , , , , , , ,  and .The  of the permutation is the number of its subsegments which are also permutations. For example, the value of  is  since the subsegments ,  and  are permutations.You have to construct a permutation of size  with  among all permutations of size .", "input": "The first line contains one integer  () \u2014 the number of test cases. Then,  lines follow. The -th of them contains one integer  () representing the -th test case.", "output": "For each test case, print  integers \u2014 the permutation of size  with . If there are multiple such permutations, print any of them.", "tutorial": "The subsegment , as well as the whole permutation, will always be a permutation, so the value is at least . Let's try to find a way to generate a permutation of  elements with value equal to .Every permutation must contain the number . Let's try to construct the answer in such a way that if a subsegment contains the number , then it also contains the number  (if it is so, it can only be a permutation if it contains all  numbers). If we begin our permutation with the numbers  and , we will reach our goal: the only subsegment which does not contain  but contains  is , and the only subsegment which contains  and also a permutation is the whole permutation itself. So, any permutation that begins with  can be the answer.", "solution": "#include <bits/stdc++.h>\n \nusing namespace std;\n\nvoid solve() \n{\n    int n;\n    cin >> n;\n    cout << 1;\n    for(int i = n; i >= 2; i--)\n        cout << \" \" << i;\n    cout << endl;\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    for(int i = 0; i < t; i++)\n        solve();\n}", "interactive": false, "noSolution": false, "noTutorial": false}