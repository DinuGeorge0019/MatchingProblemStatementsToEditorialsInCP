{"link": "https://codeforces.com//contest/1620/problem/A", "problemId": "1233288", "shortId": "1620A", "contest_number": "1620", "name": "A. Equal or Not Equal", "statement": "You had  positive integers  arranged . For each pair of neighboring numbers ( and ,  and , ...,  and , and  and ), you wrote down: are the numbers in the pair equal or not.Unfortunately, you've lost a piece of paper with the array . Moreover, you are afraid that even information about equality of neighboring elements may be inconsistent. So, you are wondering: is there any array  which is consistent with information you have about equality or non-equality of corresponding pairs?", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. Next  cases follow. The first and only line of each test case contains a non-empty string  consisting of characters  and/or . The length of  is equal to the size of array  and . For each  from  to :    if   then  is equal to  ( for );  if   then  is not equal to  ( for ). ", "output": "For each test case, print  if it's possible to choose array  that are consistent with information from  you know. Otherwise, print . It can be proved, that if there exists some array , then there exists an array  of positive integers with values less or equal to .", "tutorial": "Let's look at a group of : it's easy to see that each such a group is equal to the same number. Now, let's look at how these groups are distributed on the circle:  If there are no  then all  are just equal to each other. It's okay.  If there is exactly one  then from one side, all of them are still in one group, so they should be equal, but from the other side, one pair should have different values. It's contradiction.  If there are more than one  then all numbers are divided in several groups with different values. It's okay. As a result, array  exists as long as the number of  isn't .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    string s;\n    cin >> s;\n    cout << (count(s.begin(), s.end(), 'N') == 1 ? \"NO\\n\" : \"YES\\n\");\n  }\n} ", "interactive": false, "noSolution": false, "noTutorial": false}