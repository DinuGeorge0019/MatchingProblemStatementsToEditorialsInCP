{"link": "https://codeforces.com//contest/1073/problem/B", "problemId": "243297", "shortId": "1073B", "contest_number": "1073", "name": "B. Vasya and Books", "statement": "Vasya has got  books, numbered from  to , arranged in a stack. The topmost book has number , the next one \u2014 , and so on. The book at the bottom of the stack has number . .Vasya wants to move all the books to his backpack in  steps. During -th step he wants to move the book number  into his backpack. If the book with number  is in the stack, he takes this book and all the books  the book , and puts them into the backpack; otherwise he does nothing and begins the next step. For example, if books are arranged in the order  (book  is the topmost), and Vasya moves the books in the order , then during the first step he will move two books ( and ), during the second step he will do nothing (since book  is already in the backpack), and during the third step \u2014 one book (the book number ). Help Vasya! Tell him the number of books he will put into his backpack during each step.", "input": "The first line contains one integer  \u2014 the number of books in the stack. The second line contains  integers  denoting the stack of books. The third line contains  integers  denoting the steps Vasya is going to perform. All numbers  are distinct, the same goes for .", "output": "Print  integers. The -th of them should be equal to the number of books Vasya moves to his backpack during the -th step.", "tutorial": "Let's maintain the pointer  to the topmost non-deleted book and whether each book whether is removed from the stack or not. Initially, all books are in a stack, and  is 0 (if we store the array 0-indexed). We will process the array  in the order . If the current book  is removed from the stack, then the answer for it is zero. Otherwise, we will increment the pointer  until the equality  is satisfied, while marking all the intermediate books in the array . After that, the answer for the book  will be the number of marked books in the  array (including itself).Since the pointer  shifts  times at total, we get a solution with an  complexity.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = int(2e5) + 9;\n\nint n;\nint a[N];\nint b[N];\nbool u[N];\n\nint main() {\n//\tfreopen(\"input.txt\", \"r\", stdin);\n\tscanf(\"%d\", &n);\n    for(int i = 0; i < n; ++i) {\n    \tscanf(\"%d\", a + i);\n    }\n    for(int i = 0; i < n; ++i){\n    \tscanf(\"%d\", b + i);\n    }\n\t\n\tint pos = 0;\n\tfor(int i = 0; i < n; ++i){\n\t\tint x = b[i];\n\t\tif(u[x]){\n\t\t\tprintf(\"0 \");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tint cnt = 0;\n\t\twhile(true){\n\t\t\t++cnt;\n\t\t\tu[a[pos]] = true;\n\t\t\tif(a[pos] == x) break;\n\t\t\t++pos;\n\t\t} \n\t\t\n\t\t++pos;\n\t\tprintf(\"%d \", cnt);\n\t}    \n\t\n\tputs(\"\");\n    return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}