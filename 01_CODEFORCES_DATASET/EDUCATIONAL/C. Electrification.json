{"link": "https://codeforces.com//contest/1175/problem/C", "problemId": "354215", "shortId": "1175C", "contest_number": "1175", "name": "C. Electrification", "statement": "At first, there was a legend related to the name of the problem, but now it's just a formal statement.You are given  points  on the  axis. Now you are asked to find such an integer point  on  axis that  is minimal possible.The function  can be described in the following way:   form a list of distances  where  (distance between  and );  sort list  in non-descending order;  take  as a result. If there are multiple optimal answers you can print any of them.", "input": "The first line contains single integer  () \u2014 number of queries. Next  lines contain descriptions of queries. All queries are independent.  The first line of each query contains two integers ,  (, ) \u2014 the number of points and constant . The second line contains  integers  () \u2014 points in ascending order. It's guaranteed that  doesn't exceed .", "output": "Print  integers \u2014 corresponding points  which have minimal possible value of . If there are multiple answers you can print any of them.", "tutorial": "First observation:  closest points to any point  form a contiguous subsegment , so .Second observation: for any contiguous subsegment  all points  this subsegment closest to, also form a contiguous segment . And, because of the nature of , value of  is minimal in borders  and .So, all we need is to check all  and . But what is a value of ? It's such point, that , but . So, it's just in the middle of segment . Note, that  and , so it's enough to check only -s.In result, all we need is to find minimal possible value  and resulting .", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define fore(i, l, r) for(int i = int(l); i < int(r); i++)\n#define sz(a) int((a).size())\n\nint n, k;\nvector<int> a;\n\ninline bool read() {\n\tif(!(cin >> n >> k))\n\t\treturn false;\n\ta.resize(n);\n\tfore(i, 0, n)\n\t\tcin >> a[i];\n\treturn true;\n}\n\ninline void solve() {\n\tpair<int, int> ans = {int(1e9) + 7, -1};\n\tfore(i, 0, n - k) {\n\t\tint dist = a[i + k] - a[i];\n\t\tans = min(ans, make_pair(dist, a[i] + dist / 2));\n\t}\n\t\n\tcout << ans.second << endl;\n}\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tint tt = clock();\n#endif\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0), cout.tie(0);\n\tcout << fixed << setprecision(15);\n\t\n\tint tc; cin >> tc;\n\t\n\twhile(tc--) {\n\t    read();\n\t\tsolve();\n\t\t\n#ifdef _DEBUG\n\t\tcerr << \"TIME = \" << clock() - tt << endl;\n\t\ttt = clock();\n#endif\n\t}\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}