{"link": "https://codeforces.com//contest/652/problem/B", "problemId": "52869", "shortId": "652B", "contest_number": "652", "name": "B. z-sort", "statement": "A student of -school found a kind of sorting called -sort. The array  with  elements are -sorted if two conditions hold:   for all even ,   for all odd . For example the arrays  and  are -sorted while the array  isn\u2019t -sorted.Can you make the array -sorted?", "input": "The first line contains a single integer  () \u2014 the number of elements in the array . The second line contains  integers  () \u2014 the elements of the array .", "output": "If it's possible to make the array  -sorted print  space separated integers  \u2014 the elements after -sort. Otherwise print the only word \"\".", "tutorial": "Easy to see that we can -sort any array . Let  be the number of even positions in . We can assign to those positions  maximal elements and distribute other  elements to odd positions. Obviously the resulting array is -sorted.\n", "solution": "const int N = 1010;\n\nint n, a[N];\n\nbool read() {\n\tif (!(cin >> n)) return false;\n\tforn(i, n) assert(scanf(\"%d\", &a[i]) == 1);\n\treturn true;\n}\n\nint ans[N];\n\nvoid solve() {\n\tsort(a, a + n);\n\n\tint p = 0, q = n - 1;\n\tforn(i, n)\n\t\tif (i & 1) ans[i] = a[q--];\n\t\telse ans[i] = a[p++];\n\tassert(q + 1 == p);\n\n\tforn(i, n) {\n\t\tif (i) putchar(' ');\n\t\tprintf(\"%d\", ans[i]);\n\t}\n\tputs(\"\");\n}", "interactive": false, "noSolution": false, "noTutorial": false}