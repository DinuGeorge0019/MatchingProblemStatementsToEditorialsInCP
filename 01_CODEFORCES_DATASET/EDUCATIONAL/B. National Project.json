{"link": "https://codeforces.com//contest/1303/problem/B", "problemId": "538601", "shortId": "1303B", "contest_number": "1303", "name": "B. National Project", "statement": "Your company was appointed to lay new asphalt on the highway of length . You know that every day you can either repair one unit of the highway (lay new asphalt over one unit of the highway) or skip repairing.Skipping the repair is necessary because of the climate. The climate in your region is periodical: there are  days when the weather is good and if you lay new asphalt these days it becomes high-quality pavement; after that, the weather during the next  days is bad, and if you lay new asphalt these days it becomes low-quality pavement; again  good days,  bad days and so on.You can be sure that you start repairing at the start of a good season, in other words, days  are good.You don't really care about the quality of the highway, you just want to make sure that  will have high-quality pavement. For example, if the  then at least  units of the highway should have high quality; if  then at least  units should have high quality.What is the minimum number of days is needed to finish the repair of ?", "input": "The first line contains a single integer  () \u2014 the number of test cases. Next  lines contain test cases \u2014 one per line. Each line contains three integers ,  and  () \u2014 the length of the highway and the number of good and bad days respectively.", "output": "Print  integers \u2014 one per test case. For each test case, print the minimum number of days required to repair .", "tutorial": "There are two conditions that should be met according to the statement. On the one hand, we should repair the whole highway, so we must spend at least  days to do it. On the other hand, at least half of it should have high-quality pavement or at least  units should be laid at good days.How to calculate the minimum number of days (name it as ) for the second condition to meet? Note that the first  days can be represented as several (maybe zero) blocks of  days, where exactly  days in each block are good and some remaining days . The  because  will not be minimum otherwise.There are plenty of ways to calculate . One of them is the following: Firstly, let's calculate the number of  cycles we need: . Now, if  we just add it (since it's exactly the ) or . But if  we added to  last  block and should subtract it or .The answer is .", "solution": "fun main() {\n    val t = readLine()!!.toInt()\n    for (tc in 1..t) {\n        val (n, g, b) = readLine()!!.split(' ').map { it.toLong() }\n        \n        val needG = (n + 1) / 2\n        var totalG = needG / g * (b + g)\n        totalG += if (needG % g == 0L) -b else needG % g\n        println(maxOf(n, totalG))\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}