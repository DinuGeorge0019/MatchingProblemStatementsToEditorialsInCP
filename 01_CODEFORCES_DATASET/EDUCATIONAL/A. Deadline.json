{"link": "https://codeforces.com//contest/1288/problem/A", "problemId": "516087", "shortId": "1288A", "contest_number": "1288", "name": "A. Deadline", "statement": "Adilbek was assigned to a special project. For Adilbek it means that he has  days to run a special program and provide its results. But there is a problem: the program needs to run for  days to calculate the results.Fortunately, Adilbek can optimize the program. If he spends  ( is a non-negative integer) days optimizing the program, he will make the program run in  days ( is the ceiling function: , ). The program cannot be run and optimized simultaneously, so the total number of days he will spend is equal to .Will Adilbek be able to provide the generated results in no more than  days?", "input": "The first line contains a single integer  () \u2014 the number of test cases. The next  lines contain test cases \u2013 one per line. Each line contains two integers  and  (, ) \u2014 the number of days before the deadline and the number of days the program runs.", "output": "Print  answers \u2014 one per test case. For each test case print  (case insensitive) if Adilbek can fit in  days or  (case insensitive) otherwise.", "tutorial": "At first, let's note that if  is integer and  and  are non-negative then . So, instead of looking at  we can consider .It's easier since the function  is more common function and it can be proven that it's concave upward. It means that this function has a unique minimum and, moreover, we can calculate it:  has minimum value in  and .Since the ceiling function is monotonically increasing so we can assume that  for all .So we can just iterate  from  to  and check the unequation . The total complexity is equal to .There is a simple optimization: because of the monotone ceiling we can prove that we need to check only  and .", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tint tt = clock();\n#endif\n\t\n\tint T; cin >> T;\n\twhile(T--) {\n\t\tint n, d;\n\t\tcin >> n >> d;\n\t\t\n\t\tint x, MAG = (int)sqrt(d) + 10;\n\t\tfor(x = 0; x < MAG; x++) {\n\t\t\tif(x + (d + x) / (x + 1) <= n)\n\t\t\t\tbreak;\n\t\t}\n\t\tcout << (x < MAG ? \"YES\" : \"NO\") << endl;\n\t}\n\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}