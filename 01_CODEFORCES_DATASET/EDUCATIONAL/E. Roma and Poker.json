{"link": "https://codeforces.com//contest/803/problem/E", "problemId": "104510", "shortId": "803E", "contest_number": "803", "name": "E. Roma and Poker", "statement": "Each evening Roma plays online poker on his favourite website. The rules of poker on this website are a bit strange: there are always two players in a hand, there are no bets, and the winner takes  virtual bourle from the loser.Last evening Roma started to play poker. He decided to spend no more than  virtual bourles \u2014 he will stop immediately if the number of his loses exceeds the number of his wins by . Also Roma will leave the game if he wins enough money for the evening, i.e. if the number of wins exceeds the number of loses by .Next morning Roma found a piece of paper with a sequence on it representing his results. Roma doesn't remember the results exactly, and some characters in the sequence are written in a way such that it's impossible to recognize this character, so Roma can't recall whether he won  bourles or he lost.The sequence written by Roma is a string  consisting of characters  (Roma won the corresponding hand),  (Roma lost),  (draw) and  (unknown result). Roma wants to restore any  sequence by changing all  characters to ,  or . The sequence is called  if all these conditions are met:   In the end the absolute difference between the number of wins and loses is equal to ;  There is no hand such that the absolute difference before this hand was equal to . Help Roma to restore any such sequence.", "input": "The first line contains two numbers  (the length of Roma's sequence) and  (). The second line contains the sequence  consisting of characters , ,  and . There are exactly  characters in this sequence.", "output": "If there is no  sequence that can be obtained from  by replacing all  characters by ,  or , print . Otherwise print this sequence. If there are multiple answers, print any of them.", "tutorial": "This problem can be solved using dynamic programming:  is  if Roma could play first  games with balance .  is ; and for each  such that  and  we update  if ,  if ,  if , and all three states if  ?. If either of  and  is , then we can restore the sequence.Time and memory complexity is .As an exercise, you can think about linear solution.", "solution": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n#include <ctime>\n#include <string>\n#include <cstring>\n#include <complex>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\nconst int N = 2007;\nconst int Z = 1002;\nint n, k;\nchar s[N];\nbool dp[N][N];\nint par[N][N];\n\nint main()\n{\n//    freopen(\"input.txt\", \"r\", stdin);\n//    freopen(\"output.txt\", \"w\", stdout);\n\n    scanf(\"%d%d %s\", &n, &k, s);\n    dp[0][Z] = 1;\n    for (int i = 0; i < n; i++)\n        for (int bal = -k + 1; bal < k; bal++)\n        {\n            if (!dp[i][Z + bal]) continue;\n            if (s[i] == 'W' || s[i] == '?')\n            {\n                dp[i + 1][Z + bal + 1] = 1;\n                par[i + 1][Z + bal + 1] = 1;\n            }\n            if (s[i] == 'D' || s[i] == '?')\n            {\n                dp[i + 1][Z + bal] = 1;\n                par[i + 1][Z + bal] = 0;\n            }\n            if (s[i] == 'L' || s[i] == '?')\n            {\n                dp[i + 1][Z + bal - 1] = 1;\n                par[i + 1][Z + bal - 1] = -1;\n            }\n        }\n    if (dp[n][Z + k])\n    {\n        int p = n, w = Z + k;\n        while(p > 0)\n        {\n            int d = par[p][w];\n            p--;\n            w -= d;\n            if (d == 1)\n                s[p] = 'W';\n            if (d == 0)\n                s[p] = 'D';\n            if (d == -1)\n                s[p] = 'L';\n        }\n        printf(\"%s\\n\", s);\n    }\n    else if (dp[n][Z - k])\n    {\n        int p = n, w = Z - k;\n        while(p > 0)\n        {\n            int d = par[p][w];\n            p--;\n            w -= d;\n            if (d == 1)\n                s[p] = 'W';\n            if (d == 0)\n                s[p] = 'D';\n            if (d == -1)\n                s[p] = 'L';\n        }\n        printf(\"%s\\n\", s);\n    }\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}