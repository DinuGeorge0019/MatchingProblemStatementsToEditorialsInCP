{"link": "https://codeforces.com//contest/1569/problem/B", "problemId": "1103180", "shortId": "1569B", "contest_number": "1569", "name": "B. Chess Tournament", "statement": "A chess tournament will be held soon, where  chess players will take part. Every participant will play one game against every other participant. Each game ends in either a win for one player and a loss for another player, or a draw for both players.Each of the players has their own expectations about the tournament, they can be one of two types:  a player wants not to lose any game (i.\u2009e. finish the tournament with );  a player wants to win at least one game. You have to determine if there exists an outcome for all the matches such that all the players meet their expectations. If there are several possible outcomes, print any of them. If there are none, report that it's impossible.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. The first line of each test case contains one integer  ()\u00a0\u2014 the number of chess players. The second line contains the string  (; ). If , then the -th player has expectations of the first type, otherwise of the second type.", "output": "For each test case, print the answer in the following format: In the first line, print  if it is impossible to meet the expectations of all players. Otherwise, print , and the matrix of size  in the next  lines. The matrix element in the -th row and -th column should be equal to:   , if the -th player won in a game against the -th player;  , if the -th player lost in a game against the -th player;  , if the -th and -th players' game resulted in a draw;  , if . ", "tutorial": "Since the chess players of the first type should not lose a single game, each game between two chess players of the first type should end in a draw (so that none of them gets defeated). And a game between a chess player of the first type and the second type should end either with a victory of the first or a draw. Therefore, for convenience, we will say that all games with a chess player of the first type end in a draw.Now there are only games between chess players of the second type left. If there are only  or  such players, then there is no answer. Otherwise, we can choose the following method: the -th chess player of the second type wins against the -th chess player of the second type, and the last one wins against the first; all remaining games are drawn.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    string s;\n    cin >> n >> s;\n    vector<int> id;\n    for (int i = 0; i < n; ++i) if (s[i] == '2')\n      id.push_back(i);\n    int k = id.size();\n    if (k == 1 || k == 2) {\n      cout << \"NO\\n\";\n      continue;\n    }\n    vector<string> t(n, string(n, '='));\n    for (int i = 0; i < n; ++i) t[i][i] = 'X';\n    for (int i = 0; i < k; ++i) {\n      int x = id[i], y = id[(i + 1) % k];\n      t[x][y] = '+';\n      t[y][x] = '-';\n    }\n    cout << \"YES\\n\";\n    for (int i = 0; i < n; ++i) cout << t[i] << '\\n';\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}