{"link": "https://codeforces.com//contest/1697/problem/B", "problemId": "1427641", "shortId": "1697B", "contest_number": "1697", "name": "B. Promo", "statement": "The store sells  items, the price of the -th item is . The store's management is going to hold a promotion: if a customer purchases at least  items,  cheapest of them are free.The management has not yet decided on the exact values of  and . Therefore, they ask you to process  queries: for the given values of  and , determine the maximum total value of items received for free, if a customer makes .Note that all queries are independent; they don't affect the store's stock.", "input": "The first line contains two integers  and  ()\u00a0\u2014 the number of items in the store and the number of queries, respectively. The second line contains  integers  (), where \u00a0\u2014 the price of the -th item. The following  lines contain two integers  and  each ()\u00a0\u2014 the values of the parameters  and  in the -th query.", "output": "For each query, print a single integer\u00a0\u2014 the maximum total value of items received for free .", "tutorial": "First of all, there is an answer with exactly  items bought. Suppose items worth  () were purchased. Then by removing  from this set, the sum of  the cheapest items in the set will change by , which means the answer will not decrease.The second fact that is necessary to solve the problem \u00a0\u2014  of the most expensive items should be chosen. Otherwise, one can remove the minimum price item from the set and add an item with a higher price (it can always be found), which means the answer will not decrease.Using these two facts, it is enough to sort the array and use prefix sums.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false); cin.tie(0);\n  int n, q;\n  cin >> n >> q;\n  vector<long long> p(n), s(n + 1);\n  for (auto& x : p) cin >> x;\n  sort(p.begin(), p.end());\n  for (int i = 0; i < n; ++i) s[i + 1] = s[i] + p[i];\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    cout << s[n - x + y] - s[n - x] << '\\n';\n  }\n} ", "interactive": false, "noSolution": false, "noTutorial": false}