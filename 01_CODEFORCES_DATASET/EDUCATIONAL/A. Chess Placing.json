{"link": "https://codeforces.com//contest/985/problem/A", "problemId": "184582", "shortId": "985A", "contest_number": "985", "name": "A. Chess Placing", "statement": "You are given a chessboard of size . It is guaranteed that . The chessboard is painted like this: \"\".Some cells of the board are occupied by the chess pieces. Each cell contains no more than one chess piece. It is known that the total number of pieces equals to .In one step you can move one of the pieces one cell to the left or to the right. You cannot move pieces beyond the borders of the board. You also cannot move pieces to the cells that are already occupied.Your task is to place all the pieces in the cells of the same color  (all the pieces must occupy only the black cells or only the white cells after all the moves are made).", "input": "The first line of the input contains one integer  (, ) \u2014 the size of the chessboard.  The second line of the input contains  integer numbers  () \u2014 initial positions of the pieces. It is guaranteed that all the positions are distinct.", "output": "Print one integer \u2014  you have to make to place all the pieces in the cells of the same color.", "tutorial": "Firstly let's sort our array  (pay the attention that there are  elements in this array, not ). Then for 0-indexed array  answer will be equal to , where  is an absolute value of difference between  and .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n\tint n;\n\tcin >> n;\n\tvector<int> pos(n / 2);\n\tfor (int i = 0; i < n / 2; ++i)\n\t\tcin >> pos[i];\n\tsort(pos.begin(), pos.end());\n\t\n\tint ans1 = 0, ans2 = 0;\n\tfor (int i = 0; i < n / 2; ++i) {\n\t\tans1 += abs(pos[i] - (i * 2 + 1));\n\t\tans2 += abs(pos[i] - (i * 2 + 2));\n\t}\n\t\n\tcout << min(ans1, ans2) << endl;\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}