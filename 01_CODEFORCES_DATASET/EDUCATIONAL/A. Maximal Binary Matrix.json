{"link": "https://codeforces.com//contest/803/problem/A", "problemId": "104506", "shortId": "803A", "contest_number": "803", "name": "A. Maximal Binary Matrix", "statement": "You are given matrix with  rows and  columns filled with zeroes. You should put  ones in it in such a way that the resulting matrix is symmetrical with respect to the main diagonal (the diagonal that goes from the top left to the bottom right corner) and is lexicographically maximal.One matrix is lexicographically greater than the other if the first different number in the first different row from the top in the first matrix is greater than the corresponding number in the second one.If there exists no such matrix then output .", "input": "The first line consists of two numbers  and  (, ).", "output": "If the answer exists then output resulting matrix. Otherwise output .", "tutorial": "Let's construct matrix from top to bottom, from left to right. At current step we consider position . Look at contents of cells  and . If number of zeroes in them doesn't exceed , then let's fill those cells with ones and decrease  by this number.If  isn't equal to  in the end of algorithm, then there is no answer.Overall complexity: .", "solution": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n#include <ctime>\n#include <string>\n#include <cstring>\n#include <complex>\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define mp make_pair\n\nconst int N = 111;\nint n, k;\nint a[N][N];\n\nint main()\n{\n//    freopen(\"input.txt\", \"r\", stdin);\n//    freopen(\"output.txt\", \"w\", stdout);\n\n    scanf(\"%d%d\", &n, &k);\n    if (k > n * n)\n    {\n        printf(\"-1\\n\");\n        return 0;\n    }\n    for (int i = 0; k > 0 && i < n; i++)\n    {\n        a[i][i] = 1;\n        k--;\n        for (int j = i + 1; k > 1 && j < n; j++)\n        {\n            a[i][j] = a[j][i] = 1;\n            k -= 2;\n        }\n    }\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++)\n            printf(\"%d \", a[i][j]);\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n", "interactive": false, "noSolution": false, "noTutorial": false}