{"link": "https://codeforces.com//contest/1155/problem/A", "problemId": "334461", "shortId": "1155A", "contest_number": "1155", "name": "A. Reverse a Substring", "statement": "You are given a string  consisting of  lowercase Latin letters.Let's define a substring as a contiguous subsegment of a string. For example, \"\" is a substring of \"\" (it starts in position  and ends in position ), but \"\" or \"\" aren't substrings of this string. So the substring of the string  from position  to position  is .You have to choose  one of the substrings of the given string and reverse it (i.\u2009e. make ) to obtain a string that is  lexicographically. Note that it  to obtain the minimum possible string.If it is impossible to reverse some substring of the given string to obtain a string that is less, print \"\". Otherwise print \"\" and  suitable substring.String  is lexicographically less than string , if either  is a prefix of  (and ), or there exists such  (), that , and for any  () . Here  denotes the length of the string . The lexicographic comparison of strings is implemented by operator  in modern programming languages\u200b\u200b.", "input": "The first line of the input contains one integer  () \u2014 the length of . The second line of the input contains the string  of length  consisting only of lowercase Latin letters.", "output": "If it is impossible to reverse some substring of the given string to obtain a string which is lexicographically , print \"\". Otherwise print \"\" and two indices  and  () denoting the substring you have to reverse. If there are multiple answers, you can print any.", "tutorial": "If the answer is \"\" then we always can reverse a substring of length . So we need to check only pairs of adjacent characters in . If there is no such pair of characters  for all  from  to  then the answer is \"\".Why is it so? Consider the substring  we have to reverse. It is obvious that , otherwise it is pointless to reverse this substring. Then consider two cases:  then  (by transitivity) and then we can go to a smaller substring (); otherwise  and it means that we can take the substring .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\t\n\tint n;\n\tstring s;\n\tcin >> n >> s;\n\t\n\tfor (int i = 1; i < int(s.size()); ++i) {\n\t\tif (s[i] < s[i - 1]) {\n\t\t\tcout << \"YES\" << endl;\n\t\t\tcout << i << \" \" << i + 1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tcout << \"NO\" << endl;\n\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}