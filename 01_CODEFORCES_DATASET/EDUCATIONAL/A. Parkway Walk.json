{"link": "https://codeforces.com//contest/1697/problem/A", "problemId": "1427640", "shortId": "1697A", "contest_number": "1697", "name": "A. Parkway Walk", "statement": "You are walking through a parkway near your house. The parkway has  benches in a row numbered from  to  from left to right. The distance between the bench  and  is  meters.Initially, you have  units of energy. To walk  meter of distance, you spend  unit of your energy. You can't walk if you have no energy. Also, you can restore your energy by  (and this is the only way to restore the energy). When you are sitting, you can restore any integer amount of energy you want (if you sit longer, you restore more energy). Note that the amount of your energy  .Your task is to find the  amount of energy you have to  (by sitting on benches) to reach the bench  from the bench  (and end your walk).You have to answer  independent test cases.", "input": "The first line of the input contains one integer  () \u2014 the number of test cases. Then  test cases follow. The first line of the test case contains two integers  and  (; ). The second line of the test case contains  integers  (), where  is the distance between benches  and .", "output": "For each test case, print one integer \u2014 the  amount of energy you have to  (by sitting on benches) to reach the bench  from the bench  (and end your walk) in the corresponding test case.", "tutorial": "If you have at least  units of energy, then the answer is , because you can just walk to the end. Otherwise, the answer is , because you can just sit on the first bench and then just go.Time complexity: .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n    freopen(\"input.txt\", H\"r\", stdin);\n//  freopen(\"output.txt\", \"w\", stdout);\n#endif\n    \n    int tc;\n    cin >> tc;\n    while (tc--) {\n        int n, m;\n        cin >> n >> m;\n        int sum = 0;\n        for (int i = 0; i < n; ++i) {\n            int x;\n            cin >> x;\n            sum += x;\n        }\n        cout << max(0, sum - m) << endl;\n    }\n    \n    return 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}