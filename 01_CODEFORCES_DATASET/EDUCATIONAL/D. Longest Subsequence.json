{"link": "https://codeforces.com//contest/632/problem/D", "problemId": "50146", "shortId": "632D", "contest_number": "632", "name": "D. Longest Subsequence", "statement": "You are given array  with  elements and the number . Consider some subsequence of  and the value of least common multiple (LCM) of its elements. Denote LCM as . Find any longest subsequence of  with the value .A subsequence of  is an array we can get by erasing some elements of . It is allowed to erase zero or all elements.The LCM of an empty array equals .", "input": "The first line contains two integers  and  () \u2014 the size of the array  and the parameter from the problem statement. The second line contains  integers  () \u2014 the elements of .", "output": "In the first line print two integers  and  () \u2014 the value of LCM and the number of elements in optimal subsequence. In the second line print  integers \u2014 the positions of the elements from the optimal subsequence in the ascending order. Note that you can find and print any subsequence with the maximum length.", "tutorial": "Let  be the number of occurences of the number  in the given array (easy to see that we can ignore the numbers greater than ). Let's iterate over  and  and increase the value in the position  in some array  by the value . So the value  equals the number of numbers in the given array which divide . Let's find the minimal  with the maximum value  (). Easy to see that the answer to the problem is the numbers which divide .\nLet's calculate the complexity of the solution. The number of the pairs  we can bound with the value .\n", "solution": "\n            #include <bits/stdc++.h>\n\u00a0\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define nfor(i, n) for (int i = int(n) - 1; i >= 0; i--)\n#define fore(i, l, r) for (int i = int(l); i < int(r); i++)\n#define correct(x, y, n, m) (0 <= (x) && (x) < (n) && 0 <= (y) && (y) < (m))\n#define all(a) (a).begin(), (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define mp(x, y) make_pair((x), (y))\n#define x first\n#define y second\n\u00a0\nusing namespace std;\n\u00a0\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\u00a0\ntemplate<typename X> inline X abs(const X& a) { return a < 0? -a: a; }\ntemplate<typename X> inline X sqr(const X& a) { return a * a; }\n\u00a0\ntemplate<typename A, typename B> inline ostream& operator<< (ostream& out, const pair<A, B>& p) { return out << \"(\" << p.x << \", \" << p.y << \")\"; }\ntemplate<typename T> inline ostream& operator<< (ostream& out, const vector<T>& a) { out << \"[\"; forn(i, sz(a)) { if (i) out << ','; out << ' ' << a[i]; } return out << \" ]\"; } \ntemplate<typename T> inline ostream& operator<< (ostream& out, const set<T>& a) { return out << vector<T>(all(a)); }\n\u00a0\ninline ld gett() { return clock() / ld(CLOCKS_PER_SEC); }\n\u00a0\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld EPS = 1e-9, PI = 3.1415926535897932384626433832795;\n\u00a0\nconst int N = 1200300;\n\u00a0\nint n, m;\narray<int, N> a;\n\u00a0\ninline bool read() {\n\u00a0 \u00a0 if (!(cin >> n >> m)) return false;\n\u00a0 \u00a0 forn(i, n) assert(scanf(\"%d\", &a[i]) == 1);\n\u00a0 \u00a0 return true;\n}\n\u00a0\narray<int, N> cnt;\narray<int, N> z;\n\u00a0\ninline void solve() {\n\u00a0 \u00a0 forn(i, m + 1) cnt[i] = z[i] = 0;\n\u00a0 \u00a0 forn(i, n) if (a[i] < N) cnt[a[i]]++;\n\u00a0 \u00a0 fore(i, 1, m + 1)\n\u00a0 \u00a0 \u00a0 \u00a0 for (int j = i; j <= m; j += i)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 z[j] += cnt[i];\n\u00a0 \u00a0 int ansv = -1, ansl = -1;\n\u00a0 \u00a0 fore(l, 1, m + 1)\n\u00a0 \u00a0 \u00a0 \u00a0 if (ansv < z[l])\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ansv = z[l], ansl = l;\n\u00a0 \u00a0 assert(ansl != -1);\n\u00a0 \u00a0 cout << ansl << ' ' << ansv << endl;\n\u00a0 \u00a0 bool f = true;\n\u00a0 \u00a0 forn(i, n)\n\u00a0 \u00a0 \u00a0 \u00a0 if (ansl % a[i] == 0) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (f) f = false;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else putchar(' ');\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 printf(\"%d\", i + 1);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ansv--;\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 puts(\"\");\n\u00a0 \u00a0 assert(!ansv);\n\u00a0\n}\n\u00a0\nint main() {\n#ifdef SU1\n\u00a0 \u00a0 assert(freopen(\"input.txt\", \"rt\", stdin));\n\u00a0 \u00a0 //assert(freopen(\"output.txt\", \"wt\", stdout));\n#endif\n\u00a0 \u00a0 \n\u00a0 \u00a0 cout << setprecision(10) << fixed;\n\u00a0 \u00a0 cerr << setprecision(5) << fixed;\n\u00a0\n\u00a0 \u00a0 while (read()) {\n\u00a0 \u00a0 \u00a0 \u00a0 ld stime = gett();\n\u00a0 \u00a0 \u00a0 \u00a0 solve();\n\u00a0 \u00a0 \u00a0 \u00a0 cerr << \"Time: \" << gett() - stime << endl;\n\u00a0 \u00a0 \u00a0 \u00a0 //break;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 \n\u00a0 \u00a0 return 0;\n}\n        ", "interactive": false, "noSolution": false, "noTutorial": false}