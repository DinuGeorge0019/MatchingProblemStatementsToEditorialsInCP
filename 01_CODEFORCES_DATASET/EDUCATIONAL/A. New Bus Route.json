{"link": "https://codeforces.com//contest/792/problem/A", "problemId": "100424", "shortId": "792A", "contest_number": "792", "name": "A. New Bus Route", "statement": "There are  cities situated along the main road of Berland. Cities are represented by their coordinates \u2014 integer numbers . All coordinates are pairwise distinct.It is possible to get from one city to another only by bus. But all buses and roads are very old, so the Minister of Transport decided to build a new bus route. The Minister doesn't want to spend large amounts of money \u2014 he wants to choose two cities in such a way that the distance between them is minimal possible. The distance between two cities is equal to the absolute value of the difference between their coordinates.It is possible that there are multiple pairs of cities with minimal possible distance, so the Minister wants to know the quantity of such pairs. Your task is to write a program that will calculate the minimal possible distance between two pairs of cities and the quantity of pairs which have this distance.", "input": "The first line contains one integer number  (). The second line contains  integer numbers  (). All numbers  are pairwise distinct.", "output": "Print two integer numbers \u2014 the minimal distance and the quantity of pairs with this distance.", "tutorial": "At first let's notice that if there exists such triple ,  and  that , then  and .Thus we can sort all numbers and check only adjacent ones. There are exactly  of such pairs. The only thing left is to find minimal distance of all pairs and count pairs with that distance.Overall complexity: ", "solution": "#include <iostream>\n#include <fstream>\n#include <set>\n#include <map>\n#include <string>\n#include <vector>\n#include <bitset>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <queue>\n\n#define mp make_pair\n#define pb push_back\n\n\ntypedef long long ll;\ntypedef long double ld;\n\nusing namespace std;\n\n#ifndef LOCAL\n#define cerr _cer\nstruct _cert\n{\n    template <typename T> _cert& operator << (T) { return *this; }\n};\n_cert _cer;\n#endif\n\ntemplate <typename T> void dprint(T begin, T end) {\n    for (auto i = begin; i != end; i++) {\n\t\tcerr << (*i) << \" \";\n    }\n    cerr << \"\\n\";\n}\n\nint n;\nint a[220000];\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; ++i)\n\t\tscanf(\"%d\", a + i);\n\tsort(a, a + n);\n\tll bst = a[n - 1] - a[0];\n\tll cnt = 0;\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tll l = a[i + 1] - a[i];\n\t\tif (bst > l)\n\t\t\tbst = l, cnt = 0;\n\t\tif (bst == l)\n\t\t\t++cnt;\n\t}\n\tcout << bst << \" \" << cnt << \"\\n\";\n\treturn 0;\n}\n\n\n", "interactive": false, "noSolution": false, "noTutorial": false}