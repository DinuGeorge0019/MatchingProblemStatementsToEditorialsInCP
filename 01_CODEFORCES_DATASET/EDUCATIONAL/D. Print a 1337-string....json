{"link": "https://codeforces.com//contest/1202/problem/D", "problemId": "385665", "shortId": "1202D", "contest_number": "1202", "name": "D. Print a 1337-string...", "statement": "You are given an integer . You have to find a sequence  consisting of digits  such that it has exactly  subsequences equal to .For example, sequence  has  subsequences equal to :    (you can remove the second and fifth characters);   (you can remove the third and fifth characters);   (you can remove the fourth and fifth characters);   (you can remove the second and sixth characters);   (you can remove the third and sixth characters);   (you can remove the fourth and sixth characters). You have to answer  independent queries.", "input": "The first line contains one integer  () \u2014 the number of queries.  Next  lines contains a description of queries: the -th line contains one integer  ().", "output": "For the -th query print one string  () consisting of digits . String  must have exactly  subsequences . If there are multiple such strings, print any of them.", "tutorial": "Let's consider the following string . If digit  occurs  times in it, then string have  subsequences . Let's increase the number of digits  in this string while condition  holds ( is the number of digits  in this string). The length of this string will not exceed  because . The value  will not exceed  as well.All we have to do is increase the number of subsequences  in the current string by . So if we add  digits  after the first two digits  we increase the number of subsequences  by . The string  will look like this: , where sequence  consists of exactly  digits  and sequence  consists of exactly  digits .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n    int t;\n    cin >> t;\n    for(int tc = 0; tc < t; ++tc){\n    \tint n;\n    \tcin >> n;\n    \tint len = 2;\n    \twhile(len * (len + 1) / 2 <= n)\n    \t\t++len;\n    \n    \tn -= len * (len - 1) / 2;\n    \tassert(n >= 0);\n    \tassert(n <= 45000);\n    \t\n    \tstring s = \"133\";\n    \twhile(n > 0){\n    \t\t--n;\n    \t\ts += \"7\";\n    \t}\n    \n    \tlen -= 2;\n    \twhile(len > 0){\n    \t\t--len;\n    \t\ts += \"3\";\n    \t}\n    \ts += \"7\";\n    \tcout << s << endl;\n    }\n\treturn 0;\n} ", "interactive": false, "noSolution": false, "noTutorial": false}