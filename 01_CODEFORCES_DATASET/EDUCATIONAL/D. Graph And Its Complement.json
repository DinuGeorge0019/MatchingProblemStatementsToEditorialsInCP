{"link": "https://codeforces.com//contest/990/problem/D", "problemId": "188993", "shortId": "990D", "contest_number": "990", "name": "D. Graph And Its Complement", "statement": "Given three numbers . You need to find an adjacency matrix of such an undirected graph that the number of components in it is equal to , and the number of components in its complement is . The matrix must be symmetric, and all digits on the main diagonal must be zeroes.In an undirected graph loops (edges from a vertex to itself) are not allowed. It can be at most one edge between a pair of vertices.The adjacency matrix of an undirected graph is a square matrix of size  consisting only of \"0\" and \"1\", where  is the number of vertices of the graph and the -th row and the -th column correspond to the -th vertex of the graph. The cell  of the adjacency matrix contains  if and only if the -th and -th vertices in the graph are connected by an edge.A connected component is a set of vertices  such that for every two vertices from this set there exists at least one path in the graph connecting this pair of vertices, but adding any other vertex to  violates this rule.The complement or inverse of a graph  is a graph  on the same vertices such that two distinct vertices of  are adjacent if and only if they are not adjacent in .", "input": "In a single line, three numbers are given : is the number of vertexes of the graph, the required number of connectivity components in it, and the required amount of the connectivity component in it's complement. ", "output": "If there is no graph that satisfies these constraints on a single line, print \"NO\" (without quotes). Otherwise, on the first line, print \"YES\"(without quotes). In each of the next  lines, output  digits such that -th digit of -th line must be  if and only if there is an edge between vertices  and  in  (and  otherwise). Note that the matrix must be symmetric, and all digits on the main diagonal must be zeroes.  If there are several matrices that satisfy the conditions \u2014 output any of them.", "tutorial": "Let's prove that if , then . Let  be the original graph, and  \u2014 the complement of the graph . Let's look at each pair of vertices . If  and  belong to different components of the graph , then there is an edge between them in the graph . Otherwise,  and  belong to the same component of the graph , but since  has more than one component, there is vertex  in other component of , and there are edges  and  in . That's why, there is a connected path for any pair of vertices , and the graph  is connected. Similarly, the case  is proved.So, if , then the answer is \"NO\". Otherwise, . Consider the case where  (if , we can swap  and , and output complement of the constructed graph). To have  components in the graph , it is enough to connect the vertex  with the vertex , the vertex  with the vertex , , the vertex  with the vertex . A particular cases are the tests  and . There is no suitable graph for them.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = int(1e3) + 7;\n\nint n, a, b;\nbool mat[N][N];\n\nint main(){\n\tscanf(\"%d %d %d\", &n, &a, &b);\n\n\tif(min(a, b) > 1){\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\t\n\tif(a == 1 && b == 1){\n\t\tif(n == 2 || n == 3){\n\t\t\tputs(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\tputs(\"YES\");\n\t\tfor(int i = 1; i < n; ++i)\n\t\t\tmat[i][i - 1] = mat[i - 1][i] = true;\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tfor(int j = 0; j < n; ++j)\n\t\t\t\tprintf(\"%c\", '0' + mat[i][j]);\n\t\t\tputs(\"\");\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tbool x = false;\n\tif(a == 1){\n\t\tswap(a, b);\n\t\tx = true;\n\t}\n\tfor(int i = n - a; i > 0; --i)\n\t\tmat[i][i - 1] = mat[i - 1][i] = true;\n\tputs(\"YES\");\n\tfor(int i = 0; i < n; ++i){\n\t\t\tfor(int j = 0; j < n; ++j)\n\t\t\t\tprintf(\"%c\", '0' + ((x ^ mat[i][j]) && (i != j)));\n\t\t\tputs(\"\");\n\t\t}\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}