{"link": "https://codeforces.com//contest/985/problem/B", "problemId": "184583", "shortId": "985B", "contest_number": "985", "name": "B. Switches and Lamps", "statement": "You are given  switches and  lamps. The -th switch turns on some subset of the lamps. This information is given as the matrix  consisting of  rows and  columns where  if the -th switch turns on the -th lamp and  if the -th switch is not connected to the -th lamp.Initially all  lamps are turned off.Switches change state only from \"off\" to \"on\". It means that if you press two or more switches connected to the same lamp then the lamp will be turned on after any of this switches is pressed and will remain its state even if any switch connected to this lamp is pressed afterwards.It is guaranteed that if you push all  switches then .Your think that you have too many switches and you would like to ignore one of them. Your task is to say if there exists such a switch that if you will ignore (not use) it but press all the other  switches then all the  lamps will be turned on.", "input": "The first line of the input contains two integers  and  () \u2014 the number of the switches and the number of the lamps. The following  lines contain  characters each. The character  is equal to '' if the -th switch turns on the -th lamp and '' otherwise. It is guaranteed that if you press all  switches .", "output": "Print \"\" if there is a switch that if you will ignore it and press all the other  switches then all  lamps will be turned on. Print \"\" if there is no such switch.", "tutorial": "Let's maintain an array  of size , where  will be equal to the number of switches that are connected to the -th lamp. Then answer will be \"\" if and only if there exists some switch such that for each lamp  that is connected to this switch . Otherwise the answer will be \"\".", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n\tint n, m;\n\tcin >> n >> m;\n\tvector<string> s(n);\n\tvector<int> cnt(m);\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> s[i];\n\t\tfor (int j = 0; j < m; ++j)\n\t\t\tif (s[i][j] == '1') ++cnt[j];\n\t}\n\t\n\tfor (int i = 0; i < n; ++i) {\n\t\tbool ok = true;\n\t\tfor (int j = 0; j < m; ++j) {\n\t\t\tif (s[i][j] == '1' && cnt[j] == 1)\n\t\t\t\tok = false;\n\t\t}\n\t\tif (ok) {\n\t\t\tputs(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tputs(\"NO\");\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}