{"link": "https://codeforces.com//contest/976/problem/C", "problemId": "179787", "shortId": "976C", "contest_number": "976", "name": "C. Nested Segments", "statement": "You are given a sequence  of one-dimensional segments numbered  through . Your task is to find two distinct indices  and  such that segment  lies within segment .Segment  lies within segment  iff  and .Print indices  and . If there are multiple answers, print any of them. If no answer exists, print .", "input": "The first line contains one integer  () \u2014 the number of segments. Each of the next  lines contains two integers  and  () \u2014 the -th segment.", "output": "Print two distinct indices  and  such that segment  lies within segment . If there are multiple answers, print any of them. If no answer exists, print .", "tutorial": "Let's sort segments firstly by their left border in increasing order and in case of equal by their right border in decreasing order. If there is any valid pair then the inner segment will always go after the outer one. Now you can go from left to right, keep the maximum right border of processed segments and compare it to the current segment. Overall complexity: .", "solution": "#include <bits/stdc++.h>\n\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define x first\n#define y second\n\nusing namespace std;\n\ntypedef pair<int, int> pt;\n\nconst int N = 300 * 1000 + 13;\n\nint n;\npair<pt, int> a[N];\n\nint main() {\n\tscanf(\"%d\", &n);\n\tforn(i, n){\n\t\tscanf(\"%d%d\", &a[i].x.x, &a[i].x.y);\n\t\ta[i].y = i + 1;\n\t}\n\t\n\tsort(a, a + n, [&](pair<pt, int> a, pair<pt, int> b){if (a.x.x != b.x.x) return a.x.x < b.x.x; return a.x.y > b.x.y;});\n\t\n\tset<pt> cur;\n\tforn(i, n){\n\t\twhile (!cur.empty() && cur.begin()->x < a[i].x.x)\n\t\t\tcur.erase(cur.begin());\n\t\tif (!cur.empty() && (--cur.end())->x >= a[i].x.y){\n\t\t\tprintf(\"%d %d\\n\", a[i].y, (--cur.end())->y);\n\t\t\treturn 0;\n\t\t}\n\t\tcur.insert({a[i].x.y, a[i].y});\n\t}\n\t\n\tputs(\"-1 -1\");\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}