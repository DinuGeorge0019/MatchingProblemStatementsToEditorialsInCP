{"link": "https://codeforces.com//contest/1016/problem/D", "problemId": "204439", "shortId": "1016D", "contest_number": "1016", "name": "D. Vasya And The Matrix", "statement": "Now Vasya is taking an exam in mathematics. In order to get a good mark, Vasya needs to guess the matrix that the teacher has constructed!Vasya knows that the matrix consists of  rows and  columns. For each row, he knows the xor (bitwise excluding or) of the elements in this row. The sequence  denotes the xor of elements in rows with indices , , ..., , respectively. Similarly, for each column, he knows the xor of the elements in this column. The sequence  denotes the xor of elements in columns with indices , , ..., , respectively.Help Vasya! Find a matrix satisfying the given constraints or tell him that there is no suitable matrix.", "input": "The first line contains two numbers  and  \u2014 the dimensions of the matrix. The second line contains  numbers , where  is the xor of all elements in row . The third line contains  numbers , where  is the xor of all elements in column .", "output": "If there is no matrix satisfying the given constraints in the first line, output \"NO\". Otherwise, on the first line output \"YES\", and then  rows of  numbers in each  \u2014 the description of the matrix. If there are several suitable matrices, it is allowed to print any of them.", "tutorial": "If , then there is no suitable matrix. The operation  means xor.Otherwise, we can always construct a suitable matrix by the following method: the first element of the first line will be equal to . The second element of the first line is , the third element is , the last one is .The first element of the second line will be , the first element of the third line is , the first element of the last line is . The rest of the elements will be zero.It is not difficult to verify that the matrix obtained satisfies all the restrictions.", "solution": "#include <bits/stdc++.h>\n#include \"testlib.h\"\n\nusing namespace std;\n\nconst int N = 109;\n\nint n, m;\nint a[N], b[N];\nint res[N][N];\n\nint main() {\n\tint cur = 0;\n\tcin >> n >> m;\n\tfor(int i = 0; i < n; ++i)\n\t\tcin >> a[i], cur ^= a[i];\n\tfor(int i = 0; i < m; ++i)\n\t\tcin >> b[i], cur ^= b[i];\n\t\n\tif(cur != 0){\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\t\n\tputs(\"YES\");\n\tfor(int i = 1; i < m; ++i) \n\t\tcur ^= b[i];\n\tcur ^= a[0];\n\t\n\tcout << cur << ' ';\n\tfor(int i = 1; i < m; ++i)\n\t\tcout << b[i] << ' ';\n\tcout << endl;\n\tfor(int i = 1; i < n; ++i){\n\t\tcout << a[i] << ' ';\n\t\tfor(int j = 1; j < m; ++j)\n\t\t\tcout << 0 << ' ';\n\t\tcout << endl;\n\t}\n    return 0;\n}                             \t", "interactive": false, "noSolution": false, "noTutorial": false}