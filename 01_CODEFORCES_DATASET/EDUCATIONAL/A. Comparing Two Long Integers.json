{"link": "https://codeforces.com//contest/616/problem/A", "problemId": "45344", "shortId": "616A", "contest_number": "616", "name": "A. Comparing Two Long Integers", "statement": "You are given two very long integers  (leading zeroes are allowed). You should check what number  or  is greater or determine that they are equal.The input size is very large so don't use the reading of symbols one by one. Instead of that use the reading of a whole line or token.As input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use  instead of  in C++, prefer to use  instead of  in . Don't use the function  in  instead of it use the function .", "input": "The first line contains a non-negative integer . The second line contains a non-negative integer . The numbers  may contain leading zeroes. Each of them contains no more than  digits.", "output": "Print the symbol \"\" if  and the symbol \"\" if . If the numbers are equal print the symbol \"\".", "tutorial": "Note that solutions in Java with BigInteger class or input() function in Python2 will fail in this problem. The reason is the next: standard objects stores numbers not in decimal system and need a lot of time to convert numbers from decimal system. Actually they are working in , where  is the legth of the number.\nTo solve this problem you should simply read the numbers to strings and add leading zeroes to the shorter one until the numbers will be of the same length. After that you should simply compare them alphabetically.\n", "solution": "\n            #include <bits/stdc++.h>\n\u00a0\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define ford(i, n) for (int i = int(n) - 1; i >= 0; i--)\n#define fore(i, l, r) for (int i = int(l); i < int(r); i++)\n#define correct(x, y, n, m) (0 <= (x) && (x) < (n) && 0 <= (y) && (y) < (m))\n#define all(a) (a).begin(), (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define mp(x, y) make_pair((x), (y))\n#define x first\n#define y second\n\u00a0\nusing namespace std;\n\u00a0\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\u00a0\ntemplate<typename X> inline X abs(const X& a) { return a < 0? -a: a; }\ntemplate<typename X> inline X sqr(const X& a) { return a * a; }\n\u00a0\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld EPS = 1e-9, PI = 3.1415926535897932384626433832795;\n\u00a0\nconst int N = 1200300;\n\u00a0\nchar a[N];\nchar b[N];\n\u00a0\ninline bool read() {\n\u00a0 \u00a0 if (!gets(a)) return false;\n\u00a0 \u00a0 assert(gets(b));\n\u00a0 \u00a0 return true;\n}\n\u00a0\ninline void solve() {\n\u00a0 \u00a0 int n = int(strlen(a));\n\u00a0 \u00a0 int m = int(strlen(b));\n\u00a0 \u00a0 reverse(a, a + n);\n\u00a0 \u00a0 reverse(b, b + m);\n\u00a0 \u00a0 while (n < m) a[n++] = '0';\n\u00a0 \u00a0 while (m < n) b[m++] = '0';\n\u00a0 \u00a0 int p = n - 1;\n\u00a0 \u00a0 while (p >= 0 && a[p] == b[p]) p--;\n\u00a0 \u00a0 if (p < 0) puts(\"=\");\n\u00a0 \u00a0 else if (a[p] < b[p]) puts(\"<\");\n\u00a0 \u00a0 else puts(\">\");\n}\n\u00a0\nint main() {\n#ifdef SU1\n\u00a0 \u00a0 assert(freopen(\"input.txt\", \"rt\", stdin));\n\u00a0 \u00a0 //assert(freopen(\"output.txt\", \"wt\", stdout));\n#endif\n\u00a0 \u00a0 \n\u00a0 \u00a0 cout << setprecision(10) << fixed;\n\u00a0 \u00a0 cerr << setprecision(5) << fixed;\n\u00a0\n\u00a0 \u00a0 while (read()) {\n\u00a0 \u00a0 \u00a0 \u00a0 solve();\n\u00a0 \u00a0 \u00a0 \u00a0 //break;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 \n\u00a0 \u00a0 return 0;\n}\n        ", "interactive": false, "noSolution": false, "noTutorial": false}