{"link": "https://codeforces.com//contest/1511/problem/A", "problemId": "955212", "shortId": "1511A", "contest_number": "1511", "name": "A. Review Site", "statement": "You are an upcoming movie director, and you have just released your first movie. You have also launched a simple review site with two buttons to press\u00a0\u2014 upvote and downvote.However, the site is not so simple on the inside. There are two servers, each with its separate counts for the upvotes and the downvotes. reviewers enter the site one by one. Each reviewer is one of the following types:   type : a reviewer has watched the movie, and they like it\u00a0\u2014 they press the upvote button;  type : a reviewer has watched the movie, and they dislike it\u00a0\u2014 they press the downvote button;  type : a reviewer hasn't watched the movie\u00a0\u2014 they look at the current number of upvotes and downvotes of the movie on the server they are in and decide what button to press. If there are more downvotes than upvotes, then a reviewer downvotes the movie. Otherwise, they upvote the movie. Each reviewer votes on the movie exactly once.Since you have two servers, you can actually manipulate the votes so that your movie gets as many upvotes as possible. When a reviewer enters a site, you know their type, and you can send them either to the first server or to the second one.What is the maximum total number of upvotes you can gather over both servers if you decide which server to send each reviewer to?", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. Then the descriptions of  testcases follow. The first line of each testcase contains a single integer  ()\u00a0\u2014 the number of reviewers. The second line of each testcase contains  integers  ()\u00a0\u2014 the types of the reviewers in the same order they enter the site.", "output": "For each testcase print a single integer\u00a0\u2014 the maximum total number of upvotes you can gather over both servers if you decide which server to send each reviewer to.", "tutorial": "Notice that the answer depends only on the number of the reviewers of the third type who upvote the movie. Optimally we would want every single reviewer of the third type to upvote. We can achieve it with the following construction: send all reviewers of the first type to the first server, all reviewers of the second type to the second server and all reviewers of the third type to the first server. Since there are no downvotes on the first server, all reviewers of the third type will upvote.Thus, the answer is the total number of reviewers of the first and the third type.Overall complexity:  per testcase.", "solution": "fun main() {\n    repeat(readLine()!!.toInt()) {\n        readLine()!!.toInt()\n        println(readLine()!!.split(' ').count { it != \"2\" })\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}