{"link": "https://codeforces.com//contest/1606/problem/A", "problemId": "1163612", "shortId": "1606A", "contest_number": "1606", "name": "A. AB Balance", "statement": "You are given a string  of length  consisting of characters  and/or .Let  be the number of occurrences of string  in  as a . Analogically,  is the number of occurrences of  in  as a .In one step, you can choose any index  and replace  with character  or .What is the minimum number of steps you need to make to achieve ?The number of occurrences of string  in  as substring is the number of indices  () such that substring  is equal to . For example,  since there are two indices :  where  and  where .", "input": "Each test contains multiple test cases. The first line contains the number of test cases  (). Description of the test cases follows. The first and only line of each test case contains a single string  (, where  is the length of the string ), consisting only of characters  and/or .", "output": "For each test case, print the resulting string  with  you'll get making the minimum number of steps. If there are multiple answers, print any of them.", "tutorial": "Let's look at the first and the last characters of . Note that if  (where ), then  is always equal to . It can be proved, for example, by induction: if  consists of equal characters then ; if  has a structure like  (or ) then .Otherwise, there is at least one character  in the middle that equal to  and . So we can split string  in  and . Both these string has  (by induction), so our string  also has .As a result, if  then the answer is , and we print the string untouched. Otherwise, we replace either  or  and get the desired string.(It also can be proved that if  then )", "solution": "fun main() {\n    repeat(readLine()!!.toInt()) {\n        val s = readLine()!!\n        println(s.last() + s.substring(1))\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}