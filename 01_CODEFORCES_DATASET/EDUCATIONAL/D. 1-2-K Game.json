{"link": "https://codeforces.com//contest/1194/problem/D", "problemId": "372218", "shortId": "1194D", "contest_number": "1194", "name": "D. 1-2-K Game", "statement": "Alice and Bob play a game. There is a paper strip which is divided into  cells numbered from left to right starting from . There is a chip placed in the -th cell (the last one).Players take turns, Alice is first. Each player during his or her turn has to move the chip ,  or  cells to the left (so, if the chip is currently in the cell , the player can move it into cell ,  or ). The chip should not leave the borders of the paper strip: it is impossible, for example, to move it  cells to the left if the current cell has number . The player who can't make a move loses the game.Who wins if both participants play optimally?Alice and Bob would like to play several games, so you should determine the winner in each game.", "input": "The first line contains the single integer  () \u2014 the number of games. Next  lines contain one game per line. All games are independent. Each of the next  lines contains two integers  and  (, ) \u2014 the length of the strip and the constant denoting the third move, respectively.", "output": "For each game, print  if Alice wins this game and  otherwise.", "tutorial": "Let's determine for each cell whether it's winning or losing position (we can do it since the game is symmetric and doesn't depend on a player). The -th cell is obviously losing, the -st and -nd ones is both winning, since we can move to the -th cell and put our opponent in the losing position (here comes criterion: the position is winning if and only if there is a move to the losing position).If  is large enough, then the -th, -rd, -th, -th... are losing. So here comes divisibility by . If  then this move doesn't change anything, since if  then  so it's not the move to the losing position, so  doesn't become the winning one.Otherwise, if  then the -th positions becomes winning, but the -th cell is losing (all moves are to -th, -th or -st cells and all of them are winning). The -th and -th cells are winning and so on. In the end, we came up with cycle of length  where position divisible by  except  are losing.All we need to do is small case work.", "solution": "#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k;\n\ninline bool read() {\n\tif(!(cin >> n >> k))\n\t\treturn false;\n\treturn true;\n}\n\nvoid solve() {\n\tbool win = true;\n\tif(k % 3 == 0) {\n\t\tint np = n % (k + 1);\n\t\tif(np % 3 == 0 && np != k)\n\t\t\twin = false;\n\t} else {\n\t\tint np = n % 3;\n\t\tif(np == 0)\n\t\t\twin = false;\n\t}\n\t\n\tputs(win ? \"Alice\" : \"Bob\");\n}\n\nint main(){\n\tint T; cin >> T;\n\twhile(T--) {\n\t\tread();\n\t\tsolve();\n\t}\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}