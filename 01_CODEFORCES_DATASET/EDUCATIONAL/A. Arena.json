{"link": "https://codeforces.com//contest/1487/problem/A", "problemId": "897747", "shortId": "1487A", "contest_number": "1487", "name": "A. Arena", "statement": " heroes fight against each other in the Arena. Initially, the -th hero has level .Each minute, a fight between two different heroes occurs. These heroes can be chosen arbitrarily ().When two heroes of equal levels fight, nobody wins the fight. When two heroes of different levels fight, the one with the higher level wins, and his level increases by .The winner of the tournament is the first hero that wins in at least  fights . A  is a hero such that there exists a sequence of fights that this hero becomes the winner of the tournament.Calculate the number of  among  heroes.", "input": "The first line contains one integer  () \u2014 the number of test cases. Each test case consists of two lines. The first line contains one integer  () \u2014 the number of heroes. The second line contains  integers  (), where  is the initial level of the -th hero.", "output": "For each test case, print one integer \u2014 the number of  among the given  heroes.", "tutorial": "If for some hero , no other hero is weaker than , then the -th hero cannot win any fights and is not a possible winner. Otherwise, the hero  is a possible winner \u2014 he may fight the weakest hero  times and be declared the winner.So the solution to the problem is calculating the number of minimum elements in the array , since all other elements denote possible winners of the tournament.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int& x : a) cin >> x;\n    cout << n - count(a.begin(), a.end(), *min_element(a.begin(), a.end())) << endl;\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}