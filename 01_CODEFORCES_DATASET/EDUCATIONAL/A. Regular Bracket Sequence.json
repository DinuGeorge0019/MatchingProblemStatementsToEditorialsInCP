{"link": "https://codeforces.com//contest/1469/problem/A", "problemId": "847526", "shortId": "1469A", "contest_number": "1469", "name": "A. Regular Bracket Sequence", "statement": "A bracket sequence is called regular if it is possible to obtain correct arithmetic expression by inserting characters  and  into this sequence. For example, sequences ,  and  are regular, while ,  and  are not. Let's call a regular bracket sequence \"RBS\".You are given a sequence  of  characters , , and/or .  in this sequence.You have to replace every character  with either  or  (different characters  can be replaced with different brackets). .Determine if it is possible to obtain an RBS after these replacements.", "input": "The first line contains one integer  () \u2014 the number of test cases. Each test case consists of one line containing  () \u2014 a sequence of characters , , and/or .  in this sequence.", "output": "For each test case, print  if it is possible to obtain a regular bracket sequence, or  otherwise}.  You may print each letter in any case (for example, , , ,  will all be recognized as positive answer).", "tutorial": "There are two solutions to this problem: casework and greedy.The greedy solution goes as follows: the number of opening brackets in an RBS should be exactly , and if there is a closing bracket before an opening bracket, it's optimal to swap them, if possible. So, we should replace the first  question marks with opening brackets, other question marks with closing brackets, and if the answer exists, this method will find it. All that's left is to check that the resulting sequence is an RBS.The casework solution goes as follows: first of all, each RBS should have an even length, so if  is odd, there is no answer. Furthermore, an RBS always begins with an opening bracket and always ends with a closing bracket, so if the first character is a closing bracket or the last character is an opening bracket, there is no answer. Since there is at most one opening bracket and at most one closing bracket in the original sequence, these three constraints are enough: if the opening bracket is before the closing bracket, then they balance out, and all other characters can be replaced in such a way that they form an RBS of length . If the opening bracket is after the closing bracket, then the first and the last characters are question marks (since the first character is not a closing bracket, and the last one is not an opening bracket). We should replace the first character with an opening bracket, the last character with a closing bracket, so we get four characters (two opening and two closing brackets) which balance themselves out. All other question marks can be replaced in such a way that they form an RBS of length . So, all we have to check is that  is even, the first character is not a closing bracket, and the last character is not an opening bracket.", "solution": "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) % 2 == 0 and s[0] != ')' and s[-1] != '(':\n        print('YES')\n    else:\n        print('NO')", "interactive": false, "noSolution": false, "noTutorial": false}