{"link": "https://codeforces.com//contest/1354/problem/C1", "problemId": "623456", "shortId": "1354C1", "contest_number": "1354", "name": "C1. Simple Polygon Embedding", "statement": "You are given a regular polygon with  vertices (it's convex and has equal sides and equal angles) and all its sides have length . Let's name it as -gon.Your task is to find the square of the minimum size such that you can embed -gon in the square. Embedding -gon in the square means that you need to place -gon in the square in such way that each point which lies inside or on a border of -gon should also lie inside or on a border of the square.You can rotate -gon and/or the square.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of test cases. Next  lines contain descriptions of test cases\u00a0\u2014 one per line. Each line contains single  integer  (). Don't forget you need to embed -gon, not an -gon.", "output": "Print  real numbers\u00a0\u2014 one per test case. For each test case, print the minimum length of a side of the square -gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn't exceed .", "tutorial": "It's not hard to come up with a solution if you just imagine how -gon looks when  is even. The solution is to rotate -gon in such way that several its sides are parallel to sides of the square.   And the answer is equal to the distance from center to any side multiplied by two, or: ", "solution": "import kotlin.math.*\n\nfun main() {\n    val PI = acos(-1.0)\n    val T = readLine()!!.toInt()\n    for (tc in 1..T) {\n        val n = readLine()!!.toInt()\n        var ans : Double\n        if (n % 2 == 0) {\n            ans = 1.0 / tan(PI / (2 * n))\n        } else {\n            ans = cos(PI / (4 * n)) / sin(PI / (2 * n))\n        }\n        println(\"%.9f\".format(ans))\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}