{"link": "https://codeforces.com//contest/1709/problem/B", "problemId": "1473245", "shortId": "1709B", "contest_number": "1709", "name": "B. Also Try Minecraft", "statement": "You are beta testing the new secret Terraria update. This update will add quests to the game!Simply, the world map can be represented as an array of length , where the -th column of the world has height .There are  quests you have to test. The -th of them is represented by two integers  and . In this quest, you have to go from the column  to the column . At the start of the quest, you are appearing at the column .In one move, you can go from the column  to the column  or to the column . In this version, you have Spectre Boots, which allow you to fly. Since it is a beta version, they are bugged, so they only allow you to fly when you are going up and have infinite fly duration. When you are moving from the column with the height  to the column with the height , then you get some amount of fall damage. If the height  is greater than the height , you get  fall damage, otherwise you fly up and get  damage.For each of the given quests, determine the minimum amount of fall damage you can get during this quest.", "input": "The first line of the input contains two integers  and  ()\u00a0\u2014 the number of columns in the world and the number of quests you have to test, respectively. The second line of the input contains  integers  (), where  is the height of the -th column of the world. The next  lines describe quests. The -th of them contains two integers  and  (), which means you have to move from the column  to the column  during the -th quest. Note that  can be greater than .", "output": "Print  integers. The -th of them should be the minimum amount of fall damage you can get during the -th quest completion.", "tutorial": "So, the first idea that is coming into mind is prefix sums. Let's define two values  and . The value  means the amount of fall damage when we are going to the right from the column  to the column , and  means the amount of fall damage when we are going to the left from the column  to the column . Then let's build prefix sums on these two arrays. Now let  be the sum of all  on a prefix  (i.\u2009e. ), and  be the sum of all  on a prefix . Then if  in a query, the answer is , otherwise (if ) the answer is .Time complexity: .", "solution": "n, m = map(int, input().split())\na = list(map(int, input().split()))\nl = [0] + [max(0, a[i] - a[i + 1]) for i in range(n - 1)]\nr = [0] + [max(0, a[i] - a[i - 1]) for i in range(1, n)]\nfor i in range(n - 1):\n    l[i + 1] += l[i]\n    r[i + 1] += r[i]\nfor _ in range(m):\n    s, t = map(int, input().split())\n    if s < t:\n        print(l[t - 1] - l[s - 1])\n    else:\n        print(r[s - 1] - r[t - 1])", "interactive": false, "noSolution": false, "noTutorial": false}