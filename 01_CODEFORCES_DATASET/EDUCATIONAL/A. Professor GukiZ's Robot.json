{"link": "https://codeforces.com//contest/620/problem/A", "problemId": "45927", "shortId": "620A", "contest_number": "620", "name": "A. Professor GukiZ's Robot", "statement": "Professor GukiZ makes a new robot. The robot are in the point with coordinates  and should go to the point . In a single step the robot can change any of its coordinates (maybe both of them) by one (decrease or increase). So the robot can move in one of the  directions. Find the minimal number of steps the robot should make to get the finish position.", "input": "The first line contains two integers  () \u2014 the start position of the robot. The second line contains two integers  () \u2014 the finish position of the robot.", "output": "Print the only integer  \u2014 the minimal number of steps to get the finish position.", "tutorial": "Easy to see that the answer is .\n", "solution": "\n            #include <bits/stdc++.h>\n\u00a0\n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define ford(i, n) for (int i = int(n) - 1; i >= 0; i--)\n#define fore(i, l, r) for (int i = int(l); i < int(r); i++)\n#define correct(x, y, n, m) (0 <= (x) && (x) < (n) && 0 <= (y) && (y) < (m))\n#define all(a) (a).begin(), (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define mp(x, y) make_pair((x), (y))\n#define x first\n#define y second\n\u00a0\nusing namespace std;\n\u00a0\ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n\u00a0\ntemplate<typename X> inline X abs(const X& a) { return a < 0? -a: a; }\ntemplate<typename X> inline X sqr(const X& a) { return a * a; }\n\u00a0\nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld EPS = 1e-9, PI = 3.1415926535897932384626433832795;\n\u00a0\n#define x1 ____x1\n#define y1 ____y1\n\u00a0\nli x1, y1;\nli x2, y2;\n\u00a0\ninline bool read() {\n\u00a0 \u00a0 if (!(cin >> x1 >> y1)) return false;\n\u00a0 \u00a0 assert(cin >> x2 >> y2);\n\u00a0 \u00a0 return true;\n}\n\u00a0\ninline void solve() {\n\u00a0 \u00a0 cout << max(abs(x1 - x2), abs(y1 - y2)) << endl;\n}\n\u00a0\nint main() {\n#ifdef SU1\n\u00a0 \u00a0 assert(freopen(\"input.txt\", \"rt\", stdin));\n\u00a0 \u00a0 //assert(freopen(\"output.txt\", \"wt\", stdout));\n#endif\n\u00a0 \u00a0 \n\u00a0 \u00a0 cout << setprecision(10) << fixed;\n\u00a0 \u00a0 cerr << setprecision(5) << fixed;\n\u00a0\n\u00a0 \u00a0 while (read()) {\n\u00a0 \u00a0 \u00a0 \u00a0 solve();\n\u00a0 \u00a0 \u00a0 \u00a0 //break;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 \n\u00a0 \u00a0 return 0;\n}\n        ", "interactive": false, "noSolution": false, "noTutorial": false}