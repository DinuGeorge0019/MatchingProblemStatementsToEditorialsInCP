{"link": "https://codeforces.com//contest/915/problem/B", "problemId": "146469", "shortId": "915B", "contest_number": "915", "name": "B. Browser", "statement": "Luba is surfing the Internet. She currently has  opened tabs in her browser, indexed from  to  from left to right. The mouse cursor is currently located at the -th tab. Luba needs to use the tabs with indices from  to  (inclusive) for her studies, and she wants to close all the tabs that don't belong to this segment as fast as possible.Each second Luba can either try moving the cursor to the left or to the right (if the cursor is currently at the tab , then she can move it to the tab  or to the tab ) or try closing all the tabs to the left or to the right of the cursor (if the cursor is currently at the tab , she can close all the tabs with indices from segment  or from segment ). In the aforementioned expressions  and  denote the minimum and maximum index of an unclosed tab, respectively. For example, if there were  tabs initially and tabs ,  and  are closed, then , .What is the minimum number of seconds Luba has to spend in order to leave  opened?", "input": "The only line of input contains four integer numbers , , ,  (, , ) \u2014 the number of the tabs, the cursor position and the segment which Luba needs to leave opened.", "output": "Print one integer equal to the minimum number of seconds required to close all the tabs outside the segment .", "tutorial": "If  and  then the answer is . If  and  or  and  then answer is  or  respectively. And in the other case (when  and ) the answer is .", "solution": "#define _CRT_SECURE_NO_DEPRECATE\n#pragma comment(linker, \"/STACK:167772160000\")\n#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <stdio.h>\n#include <cstdlib>\n#include <stdlib.h>\n#include <string>\n#include <list>\n#include <fstream>\n#include <algorithm>\n#include <cmath>\n#include <map>\n#include <vector>\n#include <iomanip>\n#include <queue>\n#include <deque>\n#include <set>\n#include <stack>\n#include <sstream>\n#include <assert.h>\n#include <functional>\n#include <climits>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\n//typedef uint64_t ull;\n//typedef std::pair<long double,long double> pdd;\n#define for8(i) for( i = 1; i<=8; i++)\n#define fori(N)          for(int i = 0; i<(N); i++)\n#define forj(N)         for(int j = 0; j<(N); j++)\n#define fork(N)         for(int k = 0; k<(N); k++)\n#define forl(N)         for(int l = 0; l<(N); l++)\n#define ford(N)         for(int d = 0; d<(N); d++)\n#define fori1(N)          for(int i = 1; i<=(N); i++)\n#define forj1(N)         for(int j = 1; j<=(N); j++)\n#define fork1(N)         for(int k = 1; k<=(N); k++)\n#define ford1(N)         for(int d = 1; d<=(N); d++)\n#define PI (2*asin(1))\n#define read(n) scanf(\"%d\", &n);\n#define read2(n, m) scanf(\"%d%d\", &n, &m);\n#define readll(n) scanf(\"%I64d\", &n);\n#define mp make_pair\n\n\nint main()\n{\n\tios::sync_with_stdio(false); cin.tie(0);\n#if defined(_DEBUG) || defined(_RELEASE)\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\tint  n, pos, l, r;\n\tcin >> n >> pos >> l >> r;\n\tif (l == 1 && r == n) {\n\t\tcout << 0;\n\t\treturn 0;\n\t}\n\tif (l == 1 ) {\n\t\tcout << 1+abs(pos-r);\n\t\treturn 0;\n\t}\n\tif (r == n) {\n\t\tcout << 1 + abs(pos - l);\n\t\treturn 0;\n\t}\n\tcout << min(2 + abs(pos - l) + abs(r - l), 2 + abs(pos - r) + abs(r - l));\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}