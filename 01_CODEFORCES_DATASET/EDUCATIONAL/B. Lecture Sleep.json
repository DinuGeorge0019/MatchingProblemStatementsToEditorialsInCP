{"link": "https://codeforces.com//contest/961/problem/B", "problemId": "171413", "shortId": "961B", "contest_number": "961", "name": "B. Lecture Sleep", "statement": "Your friend Mishka and you attend a calculus lecture. Lecture lasts  minutes. Lecturer tells  theorems during the -th minute.Mishka is really interested in calculus, though it is so hard to stay awake for all the time of lecture. You are given an array  of Mishka's behavior. If Mishka is asleep during the -th minute of the lecture then  will be equal to , otherwise it will be equal to . When Mishka is awake he writes down all the theorems he is being told \u2014  during the -th minute. Otherwise he writes nothing.You know some secret technique to keep Mishka awake for  minutes straight. However you can use it . You can start using it at the beginning of any minute between  and . If you use it on some minute  then Mishka will be awake during minutes  such that  and will write down all the theorems lecturer tells.You task is to calculate the maximum number of theorems Mishka will be able to write down if you use your technique  to wake him up.", "input": "The first line of the input contains two integer numbers  and  () \u2014 the duration of the lecture in minutes and the number of minutes you can keep Mishka awake. The second line of the input contains  integer numbers  () \u2014 the number of theorems lecturer tells during the -th minute. The third line of the input contains  integer numbers  () \u2014 type of Mishka's behavior at the -th minute of the lecture.", "output": "Print only one integer \u2014 the maximum number of theorems Mishka will be able to write down if you use your technique  to wake him up.", "tutorial": "Let's iterate over all  from  to  and if  is equal to  then add  to the some variable  and replace  with . Then answer will be equal to , where  can be easily calculated with prefix sums for each .", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n#ifdef _DEBUG\n\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n\n\tint n, k;\n\tscanf(\"%d %d\", &n, &k);\n\t\n\tvector<int> a(n);\n\tvector<int> t(n);\n\t\n\tint overall = 0;\n\t\n\tfor (int i = 0; i < n; ++i)\n\t\tscanf(\"%d\", &a[i]);\n\tfor (int i = 0; i < n; ++i)\n\t\tscanf(\"%d\", &t[i]);\n\t\t\n\tvector<int> pr(n);\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (i) pr[i] += pr[i - 1];\n\t\tif (t[i] == 0) pr[i] += a[i];\n\t\telse overall += a[i];\n\t}\n\t\n\tint add = 0;\n\tfor (int i = k - 1; i < n; ++i)\n\t\tadd = max(add, pr[i] - (i >= k ? pr[i - k] : 0));\n\t\n\tprintf(\"%d\\n\", overall + add);\n\t\n\treturn 0;\n}", "interactive": false, "noSolution": false, "noTutorial": false}