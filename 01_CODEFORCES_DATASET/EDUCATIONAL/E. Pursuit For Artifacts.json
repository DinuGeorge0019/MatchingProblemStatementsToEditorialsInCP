{"link": "https://codeforces.com//contest/652/problem/E", "problemId": "52872", "shortId": "652E", "contest_number": "652", "name": "E. Pursuit For Artifacts", "statement": "Johnny is playing a well-known computer game. The game are in some country, where the player can freely travel, pass quests and gain an experience.In that country there are  islands and  bridges between them, so you can travel from any island to any other. In the middle of some bridges are lying ancient powerful artifacts. Johnny is not interested in artifacts, but he can get some money by selling some artifact.At the start Johnny is in the island  and the artifact-dealer is in the island  (possibly they are on the same island). Johnny wants to find some artifact, come to the dealer and sell it. The only difficulty is that bridges are too old and destroying right after passing over them. Johnnie's character can't swim, fly and teleport, so the problem became too difficult.Note that Johnny can't pass the half of the bridge, collect the artifact and return to the same island. Determine if Johnny can find some artifact and sell it.", "input": "The first line contains two integers  and  (, ) \u2014 the number of islands and bridges in the game. Each of the next  lines contains the description of the bridge \u2014 three integers , ,  (, , ), where  and  are the islands connected by the -th bridge,  equals to one if that bridge contains an artifact and to zero otherwise. There are no more than one bridge between any pair of islands. It is guaranteed that it's possible to travel between any pair of islands. The last line contains two integers  and  () \u2014 the islands where are Johnny and the artifact-dealer respectively.", "output": "If Johnny can find some artifact and sell it print the only word \"\" (without quotes). Otherwise print the word \"\" (without quotes).", "tutorial": "Edge biconnected component in an undirected graph is a maximal by inclusion set of vertices so that there are two edge disjoint paths between any pair of vertices. Consider the graph with biconnected components as vertices. Easy to see that it's a tree (if it contains some cycle then the whole cycle is a biconnected component). All edges are destroying when we passing over them so we can't returnto the same vertex (in the tree) after leaving it by some edge.\nConsider the biconncted components that contains the vertices  and . Let's denote them  and . Statement: the answer is YES if and only if on the path in the tree from the vertex  to the vertex  there are an edge with an artifact or there are a biconnected component that contains some edge with an artifact. Easy to see that the statement is true: if there are such edge then we can pass over it in the tree on the path from  to  or we can pass over it in biconnected component. The converse also easy to check.\nHere is one of the ways to find edge biconnected components:\n   Let's orient all edges to direction that depth first search passed it for the first time.   Let's find in new directed graph strongly connected components. \nStatement: the strongly connected components in the new graph coincide with the biconnected components in old undirected graph.\nAlso you can notice that the edges in tree is the bridges of the graph (bridges in terms of graph theory). So you can simply find the edges in the graph.\n", "solution": "forn(i, sz(g2[v])) {\n    int to = g2[v][i];\n    if (to == p) continue;\n    if (dfs3(to, v, t, ans)) {\n       ans |= good[v];\n       ans |= w2[v][i];\n       return true;\n    }\n}\nreturn false;", "interactive": false, "noSolution": false, "noTutorial": false}