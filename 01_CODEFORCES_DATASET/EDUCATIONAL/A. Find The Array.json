{"link": "https://codeforces.com//contest/1550/problem/A", "problemId": "1045981", "shortId": "1550A", "contest_number": "1550", "name": "A. Find The Array", "statement": "Let's call an array  consisting of  positive (greater than ) integers  if the following condition is held for every  from  to : either , or at least one of the numbers  and  exists in the array as well.For example:   the array  is beautiful: for , the number  exists in the array; for , the number  exists in the array; for , the condition  holds;  the array  is beautiful: for , the condition  holds; for every other number , the number  exists in the array;  the array  is not beautiful: for , neither  nor  exists in the array, and ;  the array  is not beautiful: for , neither  nor  exists in the array, and ;  the array  is beautiful: for , the number  exists in the array; for , the condition  holds; for , the number  exists in the array. You are given a positive integer . Find the minimum possible size of a beautiful array with the sum of elements equal to .", "input": "The first line contains one integer  () \u2014 the number of test cases. Then  lines follow, the -th line contains one integer  () for the -th test case.", "output": "Print  integers, the -th integer should be the answer for the -th testcase: the minimum possible size of a beautiful array with the sum of elements equal to .", "tutorial": "The maximum sum we can construct with  elements is , so we need at least  elements to construct the sum equal to . Let's show how to express  with exactly  elements.Let . By taking , we achieve a sum of  using  elements.  is not less than  and not greater than  (since , and ). Thus, we can just add  to our array, and the sum becomes exactly .So, the solution is to find the minimum  such that .", "solution": "def maxSum(x):\n\treturn x ** 2\n\ndef getAns(x):\n\tres = 1\n\twhile maxSum(res) < x:\n\t\tres += 1\n\treturn res\n\ndef main():\n\tt = int(input())\n\tfor i in range(t):\n\t\tprint(getAns(int(input())))\n\nmain()", "interactive": false, "noSolution": false, "noTutorial": false}