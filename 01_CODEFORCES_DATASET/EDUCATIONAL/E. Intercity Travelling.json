{"link": "https://codeforces.com//contest/1009/problem/E", "problemId": "197476", "shortId": "1009E", "contest_number": "1009", "name": "E. Intercity Travelling", "statement": "Leha is planning his journey from Moscow to Saratov. He hates trains, so he has decided to get from one city to another by car.The path from Moscow to Saratov can be represented as a straight line (well, it's not that straight in reality, but in this problem we will consider it to be straight), and the distance between Moscow and Saratov is  km. Let's say that Moscow is situated at the point with coordinate  km, and Saratov \u2014 at coordinate  km.Driving for a long time may be really difficult. Formally, if Leha has already covered  kilometers since he stopped to have a rest, he considers the  -th kilometer as . It is guaranteed that for every  . The difficulty of the journey is denoted as the sum of difficulties of each kilometer in the journey.Fortunately, there may be some rest sites between Moscow and Saratov. Every integer point from  to  may contain a rest site. When Leha enters a rest site, he may have a rest, and the next kilometer will have difficulty , the kilometer after it \u2014 difficulty , and so on.For example, if  and there is a rest site in coordinate , the difficulty of journey will be : the first kilometer will have difficulty , the second one \u2014 , then Leha will have a rest, and the third kilometer will have difficulty , the fourth \u2014 , and the last one \u2014 . Another example: if  and there are rest sites in coordinates  and , the difficulty of Leha's journey is .Leha doesn't know which integer points contain rest sites. So he has to consider every possible situation. Obviously, there are  different distributions of rest sites (two distributions are different if there exists some point  such that it contains a rest site in exactly one of these distributions). Leha considers all these distributions to be equiprobable. He wants to calculate  \u2014 the expected value of difficulty of his journey.Obviously,  is an integer number. You have to calculate it modulo .", "input": "The first line contains one number  () \u2014 the distance from Moscow to Saratov. The second line contains  integer numbers , , ...,  (), where  is the difficulty of -th kilometer after Leha has rested.", "output": "Print one number \u2014 , taken modulo .", "tutorial": "Let's consider each kilometer of the journey separatedly and calculate the expected value of its difficulty (and then use linearity of expectation to obtain the answer).The difficulty of each kilometer depends on the rest site right before it (or, if there were no rest sites, on the distance from Moscow to this kilometer). So when considering the difficulty of -th kilometer (one-indexed), we may obtain a formula:. The denominator of the last summand is  because it represents the situation where the last rest was in Moscow, and its probability is exactly .We can actually rewrite this as follows: , , thus calculating all that we need in linear time.", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int MOD = 998244353;\n\nint add(int x, int y)\n{\n    x += y;\n    while(x >= MOD)\n        x -= MOD;\n    while(x < 0)\n        x += MOD;\n    return x;\n}\n\nint mul(int x, int y)\n{\n    return (x * 1ll * y) % MOD;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    vector<int> a(n);\n    for(int i = 0; i < n; i++)\n        scanf(\"%d\", &a[i]);\n        \n    int ans = 0;\n    vector<int> pw2(1, 1);\n    while(pw2.size() < n)\n        pw2.push_back(mul(pw2.back(), 2));\n    int cur = mul(pw2[n - 1], a[0]);\n    for(int i = 0; i < n; i++)\n    {\n        ans = add(ans, cur);\n        if(i < n - 1)\n        {\n            cur = add(cur, -mul(pw2[n - 2 - i], a[i]));\n            cur = add(cur, mul(pw2[n - 2 - i], a[i + 1]));\n        }\n    }\n    printf(\"%d\\n\", ans);\n}", "interactive": false, "noSolution": false, "noTutorial": false}