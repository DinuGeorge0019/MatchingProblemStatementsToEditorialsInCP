{"link": "https://codeforces.com//contest/1749/problem/A", "problemId": "1596422", "shortId": "1749A", "contest_number": "1749", "name": "A. Cowardly Rooks", "statement": "There's a chessboard of size .  rooks are placed on it in such a way that:   no two rooks occupy the same cell;  no two rooks attack each other. A rook attacks all cells that are in its row or column.Is it possible to move  rook (you can choose which one to move) into a different cell so that no two rooks still attack each other? A rook can move into any cell in its row or column if no other rook stands on its path.", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. The first line of each testcase contains two integers  and  ()\u00a0\u2014 the size of the chessboard and the number of the rooks. The -th of the next  lines contains two integers  and  ()\u00a0\u2014 the position of the -th rook:  is the row and  is the column. No two rooks occupy the same cell. No two rooks attack each other.", "output": "For each testcase, print \"\" if it's possible to move exactly one rook into a different cell so that no two rooks still attack each other. Otherwise, print \"\".", "tutorial": "First, note that  is always less than or equal to . If there were at least  rooks on the board, at least two of them would share a row or a column (by pigeonhole principle).If , then there is always at least one free row and at least one free column. You can move any rook into that row or column.Otherwise, all rows and columns are taken, so any move will make two rooks share a row or a column, which is prohibited.Thus, if , then it's \"\". Otherwise, it's \"\".Overall complexity:  per testcase.Alternatively, you could check every rook and every possible move.Overall complexity:  per testcase.", "solution": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    for _ in range(m):\n        input()\n    print(\"NO\" if n == m else \"YES\")", "interactive": false, "noSolution": false, "noTutorial": false}