{"link": "https://codeforces.com//contest/1334/problem/C", "problemId": "590683", "shortId": "1334C", "contest_number": "1334", "name": "C. Circle of Monsters", "statement": "You are playing another computer game, and now you have to slay  monsters. These monsters are standing in a circle, numbered clockwise from  to . Initially, the -th monster has  health.You may shoot the monsters to kill them. Each shot requires exactly one bullet and decreases the health of the targeted monster by  (deals  damage to it). Furthermore, when the health of some monster  becomes  or less than , it dies and explodes, dealing  damage to the next monster (monster , if , or monster , if ). If the next monster is already dead, then nothing happens. If the explosion kills the next monster, it explodes too, damaging the monster after it and possibly triggering another explosion, and so on.You have to calculate the minimum number of bullets you have to fire to kill all  monsters in the circle.", "input": "The first line contains one integer  () \u2014 the number of test cases. Then the test cases follow, each test case begins with a line containing one integer  () \u2014 the number of monsters. Then  lines follow, each containing two integers  and  () \u2014 the parameters of the -th monster in the circle. It is guaranteed that the total number of monsters in all test cases does not exceed .", "output": "For each test case, print one integer \u2014 the minimum number of bullets you have to fire to kill all of the monsters.", "tutorial": "We cannot utilize the explosion of the last monster we kill. So the naive approach is to iterate on the monster we kill the last, break the circle between this monster and the next one, and then shoot the first monster in the broken circle until it's dead, then the second one, and so on.Let's calculate the number of bullets we will fire this way. If the circle is broken after the monster , then the first monster gets  bullets, the second one \u2014 , and so on; all monsters except the first one get exactly  bullets. So we should choose an index  such that  is minimum possible, since this is the number of bullets we have to spend additionally since we cannot utilize the explosion of the -th monster. After breaking the circle between the monsters  and , you may use a formula to calculate the required number of bullets, or just model the shooting.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define forn(i, n) for (int i = 0; i < int(n); ++i)\n\ntypedef long long li;\n\nconst int N = 300 * 1000 + 13;\n\nint n;\nli a[N], b[N];\n\nvoid solve() {\n\tscanf(\"%d\", &n);\n\tforn(i, n) scanf(\"%lld%lld\", &a[i], &b[i]);\n\t\n\tli ans = 0, mn = 1e18;\n\tforn(i, n) {\n\t\tint ni = (i + 1) % n;\n\t\tli val = min(a[ni], b[i]);\n\t\tans += a[ni] - val;\n\t\tmn = min(mn, val);\n\t}\n\tans += mn;\n\tprintf(\"%lld\\n\", ans);\n}\n\nint main() {\n\tint T;\n\tscanf(\"%d\", &T);\n\tforn(i, T)\n\t\tsolve();\n}", "interactive": false, "noSolution": false, "noTutorial": false}