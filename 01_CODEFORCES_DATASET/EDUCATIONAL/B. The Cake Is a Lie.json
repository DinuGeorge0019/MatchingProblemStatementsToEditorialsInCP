{"link": "https://codeforces.com//contest/1519/problem/B", "problemId": "971587", "shortId": "1519B", "contest_number": "1519", "name": "B. The Cake Is a Lie", "statement": "There is a  grid. You are standing at cell  and your goal is to finish at cell .You can move to the neighboring cells to the right or down. In other words, suppose you are standing at cell . You can:   move right to the cell \u00a0\u2014 it costs  burles;  move down to the cell \u00a0\u2014 it costs  burles. Can you reach cell  spending   burles?", "input": "The first line contains the single integer  ()\u00a0\u2014 the number of test cases. The first and only line of each test case contains three integers , , and  (; )\u00a0\u2014 the sizes of grid and the exact amount of money you need to spend.", "output": "For each test case, if you can reach cell  spending   burles, print . Otherwise, print . You may print every letter in any case you want (so, for example, the strings , ,  and  are all recognized as positive answer).", "tutorial": "Note that whichever path you choose, the total cost will be the same. If you know that the cost is the same, then it's not hard to calculate it. It's equal to . So the task is to check: is  equal to  or not.The constant cost may be proved by induction on : for  cost is . For a fixed , there are only two last steps you can make:   either from  with cost : the total cost is     or from  with cost : the total cost is   . So, whichever path you choose, the total cost is the same.", "solution": "fun main() {\n    repeat(readLine()!!.toInt()) {\n        val (n, m, k) = readLine()!!.split(' ').map { it.toInt() }\n        println(if (n * m - 1 == k) \"YES\" else \"NO\")\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}