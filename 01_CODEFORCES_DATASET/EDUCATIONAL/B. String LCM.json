{"link": "https://codeforces.com//contest/1473/problem/B", "problemId": "864970", "shortId": "1473B", "contest_number": "1473", "name": "B. String LCM", "statement": "Let's define a multiplication operation between a string  and a positive integer :  is the string that is a result of writing  copies of  one after another. For example, \"\"  \"\", \"\"  \"\".A string  is divisible by another string  if there exists an integer  such that . For example, \"\" is divisible by \"\", but is not divisible by \"\" or \"\".LCM of two strings  and  (defined as ) is the shortest non-empty string that is divisible by both  and .You are given two strings  and . Find  or report that it does not exist. It can be shown that if  exists, it is unique.", "input": "The first line contains one integer  () \u2014 the number of test cases. Each test case consists of two lines, containing strings  and  (). Each character in each of these strings is either '' or ''.", "output": "For each test case, print  if it exists; otherwise, print . It can be shown that if  exists, it is unique.", "tutorial": "We should notice that if some string  is a multiple of string , then  is a multiple of . This fact leads us to the conclusion that  should be a common multiple of  and . Since we want to minimize the length of the string , then its length is .So we have to check that  copies of the string  equal to  copies of the string . If such strings are equal, print them, otherwise, there is no solution.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  auto mul = [](string s, int k) -> string {\n    string res = \"\";\n    while (k--) res += s;\n    return res;\n  };\n  \n  int tc;\n  cin >> tc;\n  while (tc--) {\n    string s, t;\n    cin >> s >> t;\n    int n = s.length(), m = t.length();\n    int g = __gcd(n, m);\n    if (mul(s, m / g) == mul(t, n / g))\n      cout << mul(s, m / g) << endl;\n    else\n      cout << \"-1\" << endl;\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}