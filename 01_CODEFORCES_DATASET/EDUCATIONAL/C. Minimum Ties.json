{"link": "https://codeforces.com//contest/1487/problem/C", "problemId": "897749", "shortId": "1487C", "contest_number": "1487", "name": "C. Minimum Ties", "statement": "A big football championship will occur soon!  teams will compete in it, and each pair of teams will play exactly one game against each other.There are two possible outcomes of a game:  the game may result in a tie, then both teams get  point;  one team might win in a game, then the winning team gets  points and the losing team gets  points. The score of a team is the number of points it gained during all games that it played.You are interested in a hypothetical situation when all teams get the same score at the end of the championship. A simple example of that situation is when all games result in ties, but you want to minimize the number of ties as well.Your task is to describe a situation (choose the result of each game) so that all teams get the same score, and the number of ties is the minimum possible.", "input": "The first line contains one integer  () \u2014 the number of test cases. Then the test cases follow. Each test case is described by one line containing one integer  () \u2014 the number of teams.", "output": "For each test case, print  integers describing the results of the games in the following order: the first integer should correspond to the match between team  and team , the second \u2014 between team  and team , then  and , ...,  and ,  and ,  and , ...,  and , and so on, until the game between the team  and the team . The integer corresponding to the game between the team  and the team  should be  if  wins,  if  wins, or  if the game results in a tie. All teams should get the same score, and the number of ties should be the minimum possible. If there are multiple optimal answers, print any of them. It can be shown that there always exists a way to make all teams have the same score.", "tutorial": "If  is odd, then we can solve the problem without any ties: each team should win exactly  matches and lose the same number of matches. Finding which matches each team wins and which matches each team loses can be done with some graph algorithms (like Eulerian cycles or circulations), or with a simple construction: place all teams in a circle in any order, and let the -th team win against the next  teams after it in the circle, and lose to all other teams.Unfortunately, if  is even, we need to use some ties since the total sum of scores over all teams is exactly  when there are no ties, and this number is not divisible by  when  is even. Each tie reduces the total sum by , and the minimum number of ties to make  divisible by  is  (since ). So, if we find an answer with exactly  ties, it is optimal. And it's easy to find one: once again, place all teams in a circle in any order; make the -th team win against  next teams in the circle, lose against  previous teams in the circle, and tie with the opposite team in the circle.", "solution": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    int t;\n    cin >> t;\n    for(int i = 0; i < t; i++)\n    {\n        int n;\n        cin >> n;\n        if(n % 2 == 1)\n        {\n            for(int i = 0; i < n; i++)\n                for(int j = i + 1; j < n; j++)\n                    if(j - i <= n / 2)\n                        cout << 1 << \" \";\n                    else\n                        cout << -1 << \" \";\n            cout << endl;\n        }\n        else\n        {\n            for(int i = 0; i < n; i++)\n                for(int j = i + 1; j < n; j++)\n                    if(j - i < n / 2)\n                        cout << 1 << \" \";\n                    else if(j - i == n / 2)\n                        cout << 0 << \" \";\n                    else\n                        cout << -1 << \" \";\n            cout << endl;\n        }\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}