{"link": "https://codeforces.com//contest/837/problem/B", "problemId": "116708", "shortId": "837B", "contest_number": "837", "name": "B. Flag of Berland", "statement": "The flag of Berland is such rectangular field  that satisfies following conditions:  Flag consists of three colors which correspond to letters ,  and .  Flag consists of three equal in width and height stripes, parralel to each other and to sides of the flag. Each stripe has .  Each color should be used in . You are given a field , consisting of characters ,  and . Output \"\" (without quotes) if this field corresponds to correct flag of Berland. Otherwise, print \"\" (without quotes).", "input": "The first line contains two integer numbers  and  () \u2014 the sizes of the field. Each of the following  lines consisting of  characters ,  and  \u2014 the description of the field.", "output": "Print \"\" (without quotes) if the given field corresponds to correct flag of Berland . Otherwise, print \"\" (without quotes).", "tutorial": "There are lots of ways to check correctness. For example, you can keep boolean array with already used colors, check stripes naively and mark the color used if the stripe has single color. If all the colors are used in the end then the answer is .Overall complexity: .", "solution": "#include <stdio.h>\n#include <algorithm>\n#include <assert.h>\n#include <bitset>\n#include <cmath>\n#include <complex>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <limits.h>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <set>\n#include <stdlib.h>\n#include <string.h>\n#include <string>\n#include <time.h>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\n#pragma warning(disable:4996)\n#pragma comment(linker, \"/STACK:1048576\")\nusing namespace std;\n\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define ldb ldouble\n#define rf(x) (x)=0;while(*p<48)p++;while(47<*p)(x)=((x)<<3)+((x)<<1)+(*p++&15);\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\ntypedef pair <ll, int> pli;\ntypedef pair <db, db> pdd;\ntypedef tuple <int, int, int> t3;\n\nint IT_MAX = 1 << 18;\nconst ll MOD = 1000000009;\nconst int INF = 0x3f3f3f3f;\nconst ll LL_INF = 1234567890123456789ll;\nconst db PI = acos(-1);\nconst db EPS = 1e-8;\n#define szz(x) (int)(x).size()\n#define rep(i, n) for(int i=0;i<(n);i++)\n\nchar in[105][105];\nchar u[105][105];\nbool isValid(int N, int M) {\n\tif (N % 3) return false;\n\n\tchar x[4] = \"BGR\";\n\tdo {\n\t\tfor (int i = 0; i < N; i++) for (int j = 0; j < M; j++) u[i][j] = x[i / (N / 3)];\n\t\t\n\t\tint i, j;\n\t\tfor (i = 0; i < N; i++) {\n\t\t\tfor (j = 0; j < M; j++) if (in[i][j] != u[i][j]) break;\n\t\t\tif (j < M) break;\n\t\t}\n\t\tif (i >= N) return true;\n\t} while (next_permutation(x, x + 3));\n\treturn false;\n}\nint main() {\n\tint N, M, i, j;\n\tscanf(\"%d %d\", &N, &M);\n\tfor (i = 0; i < N; i++) scanf(\"%s\", in[i]);\n\n\tif (isValid(N, M)) return !printf(\"YES\\n\");\n\tfor (i = 0; i < N; i++) for (j = 0; j < M; j++) u[j][i] = in[i][j];\n\tfor (i = 0; i < N; i++) for (j = 0; j < M; j++) in[j][i] = u[j][i];\n\tif (isValid(M, N)) return !printf(\"YES\\n\");\n\treturn !printf(\"NO\\n\");\n}", "interactive": false, "noSolution": false, "noTutorial": false}