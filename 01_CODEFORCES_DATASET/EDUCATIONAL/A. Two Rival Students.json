{"link": "https://codeforces.com//contest/1257/problem/A", "problemId": "470636", "shortId": "1257A", "contest_number": "1257", "name": "A. Two Rival Students", "statement": "You are the gym teacher in the school.There are  students in the row. And there are two rivalling students among them. The first one is in position , the second in position . Positions are numbered from  to  from left to right.Since they are rivals, you want to maximize the distance between them. If students are in positions  and  respectively, then distance between them is . You can do the following operation at most  times: choose two  students and swap them.Calculate the maximum distance between two rivalling students after at most  swaps.", "input": "The first line contains one integer  () \u2014 the number of test cases. The only line of each test case contains four integers , ,  and  (, , , ) \u2014 the number of students in the row, the number of swaps which you can do, and positions of first and second rivaling students respectively.", "output": "For each test case print one integer \u2014 the maximum distance between two rivaling students which you can obtain.", "tutorial": "To solve the problem you need to understand two facts:   The answer can't be greater than ;  If current distance between rivaling student if less then  we always can increment this distance by one swap; In means that answer is equal to .", "solution": "import kotlin.math.abs\nfun main() {\n    val q = readLine()!!.toInt()\n    for (ct in 1..q) {\n        val (n, x, a, b) = readLine()!!.split(' ').map { it.toInt() }\n        println(minOf(n - 1, abs(a - b) + x))\n    }\n}", "interactive": false, "noSolution": false, "noTutorial": false}