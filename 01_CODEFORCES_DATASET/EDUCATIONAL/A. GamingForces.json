{"link": "https://codeforces.com//contest/1792/problem/A", "problemId": "1749559", "shortId": "1792A", "contest_number": "1792", "name": "A. GamingForces", "statement": "Monocarp is playing a computer game. He's going to kill  monsters, the -th of them has  health.Monocarp's character has two spells, either of which he can cast an arbitrary number of times (possibly, zero) and in an arbitrary order:   choose exactly two alive monsters and decrease their health by ;  choose a single monster and kill it. When a monster's health becomes , it dies.What's the minimum number of spell casts Monocarp should perform in order to kill all monsters?", "input": "The first line contains a single integer  ()\u00a0\u2014 the number of testcases. The first line of each testcase contains a single integer  ()\u00a0\u2014 the number of monsters. The second line contains  integers  ()\u00a0\u2014 the health of each monster. The sum of  over all testcases doesn't exceed .", "output": "For each testcase, print a single integer\u00a0\u2014 the minimum number of spell casts Monocarp should perform in order to kill all monsters.", "tutorial": "The first spell looks pretty weak compared to the second spell. Feels like you almost always replace one with another. Let's show that you can totally avoid casting the spell of the first type twice or more on one monster.Let the two first spell casts be  and  for some monsters  and . You can replace them by a cast of the second spell on  and a cast of the first spell on . That would deal even more damage to  and the same amount to  and . The number of casts doesn't change.Thus, it only makes sense to use the first spell on monsters with  health. Calculate the number of them, kill the full pairs of them with the first spell, and use the second spell on the remaining monsters.Overall complexity:  per testcase.", "solution": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int cnt1 = 0;\n    for (int i = 0; i < n; ++i) {\n      int x;\n      cin >> x;\n      cnt1 += (x == 1);\n    }\n    cout << n - cnt1 / 2 << '\\n';\n  }\n}", "interactive": false, "noSolution": false, "noTutorial": false}